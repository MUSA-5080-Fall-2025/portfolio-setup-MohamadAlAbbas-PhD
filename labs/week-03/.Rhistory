# Check that you got what you expected
test_data
# Common patterns to remember:
common_variables <- tribble(
~concept, ~typical_code, ~description,
"Total Population", "B01003_001", "Total population",
"Median Age", "B01002_001", "Median age of population",
"Median HH Income", "B19013_001", "Median household income",
"White Population", "B03002_003", "White alone population",
"Black Population", "B03002_004", "Black/African American alone",
"Hispanic Population", "B03002_012", "Hispanic or Latino population",
"Bachelor's Degree", "B15003_022", "Bachelor's degree or higher",
"Median Rent", "B25058_001", "Median contract rent",
"Median Home Value", "B25077_001", "Median value owner-occupied"
)
print("Common Census Variables:")
common_variables
# Get county-level data for your state
county_data <- get_acs(
geography = "county",
variables = c(
total_pop = "B01003_001",       # Total population
median_income = "B19013_001",   # Median household income
median_age = "B01002_001"       # Median age
),
state = state_choice,
year = 2022,
output = "wide"
)
# Clean county names
county_data <- county_data %>%
mutate(county_name = str_remove(NAME, paste0(", ", state_choice)))
# Basic inspection
glimpse(county_data)
# Create histogram of median income
ggplot(county_data) +
aes(x = median_incomeE) +
geom_histogram(bins = 15, fill = "steelblue", alpha = 0.7) +
labs(
title = "Distribution of Median Household Income",
x = "Median Household Income ($)",
y = "Number of Counties"
) +
theme_minimal() +
scale_x_continuous(labels = dollar)
# Box plot to see outliers clearly
ggplot(county_data) +
aes(y = median_incomeE) +
geom_boxplot(fill = "lightblue", width = 0.5) +
labs(
title = "Median Income Distribution with Outliers",
y = "Median Household Income ($)"
) +
theme_minimal() +
scale_y_continuous(labels = dollar)
# Identify the outlier counties
income_outliers <- county_data %>%
mutate(
Q1 = quantile(median_incomeE, 0.25, na.rm = TRUE),
Q3 = quantile(median_incomeE, 0.75, na.rm = TRUE),
IQR = Q3 - Q1,
outlier = median_incomeE < (Q1 - 1.5 * IQR) | median_incomeE > (Q3 + 1.5 * IQR)
) %>%
filter(outlier) %>%
select(county_name, median_incomeE)
print("Outlier counties:")
income_outliers
# Create histogram of median income
ggplot(county_data) +
aes(x = total_popE) +
geom_histogram(bins = 15, fill = "darkgreen", alpha = 0.7) +
labs(
title = "Distribution of Total Population",
x = "Total Population",
y = "Number of Counties"
) +
theme_minimal() +
scale_x_continuous(labels = Total Population)
# Create histogram of median income
ggplot(county_data) +
aes(x = total_popE) +
geom_histogram(bins = 15, fill = "darkgreen", alpha = 0.7) +
labs(
title = "Distribution of Total Population",
x = "Total Population",
y = "Number of Counties"
) +
theme_minimal() +
scale_x_continuous(labels = "Total Population")
# Create histogram of median income
ggplot(county_data) +
aes(x = total_popE) +
geom_histogram(bins = 15, fill = "darkgreen", alpha = 0.7) +
labs(
title = "Distribution of Total Population",
x = "Total Population",
y = "Number of Counties"
) +
theme_minimal() +
scale_x_continuous(labels = Population)
# Create histogram of median income
ggplot(county_data) +
aes(x = total_popE) +
geom_histogram(bins = 15, fill = "darkgreen", alpha = 0.7) +
labs(
title = "Distribution of Total Population",
x = "Total Population",
y = "Number of Counties"
) +
theme_minimal()
# Create histogram of median income
ggplot(county_data) +
aes(x = total_popE) +
geom_histogram(bins = 15, fill = "darkgreen", alpha = 0.7) +
labs(
title = "Distribution of Total Population",
x = "Total Population",
y = "Number of Counties"
) +
theme_minimal() +
scale_x_continuous(labels = comma)
# Enhanced scatter plot with trend line
ggplot(county_data) +
aes(x = total_popE, y = median_incomeE) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = TRUE, color = "red") +
labs(
title = "Population vs Median Income in Pennsylvania Counties",
subtitle = "2018-2022 ACS 5-Year Estimates",
x = "Total Population",
y = "Median Household Income ($)",
caption = "Source: U.S. Census Bureau"
) +
theme_minimal() +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = dollar)
# Calculate correlation
correlation <- cor(county_data$total_popE, county_data$median_incomeE, use = "complete.obs")
print(paste("Correlation coefficient:", round(correlation, 3)))
# Basic scatter plot
ggplot(county_data) +
aes(x = total_popE, y = median_incomeE) +
geom_point() +
labs(
title = "Population vs Median Income",
x = "Total Population",
y = "Median Household Income ($)"
) +
theme_minimal() +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = dollar)
# Enhanced scatter plot with trend line
ggplot(county_data) +
aes(x = total_popE, y = median_incomeE) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = TRUE, color = "red") +
labs(
title = "Population vs Median Income in Pennsylvania Counties",
subtitle = "2018-2022 ACS 5-Year Estimates",
x = "Total Population",
y = "Median Household Income ($)",
caption = "Source: U.S. Census Bureau"
) +
theme_minimal() +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = dollar)
# Calculate correlation
correlation <- cor(county_data$total_popE, county_data$median_incomeE, use = "complete.obs")
print(paste("Correlation coefficient:", round(correlation, 3)))
# Enhanced scatter plot with trend line
ggplot(county_data) +
aes(x = total_popE, y = median_incomeE) +
geom_point(alpha = 0.7) +
labs(
title = "Population vs Median Income in Pennsylvania Counties",
subtitle = "2018-2022 ACS 5-Year Estimates",
x = "Total Population",
y = "Median Household Income ($)",
caption = "Source: U.S. Census Bureau"
) +
theme_minimal() +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = dollar)
# Calculate correlation
correlation <- cor(county_data$total_popE, county_data$median_incomeE, use = "complete.obs")
print(paste("Correlation coefficient:", round(correlation, 3)))
# Enhanced scatter plot with trend line
ggplot(county_data) +
aes(x = total_popE, y = median_incomeE) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = TRUE, color = "red") +
labs(
title = "Population vs Median Income in Pennsylvania Counties",
subtitle = "2018-2022 ACS 5-Year Estimates",
x = "Total Population",
y = "Median Household Income ($)",
caption = "Source: U.S. Census Bureau"
) +
theme_minimal() +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = dollar)
# Calculate correlation
correlation <- cor(county_data$total_popE, county_data$median_incomeE, use = "complete.obs")
print(paste("Correlation coefficient:", round(correlation, 3)))
# Log-transformed scatter plot
ggplot(county_data) +
aes(x = log(total_popE), y = median_incomeE) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = TRUE) +
labs(
title = "Log(Population) vs Median Income",
x = "Log(Total Population)",
y = "Median Household Income ($)"
) +
theme_minimal() +
scale_y_continuous(labels = dollar)
View(county_data)
# Log-transformed scatter plot
ggplot(county_data) +
aes(x = median_ageE, y = median_incomeE) +
geom_point(alpha = 0.7) +
geom_smooth(method = "loess", se = TRUE, color ="red") +
labs(
title = "Log(Population) vs Median Income",
x = "Log(Total Population)",
y = "Median Household Income ($)"
) +
theme_dark() +
scale_y_continuous(labels = dollar)
# Log-transformed scatter plot
ggplot(county_data) +
aes(x = median_ageE, y = median_incomeE) +
geom_point(alpha = 0.7) +
geom_smooth(method = "loess", se = TRUE, color ="red") +
labs(
title = "Median Age vs Median Income",
x = "Median Age",
y = "Median Household Income ($)"
) +
theme_dark() +
scale_y_continuous(labels = dollar)
# Log-transformed scatter plot
ggplot(county_data) +
aes(x = median_ageE, y = median_incomeE) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = TRUE, color ="red") +
labs(
title = "Median Age vs Median Income",
x = "Median Age",
y = "Median Household Income ($)"
) +
theme_dark() +
scale_y_continuous(labels = dollar)
# Log-transformed scatter plot
ggplot(county_data) +
aes(x = median_ageE, y = median_incomeE) +
geom_point(alpha = 0.7) +
geom_smooth(method = "loess", se = TRUE, color ="red") +
labs(
title = "Median Age vs Median Income",
x = "Median Age",
y = "Median Household Income ($)"
) +
theme_dark() +
scale_y_continuous(labels = dollar)
# Calculate MOE percentages
county_reliability <- county_data %>%
mutate(
income_moe_pct = (median_incomeM / median_incomeE) * 100,
pop_category = case_when(
total_popE < 50000 ~ "Small (<50K)",
total_popE < 200000 ~ "Medium (50K-200K)",
TRUE ~ "Large (200K+)"
)
)
# MOE by population size
ggplot(county_reliability) +
aes(x = total_popE, y = income_moe_pct) +
geom_point(alpha = 0.7) +
geom_hline(yintercept = 10, color = "red", linetype = "dashed") +
labs(
title = "Data Reliability Decreases with Population Size",
x = "Total Population",
y = "Margin of Error (%)",
caption = "Red line = 10% reliability threshold"
) +
theme_minimal() +
scale_x_continuous(labels = comma)
# Box plots by population category
ggplot(county_reliability) +
aes(x = pop_category, y = income_moe_pct, fill = pop_category) +
geom_boxplot() +
labs(
title = "Data Reliability by County Size Category",
x = "Population Category",
y = "Margin of Error (%)"
) +
theme_minimal() +
theme(legend.position = "none")  # Remove legend since x-axis is clear
# Box plots by population category
county_reliability <- county_data %>%
mutate(
age_moe_pct = (median_ageM / median_ageE) * 100
)
# MOE by population size
ggplot(county_reliability) +
aes(x = total_popE, y = age_moe_pct) +
geom_point(alpha = 0.7, color="purple", size = 2) +
geom_hline(yintercept = 0.5, color = "blue", linetype = "dashed") +
labs(
title = "Data Reliability Decreases with Population Size",
x = "Total Population",
y = "Margin of Error (%)",
caption = "Red line = 10% reliability threshold"
) +
theme_classic() +
scale_x_continuous(labels = comma)
ggplot(county_reliability) +
aes(x = pop_category, y = age_moe_pct, fill = pop_category) +
geom_boxplot() +
labs(
title = "Data Reliability by County Size Category",
x = "Population Category",
y = "Age Margin of Error (%)"
) +
theme_minimal() +
theme(legend.position = "none")  # Remove legend since x-axis is clear
# Box plots by population category
county_reliability <- county_data %>%
mutate(
age_moe_pct = (median_ageM / median_ageE) * 100
)
# MOE by population size
ggplot(county_reliability) +
aes(x = total_popE, y = age_moe_pct) +
geom_point(alpha = 0.7, color="purple", size = 2) +
geom_hline(yintercept = 5, color = "blue", linetype = "dashed") +
labs(
title = "Data Reliability Decreases with Population Size",
x = "Total Population",
y = "Margin of Error (%)",
caption = "Blue line = 5% reliability threshold"
) +
theme_classic() +
scale_x_continuous(labels = comma)
ggplot(county_reliability) +
aes(x = pop_category, y = age_moe_pct, fill = pop_category) +
geom_boxplot() +
labs(
title = "Data Reliability by County Size Category",
x = "Population Category",
y = "Age Margin of Error (%)"
) +
theme_minimal() +
theme(legend.position = "none")  # Remove legend since x-axis is clear
View(county_reliability)
# Box plots by population category
county_reliability <- county_data %>%
mutate(
age_moe_pct = (median_ageM / median_ageE *100)
)
# MOE by population size
ggplot(county_reliability) +
aes(x = total_popE, y = age_moe_pct) +
geom_point(alpha = 0.7, color="purple", size = 2) +
geom_hline(yintercept = 5, color = "blue", linetype = "dashed") +
labs(
title = "Data Reliability Decreases with Population Size",
x = "Total Population",
y = "Margin of Error (%)",
caption = "Blue line = 5% reliability threshold"
) +
theme_classic() +
scale_x_continuous(labels = comma)
ggplot(county_reliability) +
aes(x = pop_category, y = age_moe_pct, fill = pop_category) +
geom_boxplot() +
labs(
title = "Data Reliability by County Size Category",
x = "Population Category",
y = "Age Margin of Error (%)"
) +
theme_minimal() +
theme(legend.position = "none")  # Remove legend since x-axis is clear
# Calculate MOE percentages
county_reliability <- county_data %>%
mutate(
income_moe_pct = (median_incomeM / median_incomeE) * 100,
pop_category = case_when(
total_popE < 50000 ~ "Small (<50K)",
total_popE < 200000 ~ "Medium (50K-200K)",
TRUE ~ "Large (200K+)"
)
)
# MOE by population size
ggplot(county_reliability) +
aes(x = total_popE, y = income_moe_pct) +
geom_point(alpha = 0.7) +
geom_hline(yintercept = 10, color = "red", linetype = "dashed") +
labs(
title = "Data Reliability Decreases with Population Size",
x = "Total Population",
y = "Margin of Error (%)",
caption = "Red line = 10% reliability threshold"
) +
theme_minimal() +
scale_x_continuous(labels = comma)
# Box plots by population category
ggplot(county_reliability) +
aes(x = pop_category, y = income_moe_pct, fill = pop_category) +
geom_boxplot() +
labs(
title = "Data Reliability by County Size Category",
x = "Population Category",
y = "Margin of Error (%)"
) +
theme_minimal() +
theme(legend.position = "none")  # Remove legend since x-axis is clear
# Box plots by population category
county_reliability <- county_data %>%
mutate(
age_moe_pct = (median_ageM / median_ageE * 100)
)
# MOE by population size
ggplot(county_reliability) +
aes(x = total_popE, y = age_moe_pct) +
geom_point(alpha = 0.7, color="purple", size = 2) +
geom_hline(yintercept = 5, color = "blue", linetype = "dashed") +
labs(
title = "Data Reliability Decreases with Population Size",
x = "Total Population",
y = "Margin of Error (%)",
caption = "Blue line = 5% reliability threshold"
) +
theme_classic() +
scale_x_continuous(labels = comma)
ggplot(county_reliability) +
aes(x = pop_category, y = age_moe_pct, fill = pop_category) +
geom_boxplot() +
labs(
title = "Data Reliability by County Size Category",
x = "Population Category",
y = "Age Margin of Error (%)"
) +
theme_minimal() +
theme(legend.position = "none")  # Remove legend since x-axis is clear
View(county_reliability)
# Calculate MOE percentages
county_reliability <- county_data %>%
mutate(
income_moe_pct = (median_incomeM / median_incomeE) * 100,
pop_category = case_when(
total_popE < 50000 ~ "Small (<50K)",
total_popE < 200000 ~ "Medium (50K-200K)",
TRUE ~ "Large (200K+)"
)
)
# MOE by population size
ggplot(county_reliability) +
aes(x = total_popE, y = income_moe_pct) +
geom_point(alpha = 0.7) +
geom_hline(yintercept = 10, color = "red", linetype = "dashed") +
labs(
title = "Data Reliability Decreases with Population Size",
x = "Total Population",
y = "Margin of Error (%)",
caption = "Red line = 10% reliability threshold"
) +
theme_minimal() +
scale_x_continuous(labels = comma)
View(county_reliability)
# Box plots by population category
county_reliability <- county_reliability %>%
mutate(
age_moe_pct = (median_ageM / median_ageE * 100)
)
# MOE by population size
ggplot(county_reliability) +
aes(x = total_popE, y = age_moe_pct) +
geom_point(alpha = 0.7, color="purple", size = 2) +
geom_hline(yintercept = 5, color = "blue", linetype = "dashed") +
labs(
title = "Data Reliability Decreases with Population Size",
x = "Total Population",
y = "Margin of Error (%)",
caption = "Blue line = 5% reliability threshold"
) +
theme_classic() +
scale_x_continuous(labels = comma)
ggplot(county_reliability) +
aes(x = pop_category, y = age_moe_pct, fill = pop_category) +
geom_boxplot() +
labs(
title = "Data Reliability by County Size Category",
x = "Population Category",
y = "Age Margin of Error (%)"
) +
theme_minimal() +
theme(legend.position = "none")  # Remove legend since x-axis is clear
# Three-variable scatter plot
ggplot(county_data) +
aes(x = total_popE, y = median_incomeE, color = median_ageE) +
geom_point(size = 2, alpha = 0.7) +
scale_color_viridis_c(name = "Median\nAge") +
labs(
title = "Population, Income, and Age Patterns",
x = "Total Population",
y = "Median Household Income ($)"
) +
theme_minimal() +
scale_x_continuous(labels = comma) +
scale_y_continuous(labels = dollar)
