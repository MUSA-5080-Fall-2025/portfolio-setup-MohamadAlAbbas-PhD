{"title":"Assignment 2: Spatial Analysis and Visualization","markdown":{"yaml":{"title":"Assignment 2: Spatial Analysis and Visualization","subtitle":"Healthcare Access and Equity in Pennsylvania","author":"Mohamad Al-Abbas","date":"today","format":{"html":{"code-fold":false,"toc":true,"toc-location":"left","theme":"cosmo","embed-resources":true}},"execute":{"warning":false,"message":false}},"headingText":"Assignment Overview","containsRefs":false,"markdown":"\n\n\n**Learning Objectives:**\n- Apply spatial operations to answer policy-relevant research questions\n- Integrate census demographic data with spatial analysis\n- Create publication-quality visualizations and maps\n- Work with spatial data from multiple sources\n- Communicate findings effectively for policy audiences\n\n---\n\n## Part 1: Healthcare Access for Vulnerable Populations\n\n### Research Question\n\n**Which Pennsylvania counties have the highest proportion of vulnerable populations (elderly + low-income) living far from hospitals?**\n\n### Analysis Steps\n\n```{r}\n#| label: Setup\n#| message: true\n#| warning: true\n#| include: false\n#| paged-print: true\n\n# Load required packages\nlibrary(sf)\nlibrary(dplyr)\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(tigris)\nlibrary(tidycensus)\nlibrary(knitr)\nlibrary(tibble)\nlibrary(scales)\nlibrary(RColorBrewer)\n\ncensus_api_key(\"807ea1c0820a3e1e46dde3c53438622057fcc1ba\")\n\n# Load spatial data\npa_counties <- st_read(\"data/Pennsylvania_County_Boundaries.shp\")\nhospitals <- st_read(\"data/hospitals.geojson\")\ncensus_tracts <- tracts(state = \"PA\", cb = TRUE)\n\n```\n\n**Checking & Setting CRS:**\n\n```{r}\n#| label: Setting CRS\n#| message: false\n#| warning: false\n#| results: \"hide\"\n\n# Check that all data loaded correctly\nst_crs(pa_counties)     #WGS 84\nst_crs(hospitals)       #WGS 84\nst_crs(census_tracts)   #NAD 83\n\n#Convert to same projection\nhospitals <- st_transform(hospitals, st_crs(pa_counties))\ncensus_tracts <- st_transform(census_tracts, st_crs(pa_counties))\n\n```\n\n**Questions to answer:**\n\n- How many hospitals are in your dataset?  \n  Answer: 223 Hospitals.\n\n- How many census tracts?  \n  Answer: 3,445 census tracts.\n\n- What coordinate reference system is each dataset in?  \n  Answer: Both PA counties & Hospitals are in WGS 84, whereas the census tracts are in NAD 83.\n\n---\n\n#### Step 2: Get Demographic Data \n\n**API Call:**\n```{r}\n#| label: Demographic Data\n#| message: false\n#| warning: false\n#| results: \"hide\" #Remove this to see results of summary table\n\nDemographic_variables <- c(\n  total_pop = \"B01003_001\",  # Total population\n  medhhinc  = \"B19013_001\",  # Median household income\n  # Male population by age group (65+)\n  m65_66   = \"B01001_020\",\n  m67_69   = \"B01001_021\",\n  m70_74   = \"B01001_022\",\n  m75_79   = \"B01001_023\",\n  m80_84   = \"B01001_024\",\n  m85plus  = \"B01001_025\",\n  # Female population by age group (65+)\n  f65_66   = \"B01001_044\",\n  f67_69   = \"B01001_045\",\n  f70_74   = \"B01001_046\",\n  f75_79   = \"B01001_047\",\n  f80_84   = \"B01001_048\",\n  f85plus  = \"B01001_049\"\n)\n\nPA_acs <- get_acs(\n  geography = \"tract\",\n  variables = Demographic_variables,\n  state = \"PA\",\n  year = 2022,\n  survey = \"acs5\",\n  output = \"wide\")\n\n# The `mutate()` function sums the estimates for all male and female\n# age groups aged 65 and above to produce a new variable `pop65plus`.\n\nPA_acs <- PA_acs %>%\n  mutate(pop65plus = (\n    m65_66E + m67_69E + m70_74E + m75_79E + m80_84E + m85plusE +\n    f65_66E + f67_69E + f70_74E + f75_79E + f80_84E + f85plusE\n  ))\n\n# Merge the demographic data (`PA_acs`) with the tract shapefile\n# (`census_tracts`) by the unique GEOID identifier.\n\nPA_tracts <- census_tracts %>%\n  left_join(PA_acs, by = \"GEOID\")\n\n# income across tracts:\n\nsummary(PA_tracts$medhhincE)\n\n\n```\n\n**Questions to answer:**\n\n- What year of ACS data are you using?\n\n  - Answer: 2022\n  \n- How many tracts have missing income data?\n\n  - Answer: 62\n  \n- What is the median income across all PA census tracts?\n\n  - Answer: 70,188 USD\n\n---\n\n#### Step 3: Vulnerable Populations \n\n**Defining Vulnerability:**\n```{r}\n#| label: Vulnerability Calculations\n#| message: false\n#| warning: false\n#| results: \"hide\" #Remove this to see results of Kable\n\n# The variable `share65` represents the proportion of the total population\n# aged 65 and older. This will be used to identify tracts with a high\n# concentration of elderly residents.\n\nPA_tracts <- PA_tracts %>%\n  mutate(\n    share65 = pop65plus / total_popE\n  )\n\n\n# Low income: bottom quartile (≤ 25th percentile) of median household income\n# High elderly: top quartile (≥ 75th percentile) of the 65+ share\n\nInc_threshold <- quantile(PA_tracts$medhhincE, probs = 0.25, na.rm = TRUE)\nage_threshold <- quantile(PA_tracts$share65, probs = 0.75, na.rm = TRUE)\n\n\n# A tract is classified as “vulnerable” if BOTH conditions are met:\n# (1) Median household income is below or equal to the 25th percentile, AND\n# (2) Elderly share is above or equal to the 75th percentile.\n\nPA_tracts <- PA_tracts %>%\n  mutate(\n    low_income = medhhincE <= Inc_threshold,  # Low-income indicator\n    older_pop  = share65 >= age_threshold,    # High-elderly indicator\n    vulnerable = low_income & older_pop       # Combined vulnerability flag\n  )\n\n\n# `n_vuln`: total number of tracts meeting both criteria\n# `pct_vuln`: percentage of all tracts that are vulnerable\n\nn_vuln <- sum(PA_tracts$vulnerable, na.rm = TRUE)\npct_vuln <- n_vuln / nrow(PA_tracts)\n\n\n# The table reports the income and elderly thresholds used, the number of\n# vulnerable tracts, and their share of all tracts. `scales::dollar()` and\n# `scales::percent()` are used to format the values for readability.\n\nknitr::kable(\n  tibble::tibble(\n    `Income threshold (25th percentile)`        = scales::dollar(as.numeric(Inc_threshold)),\n    `Elderly share threshold (75th percentile)` = scales::percent(as.numeric(age_threshold), accuracy = 0.1),\n    `# Vulnerable tracts`                        = n_vuln,\n    `% of all tracts that are vulnerable`       = scales::percent(pct_vuln, accuracy = 0.1)\n  ),\n  caption = \"Vulnerability thresholds and counts (low income + high elderly share)\"\n)\n\n```\n\n**Questions to answer:**\n\n- What income threshold did you choose and why?\n\n  - Answer: Ideally, I would have selected the national U.S. poverty line of `$32,150` as the income cutoff. However, this figure does not accurately reflect relative poverty across regions. For instance, a household earning `$50,000` in New York may still experience financial vulnerability due to local cost-of-living differences.Moreover, because this analysis focuses on elderly populations, income alone may underestimate vulnerability — many older adults have non-income assets or retirement savings that distort what “low income” means within their demographic. Therefore, I use the 25th percentile, `$55,923.50`, of median household income across Pennsylvania census tracts as the cutoff for “low income.” This approach casts a wider and more context-sensitive net that captures tracts relatively disadvantaged within the state. Theoretically, tracts with a higher concentration of elderly residents and greater socioeconomic vulnerability are more likely to fall in this bottom income quartile, making it an efficient and justifiable criterion in the absence of more granular wealth data.\n\n- What elderly population threshold did you choose and why?\n\n  - Answer: For the elderly population threshold, I use the 75th percentile of the share of residents aged 65 and older, corresponding to the top quartile of tracts with the highest elderly concentrations. This approach identifies communities where aging populations are most prevalent and likely to face greater service and health-related vulnerabilities. In total\n\n- How many tracts meet your vulnerability criteria?\n\n  - Answer: 164 tracts are considered vulnerable\n  \n  \n- What percentage of PA census tracts are considered vulnerable by your definition?\n\n  - Answer: 4.8%\n\n---\n\n#### Step 4: Calculate Distance to Hospitals \n\n\n**Distance Calculations:**\n```{r}\n#| label: Hospital Distance Matrix\n#| message: false\n#| warning: false\n#| results: \"hide\" #Remove this to see results of Kable\n\n\n# Distances are only meaningful in a projected CRS (not WGS84 lon/lat).\n# Using a feet-based CRS lets st_distance() return feet directly.\n# We use the NAD83, 3365 projection designed for Pennsylvania South (ftUS)\n# as the state plane, 3365 is the ideal projection for distance calculations\npa_proj <- st_transform(pa_counties, 3365)\nhospitals_proj <- st_transform(hospitals, 3365)\ntracts_proj <- st_transform(PA_tracts, 3365)\n\n# Compute polygon centroids AFTER projection. (Safer than doing so in lon/lat.)\n# If you need guaranteed interior points for odd-shaped tracts, consider st_point_on_surface().\ntract_centroids <- tracts_proj %>%\n  st_centroid()\n\n# st_distance() returns an N_tracts x N_hospitals matrix with linear units of the CRS (here: feet).\ndist_matrix <- st_distance(tract_centroids, hospitals_proj)\n\n# Take the minimum across each row (each tract) → nearest hospital distance (feet).\ntract_centroids$nearest_hosp_ft <- apply(dist_matrix, 1, min)\n\n# Also compute miles for easier interpretation.\ntract_centroids <- tract_centroids %>%\n  mutate(nearest_hosp_miles = nearest_hosp_ft / 5280)\n\nPA_tracts <- tracts_proj %>%\n  left_join(\n    tract_centroids %>%\n      st_drop_geometry() %>%\n      select(GEOID, nearest_hosp_miles),\n    by = \"GEOID\"\n  )\n\n# Average distance to nearest hospital (miles)\n# Maximum distance (miles)\n# Count of tracts farther than 15 miles\n\nvuln_summary <- PA_tracts %>%\n  st_drop_geometry() %>%\n  filter(vulnerable == TRUE) %>%\n  summarize(\n    avg_distance_miles = mean(nearest_hosp_miles, na.rm = TRUE),\n    max_distance_miles = max(nearest_hosp_miles, na.rm = TRUE),\n    tracts_over_15mi = sum(nearest_hosp_miles > 15, na.rm = TRUE)\n  )\n\nknitr::kable(vuln_summary, caption = \"Distance to Nearest Hospital (Vulnerable Tracts)\")\n\n\n```\n\n**Questions to answer:**\n\n- What is the average distance to the nearest hospital for vulnerable tracts?\n\n  - Answer: 4.74 miles.\n\n- What is the maximum distance?\n\n  - Answer: 19.16 miles.\n  \n- How many vulnerable tracts are more than 15 miles from the nearest hospital?\n\n  - Answer: Nine.\n\n---\n\n#### Step 5: Identify Underserved Areas \n\n**Underserved Areas:**\n```{r}\n#| label: Detecting Underserved Areas\n#| message: false\n#| warning: false\n\n# A tract is classified as underserved if it meets BOTH conditions:\n#   (1) It is already marked as \"vulnerable\" (low income + high elderly share)\n#   (2) It lies more than 15 miles from the nearest hospital\n#\n# This combined condition identifies tracts that are both socioeconomically\n# and spatially disadvantaged in terms of healthcare access.\n\nPA_tracts <- PA_tracts %>%\n  mutate(\n    underserved = vulnerable & nearest_hosp_miles > 15\n  )\n\n# `total_vulnerable`: total number of tracts identified as vulnerable\n# `total_underserved`: number of vulnerable tracts that are also >15 miles away\n# `pct_underserved`: share (%) of vulnerable tracts that are underserved\n\nunderserved_summary <- PA_tracts %>%\n  st_drop_geometry() %>%\n  summarize(\n    `Total Vulnerable Tracts`  = sum(vulnerable, na.rm = TRUE),\n    `Total Underserved Tracts` = sum(underserved, na.rm = TRUE),\n    `Percent Underserved (%)`  = round(sum(underserved, na.rm = TRUE) /\n                                       sum(vulnerable, na.rm = TRUE) * 100, 2)\n  )\n\nknitr::kable(\n  underserved_summary,\n  caption = \"Underserved Tracts Summary (Vulnerable + >15 miles from Hospital)\",\n  align = c(\"c\", \"c\", \"c\")\n)\n\n\n```\n\n**Questions to answer:**\n\n- How many tracts are underserved?\n\n  - Answer: A total of nine census tracts are classified as underserved, that is, they meet both criteria of being socioeconomically vulnerable and located more than 15 miles from the nearest hospital. \n\n- What percentage of vulnerable tracts are underserved?\n\n  - Answer: These nine tracts represent approximately 5.45 % of all 165 vulnerable tracts identified in the analysis.\n  \n- Does this surprise you? Why or why not?\n\n  - Answer: Not particularly. Pennsylvania is known for its dense healthcare network, so it is unsurprising that only a small percentage (5.45%) of vulnerable tracts are geographically isolated. Moreover, elderly individuals tend to gravitate toward areas with better healthcare access, while healthcare conglomerates and hospitals are likewise inclined to locate in regions where their primary patient base already resides. However, even this small cluster of underserved tracts may represent significant service gaps, particularly if these areas contain a high concentration of older residents. It would be worthwhile to examine the racial and age composition of these tracts to assess whether patterns of racial segregation or elderly disenfranchisement contribute to disparities in healthcare accessibility.\n\n---\n\n#### Step 6: Aggregate to County Level\n\n**Demographics of Underserved:**\n```{r}\n#| label: Underserved Demographics\n#| message: false\n#| warning: false\n#| results: \"hide\" #Remove this to see results of Kable\n\n\n# Spatial join tracts to counties\n\nPA_sjoin <- PA_tracts %>%\n  st_join(pa_proj)\n\n# For each county, compute:\n# Total number of tracts\n# Mean tract area\n# Count of vulnerable and underserved tracts\n# % of vulnerable tracts that are underserved\n# Average distance (mi) to nearest hospital for vulnerable tracts\n# Total elderly population in vulnerable tracts\n\ncounty_summaries <- PA_sjoin %>%\n  st_drop_geometry() %>%\n  group_by(COUNTY_NAM) %>%\n  summarize(\n    `Number of Tracts`                = n(),\n    `Average Tract Area (sq mi)`      = round(mean(AREA_SQ_MI, na.rm = TRUE), 2),\n    `Vulnerable Tracts`               = sum(vulnerable, na.rm = TRUE),\n    `Underserved Tracts`              = sum(underserved, na.rm = TRUE),\n    `Percent Underserved (%)`         = ifelse(\n      sum(vulnerable, na.rm = TRUE) > 0,\n      round(sum(underserved, na.rm = TRUE) / sum(vulnerable, na.rm = TRUE) * 100, 2),\n      0\n    ),\n    `Avg Dist (mi) - Vulnerable`      = ifelse(\n      sum(vulnerable, na.rm = TRUE) > 0,\n      round(mean(nearest_hosp_miles[vulnerable], na.rm = TRUE), 2),\n      NA_real_\n    ),\n    `Total Vulnerable Pop (65+)`      = ifelse(\n      sum(vulnerable, na.rm = TRUE) > 0,\n      sum(pop65plus[vulnerable], na.rm = TRUE),\n      0\n    )\n  )\n\n# Identify top 5 counties by % underserved\n\ntop5_underserved <- county_summaries %>%\n  arrange(desc(`Percent Underserved (%)`),desc(`Total Vulnerable Pop (65+)`)) %>%\n  slice_head(n = 5)\n\n\nknitr::kable(\n  top5_underserved,\n  caption = \"Top 5 Counties with Highest Percentage of Underserved Vulnerable Tracts\",\n  align = \"c\"\n)\n\n```\n\n**Questions to answer:**\n\n- Which 5 counties have the highest percentage of underserved vulnerable tracts?\n\n  - Answer: Bradford, Columbia, Juniata, Monroe, and Perry\n\n- Which counties have the most vulnerable people living far from hospitals?\n\n  - Answer: Perry, Bradford, Juniata, Monroe, and Columbia , in that order.\n\n- Are there any patterns in where underserved counties are located?\n \n  - Answer: They appear to be mostly rural counties, and all five counties appear in PA's MUAs index of underserved areas, so I am confident that the techniques are accurate. Interestingly, all five are white dominant population, but republican which indicates an older generation. \n\n---\n\n#### Step 7: Create Summary Table \n\n**Summary Tabulation:**\n```{r}\n#| label: Priority Counties\n#| message: false\n#| warning: false\n\n# Step 1: Compute a composite priority score\n# Combines percent underserved (severity) × total vulnerable population (scale)\ncounty_priorities <- county_summaries %>%\n  mutate(\n    priority_score      = (`Percent Underserved (%)` * `Total Vulnerable Pop (65+)`) / 1000,\n    priority_percentile = percent_rank(priority_score) * 100\n  )\n\n# Step 2: Select the top 10 counties by priority score\ntop_priority <- county_priorities %>%\n  arrange(desc(priority_score)) %>%\n  slice_head(n = 10) %>%\n  select(\n    County                              = COUNTY_NAM,\n    `# Vulnerable Tracts`               = `Vulnerable Tracts`,\n    `# Underserved Tracts`              = `Underserved Tracts`,\n    `% Underserved`                     = `Percent Underserved (%)`,\n    `Avg. Distance to Hospital (miles)` = `Avg Dist (mi) - Vulnerable`,\n    `Total Vulnerable Population (65+)` = `Total Vulnerable Pop (65+)`,\n    `Priority Score`                    = priority_score,\n    `Percentile Rank`                   = priority_percentile\n  ) %>%\n  mutate(\n    `% Underserved`                     = scales::percent(`% Underserved` / 100, accuracy = 0.1),\n    `Avg. Distance to Hospital (miles)` = round(`Avg. Distance to Hospital (miles)`, 1),\n    `Total Vulnerable Population (65+)` = scales::comma(`Total Vulnerable Population (65+)`, accuracy = 1),\n    `Priority Score`                    = scales::comma(round(`Priority Score`, 0)),\n    `Percentile Rank`                   = scales::percent(`Percentile Rank` / 100, accuracy = 0.1)\n  )\n\n# Step 3: Display formatted table\nknitr::kable(\n  top_priority,\n  caption = \"Top 10 Pennsylvania Counties for Healthcare Investment Priority (Vulnerability × Access)\",\n  align   = c(\"l\",\"c\",\"c\",\"c\",\"c\",\"c\",\"c\",\"c\"),\n  booktabs = TRUE\n)\n\n```\n\n\n---\n\n## Part 2: Comprehensive Visualization \n\n### Map 1: County-Level Choropleth \n\n**County-Level Vulnerability:**\n```{r}\n#| label: Healthcare Challenges\n#| message: false\n#| warning: false\n\n# Create county-level access map\ncounties_map <- pa_proj %>%\n  left_join(county_summaries, by = \"COUNTY_NAM\")\n\n# Map: % of vulnerable tracts underserved + hospitals (with shared legend)\nggplot() +\n  # County polygons colored by % underserved\n  geom_sf(\n    data = counties_map,\n    aes(fill = `Percent Underserved (%)`),\n    color = \"white\",\n    size  = 0.2\n  ) +\n  # Hospital points added to legend\n  geom_sf(\n    data  = hospitals_proj,\n    aes(shape = \"Hospitals\"),     # <— adds to legend\n    color = \"darkgreen\",\n    size  = 1.5,\n    alpha = 0.8,\n    inherit.aes = FALSE\n  ) +\n  # Continuous viridis fill scale\n  scale_fill_viridis_c(\n    name   = \"% of vulnerable tracts underserved\",\n    labels = scales::label_number(accuracy = 1, suffix = \"%\"),\n    limits = c(0, 100),\n    option = \"plasma\",\n    na.value = \"grey90\"\n  ) +\n  # Add a manual shape legend for hospitals\n  scale_shape_manual(\n    name   = NULL,\n    values = c(\"Hospitals\" = 16)  # solid circle\n  ) +\n  # Combine legends neatly (fill first, shape second)\n  guides(\n    fill  = guide_colorbar(order = 1, barwidth = 0.7, barheight = 8),\n    shape = guide_legend(order = 2, override.aes = list(size = 3, color = \"darkgreen\"))\n  ) +\n  labs(\n    title    = \"Healthcare Access Challenges Across Pennsylvania\",\n    subtitle = \"% of vulnerable tracts (low-income & elderly) >15 miles from the nearest hospital\",\n    caption  = \"Sources: ACS 2018–2022 (tidycensus); PA Counties & Hospitals (course data). Projection: EPSG:3365\"\n  ) +\n  coord_sf(datum = NA) +\n  theme_void() +\n  theme(\n    legend.position = \"right\",\n    legend.title    = element_text(size = 10, face = \"bold\"),\n    legend.text     = element_text(size = 9),\n    plot.title      = element_text(face = \"bold\", size = 14),\n    plot.subtitle   = element_text(size = 11),\n    plot.caption    = element_text(size = 9)\n  )\n\n```\n\n---\n\n### Map 2: Detailed Vulnerability Map \n\n**Vulnerability Maps:**\n```{r}\n#| label: Tract-Level Vulnerability Map\n#| message: false\n#| warning: false\n\n# 1) Prepare tract status for mapping\ntracts_for_map <- PA_tracts %>%\n  sf::st_transform(3365) %>%\n  dplyr::mutate(\n    tract_status = dplyr::case_when(\n      underserved ~ \"Underserved vulnerable\",\n      vulnerable  ~ \"Vulnerable (≤ 15 mi)\",\n      TRUE        ~ \"Other tracts\"\n    ),\n    tract_status = factor(\n      tract_status,\n      levels = c(\"Underserved vulnerable\", \"Vulnerable (≤ 15 mi)\", \"Other tracts\")\n    )\n  )\n\n# 2) Plot with hospitals symbol integrated into legend\nggplot() +\n  # Background tracts\n  geom_sf(\n    data  = dplyr::filter(tracts_for_map, tract_status == \"Other tracts\"),\n    fill  = \"#F2F2F2\", color = NA\n  ) +\n  # Vulnerable but near hospitals\n  geom_sf(\n    data  = dplyr::filter(tracts_for_map, tract_status == \"Vulnerable (≤ 15 mi)\"),\n    aes(fill = tract_status),\n    color = NA,\n    alpha = 0.9\n  ) +\n  # Underserved vulnerable\n  geom_sf(\n    data  = dplyr::filter(tracts_for_map, tract_status == \"Underserved vulnerable\"),\n    aes(fill = tract_status),\n    color = NA\n  ) +\n  # County outlines\n  geom_sf(\n    data  = pa_proj,\n    fill  = NA, color = \"white\", linewidth = 0.4\n  ) +\n  # Hospital locations (added to legend)\n  geom_sf(\n    data = hospitals_proj,\n    aes(shape = \"Hospitals\"),  # <—— This makes a new legend key for hospitals\n    color = \"black\",\n    size  = 1.1,\n    alpha = 0.8,\n    inherit.aes = FALSE\n  ) +\n  # Manual fill colors\n  scale_fill_manual(\n    name   = NULL,\n    values = c(\n      \"Underserved vulnerable\" = \"#C0392B\",\n      \"Vulnerable (≤ 15 mi)\"   = \"#7F8C8D\"\n    ),\n    breaks = c(\"Underserved vulnerable\", \"Vulnerable (≤ 15 mi)\"),\n    drop   = FALSE\n  ) +\n  # Add legend symbol for hospitals\n  scale_shape_manual(\n    name   = NULL,\n    values = c(\"Hospitals\" = 16)  # solid circle\n  ) +\n  guides(\n    fill  = guide_legend(order = 1, override.aes = list(alpha = 1)),\n    shape = guide_legend(order = 2, override.aes = list(size = 3, color = \"black\"))\n  ) +\n  labs(\n    title    = \"Underserved Vulnerable Census Tracts in Pennsylvania\",\n    subtitle = \"Tracts with low income & high elderly share located >15 miles from the nearest hospital\",\n    caption  = \"Sources: ACS 2018–2022 (tidycensus); Course hospitals & PA counties. Projection: EPSG:3365\"\n  ) +\n  coord_sf(datum = NA) +\n  theme_void() +\n  theme(\n    legend.position = \"right\",\n    legend.title    = element_blank(),\n    legend.text     = element_text(size = 10),\n    plot.title      = element_text(face = \"bold\", size = 14),\n    plot.subtitle   = element_text(size = 11),\n    plot.caption    = element_text(size = 9)\n  )\n\n\n```\n\n---\n\n### Chart: Distribution Analysis\n\n**Figure 1:**\n```{r}\n#| label: Hospital Distance Histogram\n#| message: false\n#| warning: false\n#| fig-cap: \"The distribution is heavily left-skewed, with most vulnerable tracts located close to hospitals. Only a few exceed the 15-mile threshold, confirming that long-distance access barriers are rare but geographically distinct.\"\n\n# --- Prep: tract-level data (vulnerable only) ---\ntract_vuln <- PA_tracts %>%\n  st_drop_geometry() %>%\n  filter(vulnerable == TRUE, !is.na(nearest_hosp_miles))\n\n# --- Histogram: distance distribution among vulnerable tracts ---\np_hist <- ggplot(tract_vuln, aes(x = nearest_hosp_miles)) +\n  geom_histogram(bins = 30, alpha = 0.8, fill = \"gray40\") +\n  geom_density(aes(y = after_stat(..count..)), linewidth = 0.8, alpha = 0.4) +\n  geom_vline(xintercept = 15, linewidth = 0.7, linetype = \"dashed\") +\n  labs(\n    title = \"Distance to Nearest Hospital (Vulnerable Tracts)\",\n    subtitle = \"Dashed line at 15 miles (underserved threshold)\",\n    x = \"Distance to nearest hospital (miles)\",\n    y = \"Number of tracts\",\n    caption = \"Sample: PA tracts flagged as vulnerable (low income & high elderly share).\"\n  ) +\n  theme_minimal(base_size = 11)\n\np_hist\n```\n\n**Figure 2:**\n```{r}\n#| label: Hospital Distance Scatter\n#| message: false\n#| warning: false\n#| fig-cap: \"Most vulnerable tracts lie within 10 miles of a hospital, though a few outliers exceed the 15-mile cutoff. Larger elderly populations are not systematically farther away, suggesting that isolation is primarily geographic rather than demographic.\"\n\np_scatter <- ggplot(tract_vuln, aes(x = nearest_hosp_miles, y = pop65plus)) +\n  geom_point(alpha = 0.4) +\n  geom_vline(xintercept = 15, linewidth = 0.7, linetype = \"dashed\") +\n  scale_y_continuous(labels = scales::comma) +\n  labs(\n    title = \"Distance vs. Size of Vulnerable Population (Tract-Level)\",\n    subtitle = \"Each point is a vulnerable tract; vertical line marks 15 miles\",\n    x = \"Distance to nearest hospital (miles)\",\n    y = \"Vulnerable population (65+)\"\n  ) +\n  theme_minimal(base_size = 11)\n\np_scatter\n```\n\n---\n\n## Part 3: Bring Your Own Data Analysis \n\n### Your Analysis\n\n1. **Loading and Synchronziing Fire/EMS Data with Census Tract**\n\n```{r}\n#| label: Load Station Data\n#| message: false\n#| warning: false\n\nlibrary(sf)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(units)\nlibrary(ggplot2)\nlibrary(knitr)\nlibrary(scales)\nlibrary(tidycensus)\n\n# ---- Load data ----\n# Fire/EMS stations (single shapefile)\nstations_raw <- st_read(\"FIRE_EMS/Fire_and_Emergency_Medical_Service__EMS__Stations_pt.shp\", quiet = TRUE)\n\n# Project counties and tracts you already have (from earlier parts)\nstations_proj <- st_transform(stations_raw, 3365)\npa_proj       <- st_transform(pa_counties, 3365)   # county polygons\ntracts_proj   <- st_transform(PA_tracts, 3365)     # tracts with total_popE\n\n# ---- 1) Dataset description (answers: source/date, features, CRS) ----\ndataset_info <- tibble::tibble(\n  `Dataset`        = \"Fire & Emergency Medical Service (EMS) Stations (points)\",\n  `Source`         = \"Pennsylvania Spatial Data Access (PASDA), Homeland Infrastructure Foundation Level Data HIFLD\",\n  `Data vintage`   = \"2025\",\n  `Feature count`  = nrow(stations_raw),\n  `Geometry type`  = paste(unique(as.character(st_geometry_type(stations_raw))), collapse = \", \"),\n  `Original CRS`   = paste0(st_crs(stations_raw)$epsg, \" — \", st_crs(stations_raw)$Name),\n  `Analysis CRS`   = paste0(\"EPSG:3365 — \", st_crs(stations_proj)$Name)\n)\n\nknitr::kable(dataset_info, caption = \"Fire/EMS dataset: source, features, and CRS\")\n\n```\n\n**Questions to answer:**\n\n- What dataset did you choose and why?\n\n  - Answer: The Fire & Emergency Medical Service (EMS) Stations point layer for Pennsylvania (single shapefile). It’s the right basis to test response coverage—we can buffer stations, apportion population coverage by tract, and compare coverage against population density and minority share.\n\n- What is the data source and date?\n\n  - Answer: Pennsylvania Spatial Data Access (PASDA), Homeland Infrastructure Foundation Level Data HIFLD, for the year 2025. \n  \n- How many features does it contain?\n\n  - Answer: 2,591 station points.\n  \n- What CRS is it in? Did you need to transform it?\n\n  - Answer: WGS84, transformed to 3365 for spatial calculations. \n\n---\n\n2. **Research question**\n\nWhich Pennsylvania tracts are high-priority for Fire/EMS expansion, and where do these gaps overlap with high-minority communities?\n\n---\n\n3. **Spatial analysis**\n\n**Coverage and Equity:**\n```{r}\n#| label: Station Analysis\n#| message: false\n#| warning: false\n\n# What this chunk does:\n#  1) Pulls ACS race (B03002) to compute minority share per tract\n#  2) Builds 2-mile service areas around Fire/EMS stations (EPSG:3365, ftUS)\n#  3) Area-weights tract populations to estimate % population covered vs. uncovered\n#  4) Aggregates key metrics to counties\n#  5) Outputs:\n#     - Statewide table (incl. \"% Uncovered that is Minority\")\n#     - Equity Table A (Top 10 counties by estimated minority uncovered)\n#     - Tract-level Coverage vs. Density Map (deficit index)\n#     - Tract-level Coverage Equity Map (high-minority + low-coverage)\n#\n# Notes:\n#  - Distance proxy: 2 miles ≈ ~5-min drive (network service areas would be ideal)\n#  - Population coverage is area-weighted at the tract level\n#  - EPSG:3365 (PA South, ftUS) is used for accurate buffering/distances\n\n\n# Pull total population and non-Hispanic White counts at the tract level\nrace_vars <- c(total = \"B03002_001\", white_nonhisp = \"B03002_003\")\n\npa_race <- get_acs(\n  geography = \"tract\",\n  variables = race_vars,\n  state     = \"PA\",\n  year      = 2022,\n  survey    = \"acs5\",\n  output    = \"wide\"\n) %>%\n  transmute(\n    GEOID,\n    total         = totalE,\n    white_nonhisp = white_nonhispE\n  ) %>%\n  mutate(\n    # Count of residents who are NOT non-Hispanic White\n    minority     = pmax(total - white_nonhisp, 0),\n    pct_minority = if_else(total > 0, minority / total * 100, NA_real_)\n  )\n\n# Project counties and tracts to EPSG:3365 and attach race\npa_proj <- st_transform(pa_counties, 3365)\ntracts_proj <- st_transform(PA_tracts, 3365) %>%\n  left_join(pa_race, by = \"GEOID\")\n\n\n# Build 2-mile (= 10,560 ft) coverage\ntwo_miles_ft <- 10560\n\n# Buffer Fire/EMS stations and dissolve into one coverage polygon\nstns_buffer    <- st_buffer(stations_proj, dist = two_miles_ft)\ncoverage_union <- st_union(stns_buffer) |> st_as_sf()\n\n# Clip to Pennsylvania extent for clean intersections/plots\ncoverage_union <- st_intersection(coverage_union, st_union(pa_proj) |> st_as_sf())\n\n# Compute tract areas in square miles (for density + apportionment)\ntracts_proj$area_mi2 <- as.numeric(set_units(st_area(tracts_proj), \"mi^2\"))\n\n# Intersect coverage with tracts to get covered sub-areas\nt_cov_parts <- st_intersection(tracts_proj, coverage_union)\n\n# Sum covered area per tract (sq mi)\nt_cov_area <- t_cov_parts %>%\n  mutate(area_cov_mi2 = as.numeric(set_units(st_area(geometry), \"mi^2\"))) %>%\n  st_drop_geometry() %>%\n  group_by(GEOID) %>%\n  summarise(area_cov_mi2 = sum(area_cov_mi2, na.rm = TRUE), .groups = \"drop\")\n\n# Combine: density, coverage fraction, covered/uncovered population\ntracts_cov <- tracts_proj %>%\n  left_join(t_cov_area, by = \"GEOID\") %>%\n  mutate(\n    area_cov_mi2  = replace_na(area_cov_mi2, 0),\n    pop           = total_popE,                                # from your earlier ACS pull\n    pop_density   = if_else(area_mi2 > 0, pop / area_mi2, NA_real_),\n    cover_frac    = pmin(1, if_else(area_mi2 > 0, area_cov_mi2 / area_mi2, 0)),\n    pop_cov       = pop * cover_frac,\n    pop_uncovered = pmax(0, pop - pop_cov)\n  ) %>%\n  # Recompute minority fields on THIS object to guarantee availability downstream\n  mutate(\n    minority     = if_else(!is.na(total) & !is.na(white_nonhisp),\n                           pmax(total - white_nonhisp, 0), NA_real_),\n    pct_minority = if_else(!is.na(total) & total > 0,\n                           minority / total * 100, NA_real_)\n  )\n\n\n# Estimate minority share within the uncovered population at the tract level\ntracts_equity <- tracts_cov %>%\n  mutate(\n    minority_share_tr   = if_else(!is.na(total) & total > 0, minority / total, NA_real_),\n    est_uncovered_minor = pop_uncovered * minority_share_tr\n  )\n\n# Compute the statewide row (raw)\nstatewide_tbl_raw <- tracts_equity %>%\n  st_drop_geometry() %>%\n  summarise(\n    Total_Population             = sum(pop, na.rm = TRUE),\n    Covered_Population           = sum(pop_cov, na.rm = TRUE),\n    Uncovered_Population         = sum(pop_uncovered, na.rm = TRUE),\n    Estimated_Uncovered_Minority = sum(est_uncovered_minor, na.rm = TRUE),\n    Stations                     = nrow(stations_proj)\n  ) %>%\n  mutate(\n    Pct_Covered                    = Covered_Population   / Total_Population,\n    Pct_Uncovered                  = Uncovered_Population / Total_Population,\n    Pct_Uncovered_That_Is_Minority = if_else(\n      Uncovered_Population > 0,\n      Estimated_Uncovered_Minority / Uncovered_Population,\n      NA_real_\n    )\n  )\n\n# Make a display-friendly, formatted one-row table\nstatewide_tbl_display <- statewide_tbl_raw %>%\n  transmute(\n    `Total population`                     = scales::comma(Total_Population),\n    `Covered population`                   = scales::comma(Covered_Population),\n    `Uncovered population`                 = scales::comma(Uncovered_Population),\n    `Estimated uncovered minority`         = scales::comma(Estimated_Uncovered_Minority),\n    `Stations (count)`                     = scales::comma(Stations),\n    `Percent covered`                      = scales::percent(Pct_Covered, accuracy = 0.01),\n    `Percent uncovered`                    = scales::percent(Pct_Uncovered, accuracy = 0.01),\n    `Uncovered that is minority`           = scales::percent(Pct_Uncovered_That_Is_Minority, accuracy = 0.01)\n  )\n\nknitr::kable(\n  statewide_tbl_display,\n  caption = \"Statewide coverage & equity (area-weighted, 2-mile buffers)\",\n  align   = \"c\",\n  booktabs = TRUE\n)\n\n# Count stations per county for context (optional columns if you want to show later)\nstns_in_county <- st_join(stations_proj, pa_proj, join = st_within)\ncounty_station_counts <- stns_in_county %>%\n  st_drop_geometry() %>%\n  count(COUNTY_NAM, name = \"Stations\")\n\n# Aggregate tract metrics to counties\nt2c <- st_join(tracts_equity, pa_proj) %>% st_drop_geometry()\n\ncounty_equity <- t2c %>%\n  group_by(COUNTY_NAM) %>%\n  summarise(\n    Total_Population             = sum(pop, na.rm = TRUE),\n    Covered_Population           = sum(pop_cov, na.rm = TRUE),\n    Uncovered_Population         = sum(pop_uncovered, na.rm = TRUE),\n    Minority_Population          = sum(minority, na.rm = TRUE),\n    Estimated_Uncovered_Minority = sum(est_uncovered_minor, na.rm = TRUE),\n    .groups = \"drop\"\n  ) %>%\n  left_join(county_station_counts, by = \"COUNTY_NAM\") %>%\n  mutate(\n    `Percent Covered` = if_else(Total_Population > 0,\n                                Covered_Population / Total_Population * 100, NA_real_)\n  )\n\n# extracting top ten counties with high unocvered minority levels. \nequity_top_abs <- county_equity %>%\n  arrange(desc(Estimated_Uncovered_Minority)) %>%\n  slice_head(n = 10) %>%\n  select(\n    County                          = COUNTY_NAM,\n    `Estimated Minority Uncovered`  = Estimated_Uncovered_Minority,\n    `Total Uncovered`               = Uncovered_Population,\n    `Percent Covered`               = `Percent Covered`,\n    Stations\n  ) %>%\n  mutate(\n    across(c(`Estimated Minority Uncovered`, `Total Uncovered`, Stations), comma),\n    across(c(`Percent Covered`), ~round(.x, 1))\n  )\n\nknitr::kable(\n  equity_top_abs,\n  caption = \"Equity Table: Top 10 Counties by Estimated Minority Uncovered Population\",\n  align   = \"c\"\n)\n\n# Z-score standardization and the “deficiency index”\n# --------------------------------------------------\n# We compare two quantities on different scales:\n#   (1) pop_density_i          = population per square mile in tract i\n#   (2) pct_pop_covered_i      = % of tract i’s population within 2 miles of a station\n#\n# To make them comparable, we standardize each with a z-score:\n#   z(x_i) = (x_i − mean(x)) / sd(x), computed across all Pennsylvania tracts.\n# This rescales both variables to unitless, mean-0, sd-1 measures so differences\n# reflect relative position within the statewide distribution (not raw units).\n#\n# Deficiency index (higher = denser but under-covered):\n#   deficiency_i = z(pop_density_i) − z(pct_pop_covered_i)\n# Interpretation:\n#   - Positive : tract is relatively dense given its relatively low coverage\n#                  (potential service gap / higher priority).\n#   - 0        : density and coverage are in balance relative to peers.\n#   - Negative : tract is relatively sparse and/or relatively well covered.\n\ntracts_deficit <- tracts_cov %>%\n  mutate(\n    pct_pop_covered = if_else(pop > 0, (pop_cov / pop) * 100, NA_real_),\n    z_density       = as.numeric(scale(pop_density)),\n    z_coverage      = as.numeric(scale(pct_pop_covered)),\n    deficit_index   = z_density - z_coverage  # higher = dense but poorly covered\n  )\n\nggplot() +\n  geom_sf(\n    data  = tracts_deficit,\n    aes(fill = deficit_index),\n    color = NA\n  ) +\n  geom_sf(\n    data  = pa_proj,\n    fill  = NA, color = \"white\", linewidth = 0.25\n  ) +\n  geom_sf(\n    data  = stations_proj,\n    aes(shape = \"Fire/EMS stations\"),\n    color = \"darkgreen\", size = 0.9, alpha = 0.85, inherit.aes = FALSE\n  ) +\n  scale_fill_gradient2(\n    name     = \"Coverage Deficit Index\\n(+ = dense but low coverage)\",\n    low      = \"#2b83ba\", mid = \"white\", high = \"#d7191c\",\n    midpoint = 0\n  ) +\n  scale_shape_manual(name = NULL, values = c(\"Fire/EMS stations\" = 16)) +\n  guides(\n    fill  = guide_colorbar(order = 1, barheight = 8),\n    shape = guide_legend(order = 2, override.aes = list(size = 2.2, color = \"darkgreen\"))\n  ) +\n  labs(\n    title    = \"Coverage vs. Density (Tract-Level): Potential Fire/EMS Service Gaps\",\n    subtitle = \"Index = z(population density) − z(% of tract population within 2 miles of a station)\",\n    caption  = \"Buffers ≈ 2 miles (EPSG:3365). Coverage apportioned by tract area overlap.\"\n  ) +\n  coord_sf(datum = NA) +\n  theme_void() +\n  theme(\n    legend.position = \"right\",\n    plot.title      = element_text(face = \"bold\", size = 14),\n    plot.subtitle   = element_text(size = 11),\n    plot.caption    = element_text(size = 9)\n  )\n\n\n# Thresholds: top quartile minority share, bottom quartile coverage\nthr_minority_tr <- quantile(tracts_deficit$pct_minority,     0.75, na.rm = TRUE)\nthr_cover_tr    <- quantile(tracts_deficit$pct_pop_covered, 0.25, na.rm = TRUE)\n\ntracts_equity_tr <- tracts_deficit %>%\n  mutate(\n    high_minority_tr = pct_minority     >= thr_minority_tr,\n    low_cover_tr     = pct_pop_covered  <= thr_cover_tr,\n    flag_both_tr     = high_minority_tr & low_cover_tr\n  )\n\nggplot() +\n  # Fill by % of tract population covered (easier to interpret than the index)\n  geom_sf(\n    data  = tracts_equity_tr,\n    aes(fill = pct_pop_covered),\n    color = NA\n  ) +\n  # Red outline for tracts meeting BOTH: high-minority AND low-coverage\n  geom_sf(\n    data      = dplyr::filter(tracts_equity_tr, flag_both_tr),\n    fill      = NA,\n    color     = \"cyan\",\n    linewidth = 0.35\n  ) +\n  geom_sf(\n    data  = pa_proj,\n    fill  = NA, color = \"white\", linewidth = 0.25\n  ) +\n  geom_sf(\n    data  = stations_proj,\n    aes(shape = \"Fire/EMS stations\"),\n    color = \"darkgreen\", size = 0.9, alpha = 0.85, inherit.aes = FALSE\n  ) +\n  scale_fill_viridis_c(\n    name   = \"% of tract population within 2 miles\",\n    labels = label_number(accuracy = 1, suffix = \"%\"),\n    option = \"plasma\",\n    na.value = \"grey90\"\n  ) +\n  scale_shape_manual(name = NULL, values = c(\"Fire/EMS stations\" = 16)) +\n  guides(\n    fill  = guide_colorbar(order = 1, barheight = 8),\n    shape = guide_legend(order = 2, override.aes = list(size = 2.2, color = \"darkgreen\"))\n  ) +\n  labs(\n    title    = \"Coverage Equity (Tract-Level): Fire/EMS Access in Pennsylvania\",\n    subtitle = paste0(\n      \"Cyan outline = top 25% minority share (≥ \", round(thr_minority_tr, 1),\n      \"%) AND bottom 25% coverage (≤ \", round(thr_cover_tr, 1), \"%)\"\n    ),\n    caption  = \"Minority share: ACS B03002 (2018–2022). Coverage: 2-mile buffers, area-weighted to tracts.\"\n  ) +\n  coord_sf(datum = NA) +\n  theme_void() +\n  theme(\n    legend.position = \"right\",\n    plot.title      = element_text(face = \"bold\", size = 14),\n    plot.subtitle   = element_text(size = 11),\n    plot.caption    = element_text(size = 9)\n  )\n```\n\n\n**Your interpretation:**\n\nOverall access is high. About 83.6% of residents live within 2 miles of a station; 16.4% (≈2.14M) are outside. Roughly 9.3% of the uncovered statewide are minority (≈198k). Where the gaps concentrate (density vs. coverage map). The largest clusters of dense-but-under-covered tracts appear along the Poconos/Route-80 corridor (Monroe, Pike, parts of Wayne) and in the south-central/exurban belt around Chester, Franklin, Adams, Cumberland, and York. Much of the rural interior is low density with low coverage—but that’s not a “deficit” by the index. Equity overlay (tract-level). Cyan-outlined tracts (high-minority + low coverage) are scattered but not widespread. They appear mainly in the Monroe–Pike area and selected exurban tracts in Chester/Lancaster/York. This matches the Top-10 equity table, where Monroe and Chester lead in the absolute number of minority residents outside the 2-mile catchment. Counties to watch. From the equity table: Monroe, Chester, Pike, Lancaster, York (plus Franklin/Cumberland/Adams/Wayne/Centre) combine sizable uncovered totals with notable minority counts—consistent with the map hot spots.\n\n\n## Finally - A few comments about your incorporation of feedback!\nI recieved two comments in the last assignment: \n\n- Hide the setup code block. The Census API key is not supposed to be shared publicly.\n\n  - Action: Setup code blocks were hidden using the quarto functionality.\n\n- If you want to print something, provide a brief explanation. If just for personal reference, print in console (don't need them in markdown)\n\n  - Action: Using the quarto functionality, I prevented auxillary tabulations required for answering certain questions, but not requested by instructions from appear in the markdown, but they remain in the code blocks. \n\n---\n\n","srcMarkdownNoYaml":"\n\n## Assignment Overview\n\n**Learning Objectives:**\n- Apply spatial operations to answer policy-relevant research questions\n- Integrate census demographic data with spatial analysis\n- Create publication-quality visualizations and maps\n- Work with spatial data from multiple sources\n- Communicate findings effectively for policy audiences\n\n---\n\n## Part 1: Healthcare Access for Vulnerable Populations\n\n### Research Question\n\n**Which Pennsylvania counties have the highest proportion of vulnerable populations (elderly + low-income) living far from hospitals?**\n\n### Analysis Steps\n\n```{r}\n#| label: Setup\n#| message: true\n#| warning: true\n#| include: false\n#| paged-print: true\n\n# Load required packages\nlibrary(sf)\nlibrary(dplyr)\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(tigris)\nlibrary(tidycensus)\nlibrary(knitr)\nlibrary(tibble)\nlibrary(scales)\nlibrary(RColorBrewer)\n\ncensus_api_key(\"807ea1c0820a3e1e46dde3c53438622057fcc1ba\")\n\n# Load spatial data\npa_counties <- st_read(\"data/Pennsylvania_County_Boundaries.shp\")\nhospitals <- st_read(\"data/hospitals.geojson\")\ncensus_tracts <- tracts(state = \"PA\", cb = TRUE)\n\n```\n\n**Checking & Setting CRS:**\n\n```{r}\n#| label: Setting CRS\n#| message: false\n#| warning: false\n#| results: \"hide\"\n\n# Check that all data loaded correctly\nst_crs(pa_counties)     #WGS 84\nst_crs(hospitals)       #WGS 84\nst_crs(census_tracts)   #NAD 83\n\n#Convert to same projection\nhospitals <- st_transform(hospitals, st_crs(pa_counties))\ncensus_tracts <- st_transform(census_tracts, st_crs(pa_counties))\n\n```\n\n**Questions to answer:**\n\n- How many hospitals are in your dataset?  \n  Answer: 223 Hospitals.\n\n- How many census tracts?  \n  Answer: 3,445 census tracts.\n\n- What coordinate reference system is each dataset in?  \n  Answer: Both PA counties & Hospitals are in WGS 84, whereas the census tracts are in NAD 83.\n\n---\n\n#### Step 2: Get Demographic Data \n\n**API Call:**\n```{r}\n#| label: Demographic Data\n#| message: false\n#| warning: false\n#| results: \"hide\" #Remove this to see results of summary table\n\nDemographic_variables <- c(\n  total_pop = \"B01003_001\",  # Total population\n  medhhinc  = \"B19013_001\",  # Median household income\n  # Male population by age group (65+)\n  m65_66   = \"B01001_020\",\n  m67_69   = \"B01001_021\",\n  m70_74   = \"B01001_022\",\n  m75_79   = \"B01001_023\",\n  m80_84   = \"B01001_024\",\n  m85plus  = \"B01001_025\",\n  # Female population by age group (65+)\n  f65_66   = \"B01001_044\",\n  f67_69   = \"B01001_045\",\n  f70_74   = \"B01001_046\",\n  f75_79   = \"B01001_047\",\n  f80_84   = \"B01001_048\",\n  f85plus  = \"B01001_049\"\n)\n\nPA_acs <- get_acs(\n  geography = \"tract\",\n  variables = Demographic_variables,\n  state = \"PA\",\n  year = 2022,\n  survey = \"acs5\",\n  output = \"wide\")\n\n# The `mutate()` function sums the estimates for all male and female\n# age groups aged 65 and above to produce a new variable `pop65plus`.\n\nPA_acs <- PA_acs %>%\n  mutate(pop65plus = (\n    m65_66E + m67_69E + m70_74E + m75_79E + m80_84E + m85plusE +\n    f65_66E + f67_69E + f70_74E + f75_79E + f80_84E + f85plusE\n  ))\n\n# Merge the demographic data (`PA_acs`) with the tract shapefile\n# (`census_tracts`) by the unique GEOID identifier.\n\nPA_tracts <- census_tracts %>%\n  left_join(PA_acs, by = \"GEOID\")\n\n# income across tracts:\n\nsummary(PA_tracts$medhhincE)\n\n\n```\n\n**Questions to answer:**\n\n- What year of ACS data are you using?\n\n  - Answer: 2022\n  \n- How many tracts have missing income data?\n\n  - Answer: 62\n  \n- What is the median income across all PA census tracts?\n\n  - Answer: 70,188 USD\n\n---\n\n#### Step 3: Vulnerable Populations \n\n**Defining Vulnerability:**\n```{r}\n#| label: Vulnerability Calculations\n#| message: false\n#| warning: false\n#| results: \"hide\" #Remove this to see results of Kable\n\n# The variable `share65` represents the proportion of the total population\n# aged 65 and older. This will be used to identify tracts with a high\n# concentration of elderly residents.\n\nPA_tracts <- PA_tracts %>%\n  mutate(\n    share65 = pop65plus / total_popE\n  )\n\n\n# Low income: bottom quartile (≤ 25th percentile) of median household income\n# High elderly: top quartile (≥ 75th percentile) of the 65+ share\n\nInc_threshold <- quantile(PA_tracts$medhhincE, probs = 0.25, na.rm = TRUE)\nage_threshold <- quantile(PA_tracts$share65, probs = 0.75, na.rm = TRUE)\n\n\n# A tract is classified as “vulnerable” if BOTH conditions are met:\n# (1) Median household income is below or equal to the 25th percentile, AND\n# (2) Elderly share is above or equal to the 75th percentile.\n\nPA_tracts <- PA_tracts %>%\n  mutate(\n    low_income = medhhincE <= Inc_threshold,  # Low-income indicator\n    older_pop  = share65 >= age_threshold,    # High-elderly indicator\n    vulnerable = low_income & older_pop       # Combined vulnerability flag\n  )\n\n\n# `n_vuln`: total number of tracts meeting both criteria\n# `pct_vuln`: percentage of all tracts that are vulnerable\n\nn_vuln <- sum(PA_tracts$vulnerable, na.rm = TRUE)\npct_vuln <- n_vuln / nrow(PA_tracts)\n\n\n# The table reports the income and elderly thresholds used, the number of\n# vulnerable tracts, and their share of all tracts. `scales::dollar()` and\n# `scales::percent()` are used to format the values for readability.\n\nknitr::kable(\n  tibble::tibble(\n    `Income threshold (25th percentile)`        = scales::dollar(as.numeric(Inc_threshold)),\n    `Elderly share threshold (75th percentile)` = scales::percent(as.numeric(age_threshold), accuracy = 0.1),\n    `# Vulnerable tracts`                        = n_vuln,\n    `% of all tracts that are vulnerable`       = scales::percent(pct_vuln, accuracy = 0.1)\n  ),\n  caption = \"Vulnerability thresholds and counts (low income + high elderly share)\"\n)\n\n```\n\n**Questions to answer:**\n\n- What income threshold did you choose and why?\n\n  - Answer: Ideally, I would have selected the national U.S. poverty line of `$32,150` as the income cutoff. However, this figure does not accurately reflect relative poverty across regions. For instance, a household earning `$50,000` in New York may still experience financial vulnerability due to local cost-of-living differences.Moreover, because this analysis focuses on elderly populations, income alone may underestimate vulnerability — many older adults have non-income assets or retirement savings that distort what “low income” means within their demographic. Therefore, I use the 25th percentile, `$55,923.50`, of median household income across Pennsylvania census tracts as the cutoff for “low income.” This approach casts a wider and more context-sensitive net that captures tracts relatively disadvantaged within the state. Theoretically, tracts with a higher concentration of elderly residents and greater socioeconomic vulnerability are more likely to fall in this bottom income quartile, making it an efficient and justifiable criterion in the absence of more granular wealth data.\n\n- What elderly population threshold did you choose and why?\n\n  - Answer: For the elderly population threshold, I use the 75th percentile of the share of residents aged 65 and older, corresponding to the top quartile of tracts with the highest elderly concentrations. This approach identifies communities where aging populations are most prevalent and likely to face greater service and health-related vulnerabilities. In total\n\n- How many tracts meet your vulnerability criteria?\n\n  - Answer: 164 tracts are considered vulnerable\n  \n  \n- What percentage of PA census tracts are considered vulnerable by your definition?\n\n  - Answer: 4.8%\n\n---\n\n#### Step 4: Calculate Distance to Hospitals \n\n\n**Distance Calculations:**\n```{r}\n#| label: Hospital Distance Matrix\n#| message: false\n#| warning: false\n#| results: \"hide\" #Remove this to see results of Kable\n\n\n# Distances are only meaningful in a projected CRS (not WGS84 lon/lat).\n# Using a feet-based CRS lets st_distance() return feet directly.\n# We use the NAD83, 3365 projection designed for Pennsylvania South (ftUS)\n# as the state plane, 3365 is the ideal projection for distance calculations\npa_proj <- st_transform(pa_counties, 3365)\nhospitals_proj <- st_transform(hospitals, 3365)\ntracts_proj <- st_transform(PA_tracts, 3365)\n\n# Compute polygon centroids AFTER projection. (Safer than doing so in lon/lat.)\n# If you need guaranteed interior points for odd-shaped tracts, consider st_point_on_surface().\ntract_centroids <- tracts_proj %>%\n  st_centroid()\n\n# st_distance() returns an N_tracts x N_hospitals matrix with linear units of the CRS (here: feet).\ndist_matrix <- st_distance(tract_centroids, hospitals_proj)\n\n# Take the minimum across each row (each tract) → nearest hospital distance (feet).\ntract_centroids$nearest_hosp_ft <- apply(dist_matrix, 1, min)\n\n# Also compute miles for easier interpretation.\ntract_centroids <- tract_centroids %>%\n  mutate(nearest_hosp_miles = nearest_hosp_ft / 5280)\n\nPA_tracts <- tracts_proj %>%\n  left_join(\n    tract_centroids %>%\n      st_drop_geometry() %>%\n      select(GEOID, nearest_hosp_miles),\n    by = \"GEOID\"\n  )\n\n# Average distance to nearest hospital (miles)\n# Maximum distance (miles)\n# Count of tracts farther than 15 miles\n\nvuln_summary <- PA_tracts %>%\n  st_drop_geometry() %>%\n  filter(vulnerable == TRUE) %>%\n  summarize(\n    avg_distance_miles = mean(nearest_hosp_miles, na.rm = TRUE),\n    max_distance_miles = max(nearest_hosp_miles, na.rm = TRUE),\n    tracts_over_15mi = sum(nearest_hosp_miles > 15, na.rm = TRUE)\n  )\n\nknitr::kable(vuln_summary, caption = \"Distance to Nearest Hospital (Vulnerable Tracts)\")\n\n\n```\n\n**Questions to answer:**\n\n- What is the average distance to the nearest hospital for vulnerable tracts?\n\n  - Answer: 4.74 miles.\n\n- What is the maximum distance?\n\n  - Answer: 19.16 miles.\n  \n- How many vulnerable tracts are more than 15 miles from the nearest hospital?\n\n  - Answer: Nine.\n\n---\n\n#### Step 5: Identify Underserved Areas \n\n**Underserved Areas:**\n```{r}\n#| label: Detecting Underserved Areas\n#| message: false\n#| warning: false\n\n# A tract is classified as underserved if it meets BOTH conditions:\n#   (1) It is already marked as \"vulnerable\" (low income + high elderly share)\n#   (2) It lies more than 15 miles from the nearest hospital\n#\n# This combined condition identifies tracts that are both socioeconomically\n# and spatially disadvantaged in terms of healthcare access.\n\nPA_tracts <- PA_tracts %>%\n  mutate(\n    underserved = vulnerable & nearest_hosp_miles > 15\n  )\n\n# `total_vulnerable`: total number of tracts identified as vulnerable\n# `total_underserved`: number of vulnerable tracts that are also >15 miles away\n# `pct_underserved`: share (%) of vulnerable tracts that are underserved\n\nunderserved_summary <- PA_tracts %>%\n  st_drop_geometry() %>%\n  summarize(\n    `Total Vulnerable Tracts`  = sum(vulnerable, na.rm = TRUE),\n    `Total Underserved Tracts` = sum(underserved, na.rm = TRUE),\n    `Percent Underserved (%)`  = round(sum(underserved, na.rm = TRUE) /\n                                       sum(vulnerable, na.rm = TRUE) * 100, 2)\n  )\n\nknitr::kable(\n  underserved_summary,\n  caption = \"Underserved Tracts Summary (Vulnerable + >15 miles from Hospital)\",\n  align = c(\"c\", \"c\", \"c\")\n)\n\n\n```\n\n**Questions to answer:**\n\n- How many tracts are underserved?\n\n  - Answer: A total of nine census tracts are classified as underserved, that is, they meet both criteria of being socioeconomically vulnerable and located more than 15 miles from the nearest hospital. \n\n- What percentage of vulnerable tracts are underserved?\n\n  - Answer: These nine tracts represent approximately 5.45 % of all 165 vulnerable tracts identified in the analysis.\n  \n- Does this surprise you? Why or why not?\n\n  - Answer: Not particularly. Pennsylvania is known for its dense healthcare network, so it is unsurprising that only a small percentage (5.45%) of vulnerable tracts are geographically isolated. Moreover, elderly individuals tend to gravitate toward areas with better healthcare access, while healthcare conglomerates and hospitals are likewise inclined to locate in regions where their primary patient base already resides. However, even this small cluster of underserved tracts may represent significant service gaps, particularly if these areas contain a high concentration of older residents. It would be worthwhile to examine the racial and age composition of these tracts to assess whether patterns of racial segregation or elderly disenfranchisement contribute to disparities in healthcare accessibility.\n\n---\n\n#### Step 6: Aggregate to County Level\n\n**Demographics of Underserved:**\n```{r}\n#| label: Underserved Demographics\n#| message: false\n#| warning: false\n#| results: \"hide\" #Remove this to see results of Kable\n\n\n# Spatial join tracts to counties\n\nPA_sjoin <- PA_tracts %>%\n  st_join(pa_proj)\n\n# For each county, compute:\n# Total number of tracts\n# Mean tract area\n# Count of vulnerable and underserved tracts\n# % of vulnerable tracts that are underserved\n# Average distance (mi) to nearest hospital for vulnerable tracts\n# Total elderly population in vulnerable tracts\n\ncounty_summaries <- PA_sjoin %>%\n  st_drop_geometry() %>%\n  group_by(COUNTY_NAM) %>%\n  summarize(\n    `Number of Tracts`                = n(),\n    `Average Tract Area (sq mi)`      = round(mean(AREA_SQ_MI, na.rm = TRUE), 2),\n    `Vulnerable Tracts`               = sum(vulnerable, na.rm = TRUE),\n    `Underserved Tracts`              = sum(underserved, na.rm = TRUE),\n    `Percent Underserved (%)`         = ifelse(\n      sum(vulnerable, na.rm = TRUE) > 0,\n      round(sum(underserved, na.rm = TRUE) / sum(vulnerable, na.rm = TRUE) * 100, 2),\n      0\n    ),\n    `Avg Dist (mi) - Vulnerable`      = ifelse(\n      sum(vulnerable, na.rm = TRUE) > 0,\n      round(mean(nearest_hosp_miles[vulnerable], na.rm = TRUE), 2),\n      NA_real_\n    ),\n    `Total Vulnerable Pop (65+)`      = ifelse(\n      sum(vulnerable, na.rm = TRUE) > 0,\n      sum(pop65plus[vulnerable], na.rm = TRUE),\n      0\n    )\n  )\n\n# Identify top 5 counties by % underserved\n\ntop5_underserved <- county_summaries %>%\n  arrange(desc(`Percent Underserved (%)`),desc(`Total Vulnerable Pop (65+)`)) %>%\n  slice_head(n = 5)\n\n\nknitr::kable(\n  top5_underserved,\n  caption = \"Top 5 Counties with Highest Percentage of Underserved Vulnerable Tracts\",\n  align = \"c\"\n)\n\n```\n\n**Questions to answer:**\n\n- Which 5 counties have the highest percentage of underserved vulnerable tracts?\n\n  - Answer: Bradford, Columbia, Juniata, Monroe, and Perry\n\n- Which counties have the most vulnerable people living far from hospitals?\n\n  - Answer: Perry, Bradford, Juniata, Monroe, and Columbia , in that order.\n\n- Are there any patterns in where underserved counties are located?\n \n  - Answer: They appear to be mostly rural counties, and all five counties appear in PA's MUAs index of underserved areas, so I am confident that the techniques are accurate. Interestingly, all five are white dominant population, but republican which indicates an older generation. \n\n---\n\n#### Step 7: Create Summary Table \n\n**Summary Tabulation:**\n```{r}\n#| label: Priority Counties\n#| message: false\n#| warning: false\n\n# Step 1: Compute a composite priority score\n# Combines percent underserved (severity) × total vulnerable population (scale)\ncounty_priorities <- county_summaries %>%\n  mutate(\n    priority_score      = (`Percent Underserved (%)` * `Total Vulnerable Pop (65+)`) / 1000,\n    priority_percentile = percent_rank(priority_score) * 100\n  )\n\n# Step 2: Select the top 10 counties by priority score\ntop_priority <- county_priorities %>%\n  arrange(desc(priority_score)) %>%\n  slice_head(n = 10) %>%\n  select(\n    County                              = COUNTY_NAM,\n    `# Vulnerable Tracts`               = `Vulnerable Tracts`,\n    `# Underserved Tracts`              = `Underserved Tracts`,\n    `% Underserved`                     = `Percent Underserved (%)`,\n    `Avg. Distance to Hospital (miles)` = `Avg Dist (mi) - Vulnerable`,\n    `Total Vulnerable Population (65+)` = `Total Vulnerable Pop (65+)`,\n    `Priority Score`                    = priority_score,\n    `Percentile Rank`                   = priority_percentile\n  ) %>%\n  mutate(\n    `% Underserved`                     = scales::percent(`% Underserved` / 100, accuracy = 0.1),\n    `Avg. Distance to Hospital (miles)` = round(`Avg. Distance to Hospital (miles)`, 1),\n    `Total Vulnerable Population (65+)` = scales::comma(`Total Vulnerable Population (65+)`, accuracy = 1),\n    `Priority Score`                    = scales::comma(round(`Priority Score`, 0)),\n    `Percentile Rank`                   = scales::percent(`Percentile Rank` / 100, accuracy = 0.1)\n  )\n\n# Step 3: Display formatted table\nknitr::kable(\n  top_priority,\n  caption = \"Top 10 Pennsylvania Counties for Healthcare Investment Priority (Vulnerability × Access)\",\n  align   = c(\"l\",\"c\",\"c\",\"c\",\"c\",\"c\",\"c\",\"c\"),\n  booktabs = TRUE\n)\n\n```\n\n\n---\n\n## Part 2: Comprehensive Visualization \n\n### Map 1: County-Level Choropleth \n\n**County-Level Vulnerability:**\n```{r}\n#| label: Healthcare Challenges\n#| message: false\n#| warning: false\n\n# Create county-level access map\ncounties_map <- pa_proj %>%\n  left_join(county_summaries, by = \"COUNTY_NAM\")\n\n# Map: % of vulnerable tracts underserved + hospitals (with shared legend)\nggplot() +\n  # County polygons colored by % underserved\n  geom_sf(\n    data = counties_map,\n    aes(fill = `Percent Underserved (%)`),\n    color = \"white\",\n    size  = 0.2\n  ) +\n  # Hospital points added to legend\n  geom_sf(\n    data  = hospitals_proj,\n    aes(shape = \"Hospitals\"),     # <— adds to legend\n    color = \"darkgreen\",\n    size  = 1.5,\n    alpha = 0.8,\n    inherit.aes = FALSE\n  ) +\n  # Continuous viridis fill scale\n  scale_fill_viridis_c(\n    name   = \"% of vulnerable tracts underserved\",\n    labels = scales::label_number(accuracy = 1, suffix = \"%\"),\n    limits = c(0, 100),\n    option = \"plasma\",\n    na.value = \"grey90\"\n  ) +\n  # Add a manual shape legend for hospitals\n  scale_shape_manual(\n    name   = NULL,\n    values = c(\"Hospitals\" = 16)  # solid circle\n  ) +\n  # Combine legends neatly (fill first, shape second)\n  guides(\n    fill  = guide_colorbar(order = 1, barwidth = 0.7, barheight = 8),\n    shape = guide_legend(order = 2, override.aes = list(size = 3, color = \"darkgreen\"))\n  ) +\n  labs(\n    title    = \"Healthcare Access Challenges Across Pennsylvania\",\n    subtitle = \"% of vulnerable tracts (low-income & elderly) >15 miles from the nearest hospital\",\n    caption  = \"Sources: ACS 2018–2022 (tidycensus); PA Counties & Hospitals (course data). Projection: EPSG:3365\"\n  ) +\n  coord_sf(datum = NA) +\n  theme_void() +\n  theme(\n    legend.position = \"right\",\n    legend.title    = element_text(size = 10, face = \"bold\"),\n    legend.text     = element_text(size = 9),\n    plot.title      = element_text(face = \"bold\", size = 14),\n    plot.subtitle   = element_text(size = 11),\n    plot.caption    = element_text(size = 9)\n  )\n\n```\n\n---\n\n### Map 2: Detailed Vulnerability Map \n\n**Vulnerability Maps:**\n```{r}\n#| label: Tract-Level Vulnerability Map\n#| message: false\n#| warning: false\n\n# 1) Prepare tract status for mapping\ntracts_for_map <- PA_tracts %>%\n  sf::st_transform(3365) %>%\n  dplyr::mutate(\n    tract_status = dplyr::case_when(\n      underserved ~ \"Underserved vulnerable\",\n      vulnerable  ~ \"Vulnerable (≤ 15 mi)\",\n      TRUE        ~ \"Other tracts\"\n    ),\n    tract_status = factor(\n      tract_status,\n      levels = c(\"Underserved vulnerable\", \"Vulnerable (≤ 15 mi)\", \"Other tracts\")\n    )\n  )\n\n# 2) Plot with hospitals symbol integrated into legend\nggplot() +\n  # Background tracts\n  geom_sf(\n    data  = dplyr::filter(tracts_for_map, tract_status == \"Other tracts\"),\n    fill  = \"#F2F2F2\", color = NA\n  ) +\n  # Vulnerable but near hospitals\n  geom_sf(\n    data  = dplyr::filter(tracts_for_map, tract_status == \"Vulnerable (≤ 15 mi)\"),\n    aes(fill = tract_status),\n    color = NA,\n    alpha = 0.9\n  ) +\n  # Underserved vulnerable\n  geom_sf(\n    data  = dplyr::filter(tracts_for_map, tract_status == \"Underserved vulnerable\"),\n    aes(fill = tract_status),\n    color = NA\n  ) +\n  # County outlines\n  geom_sf(\n    data  = pa_proj,\n    fill  = NA, color = \"white\", linewidth = 0.4\n  ) +\n  # Hospital locations (added to legend)\n  geom_sf(\n    data = hospitals_proj,\n    aes(shape = \"Hospitals\"),  # <—— This makes a new legend key for hospitals\n    color = \"black\",\n    size  = 1.1,\n    alpha = 0.8,\n    inherit.aes = FALSE\n  ) +\n  # Manual fill colors\n  scale_fill_manual(\n    name   = NULL,\n    values = c(\n      \"Underserved vulnerable\" = \"#C0392B\",\n      \"Vulnerable (≤ 15 mi)\"   = \"#7F8C8D\"\n    ),\n    breaks = c(\"Underserved vulnerable\", \"Vulnerable (≤ 15 mi)\"),\n    drop   = FALSE\n  ) +\n  # Add legend symbol for hospitals\n  scale_shape_manual(\n    name   = NULL,\n    values = c(\"Hospitals\" = 16)  # solid circle\n  ) +\n  guides(\n    fill  = guide_legend(order = 1, override.aes = list(alpha = 1)),\n    shape = guide_legend(order = 2, override.aes = list(size = 3, color = \"black\"))\n  ) +\n  labs(\n    title    = \"Underserved Vulnerable Census Tracts in Pennsylvania\",\n    subtitle = \"Tracts with low income & high elderly share located >15 miles from the nearest hospital\",\n    caption  = \"Sources: ACS 2018–2022 (tidycensus); Course hospitals & PA counties. Projection: EPSG:3365\"\n  ) +\n  coord_sf(datum = NA) +\n  theme_void() +\n  theme(\n    legend.position = \"right\",\n    legend.title    = element_blank(),\n    legend.text     = element_text(size = 10),\n    plot.title      = element_text(face = \"bold\", size = 14),\n    plot.subtitle   = element_text(size = 11),\n    plot.caption    = element_text(size = 9)\n  )\n\n\n```\n\n---\n\n### Chart: Distribution Analysis\n\n**Figure 1:**\n```{r}\n#| label: Hospital Distance Histogram\n#| message: false\n#| warning: false\n#| fig-cap: \"The distribution is heavily left-skewed, with most vulnerable tracts located close to hospitals. Only a few exceed the 15-mile threshold, confirming that long-distance access barriers are rare but geographically distinct.\"\n\n# --- Prep: tract-level data (vulnerable only) ---\ntract_vuln <- PA_tracts %>%\n  st_drop_geometry() %>%\n  filter(vulnerable == TRUE, !is.na(nearest_hosp_miles))\n\n# --- Histogram: distance distribution among vulnerable tracts ---\np_hist <- ggplot(tract_vuln, aes(x = nearest_hosp_miles)) +\n  geom_histogram(bins = 30, alpha = 0.8, fill = \"gray40\") +\n  geom_density(aes(y = after_stat(..count..)), linewidth = 0.8, alpha = 0.4) +\n  geom_vline(xintercept = 15, linewidth = 0.7, linetype = \"dashed\") +\n  labs(\n    title = \"Distance to Nearest Hospital (Vulnerable Tracts)\",\n    subtitle = \"Dashed line at 15 miles (underserved threshold)\",\n    x = \"Distance to nearest hospital (miles)\",\n    y = \"Number of tracts\",\n    caption = \"Sample: PA tracts flagged as vulnerable (low income & high elderly share).\"\n  ) +\n  theme_minimal(base_size = 11)\n\np_hist\n```\n\n**Figure 2:**\n```{r}\n#| label: Hospital Distance Scatter\n#| message: false\n#| warning: false\n#| fig-cap: \"Most vulnerable tracts lie within 10 miles of a hospital, though a few outliers exceed the 15-mile cutoff. Larger elderly populations are not systematically farther away, suggesting that isolation is primarily geographic rather than demographic.\"\n\np_scatter <- ggplot(tract_vuln, aes(x = nearest_hosp_miles, y = pop65plus)) +\n  geom_point(alpha = 0.4) +\n  geom_vline(xintercept = 15, linewidth = 0.7, linetype = \"dashed\") +\n  scale_y_continuous(labels = scales::comma) +\n  labs(\n    title = \"Distance vs. Size of Vulnerable Population (Tract-Level)\",\n    subtitle = \"Each point is a vulnerable tract; vertical line marks 15 miles\",\n    x = \"Distance to nearest hospital (miles)\",\n    y = \"Vulnerable population (65+)\"\n  ) +\n  theme_minimal(base_size = 11)\n\np_scatter\n```\n\n---\n\n## Part 3: Bring Your Own Data Analysis \n\n### Your Analysis\n\n1. **Loading and Synchronziing Fire/EMS Data with Census Tract**\n\n```{r}\n#| label: Load Station Data\n#| message: false\n#| warning: false\n\nlibrary(sf)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(units)\nlibrary(ggplot2)\nlibrary(knitr)\nlibrary(scales)\nlibrary(tidycensus)\n\n# ---- Load data ----\n# Fire/EMS stations (single shapefile)\nstations_raw <- st_read(\"FIRE_EMS/Fire_and_Emergency_Medical_Service__EMS__Stations_pt.shp\", quiet = TRUE)\n\n# Project counties and tracts you already have (from earlier parts)\nstations_proj <- st_transform(stations_raw, 3365)\npa_proj       <- st_transform(pa_counties, 3365)   # county polygons\ntracts_proj   <- st_transform(PA_tracts, 3365)     # tracts with total_popE\n\n# ---- 1) Dataset description (answers: source/date, features, CRS) ----\ndataset_info <- tibble::tibble(\n  `Dataset`        = \"Fire & Emergency Medical Service (EMS) Stations (points)\",\n  `Source`         = \"Pennsylvania Spatial Data Access (PASDA), Homeland Infrastructure Foundation Level Data HIFLD\",\n  `Data vintage`   = \"2025\",\n  `Feature count`  = nrow(stations_raw),\n  `Geometry type`  = paste(unique(as.character(st_geometry_type(stations_raw))), collapse = \", \"),\n  `Original CRS`   = paste0(st_crs(stations_raw)$epsg, \" — \", st_crs(stations_raw)$Name),\n  `Analysis CRS`   = paste0(\"EPSG:3365 — \", st_crs(stations_proj)$Name)\n)\n\nknitr::kable(dataset_info, caption = \"Fire/EMS dataset: source, features, and CRS\")\n\n```\n\n**Questions to answer:**\n\n- What dataset did you choose and why?\n\n  - Answer: The Fire & Emergency Medical Service (EMS) Stations point layer for Pennsylvania (single shapefile). It’s the right basis to test response coverage—we can buffer stations, apportion population coverage by tract, and compare coverage against population density and minority share.\n\n- What is the data source and date?\n\n  - Answer: Pennsylvania Spatial Data Access (PASDA), Homeland Infrastructure Foundation Level Data HIFLD, for the year 2025. \n  \n- How many features does it contain?\n\n  - Answer: 2,591 station points.\n  \n- What CRS is it in? Did you need to transform it?\n\n  - Answer: WGS84, transformed to 3365 for spatial calculations. \n\n---\n\n2. **Research question**\n\nWhich Pennsylvania tracts are high-priority for Fire/EMS expansion, and where do these gaps overlap with high-minority communities?\n\n---\n\n3. **Spatial analysis**\n\n**Coverage and Equity:**\n```{r}\n#| label: Station Analysis\n#| message: false\n#| warning: false\n\n# What this chunk does:\n#  1) Pulls ACS race (B03002) to compute minority share per tract\n#  2) Builds 2-mile service areas around Fire/EMS stations (EPSG:3365, ftUS)\n#  3) Area-weights tract populations to estimate % population covered vs. uncovered\n#  4) Aggregates key metrics to counties\n#  5) Outputs:\n#     - Statewide table (incl. \"% Uncovered that is Minority\")\n#     - Equity Table A (Top 10 counties by estimated minority uncovered)\n#     - Tract-level Coverage vs. Density Map (deficit index)\n#     - Tract-level Coverage Equity Map (high-minority + low-coverage)\n#\n# Notes:\n#  - Distance proxy: 2 miles ≈ ~5-min drive (network service areas would be ideal)\n#  - Population coverage is area-weighted at the tract level\n#  - EPSG:3365 (PA South, ftUS) is used for accurate buffering/distances\n\n\n# Pull total population and non-Hispanic White counts at the tract level\nrace_vars <- c(total = \"B03002_001\", white_nonhisp = \"B03002_003\")\n\npa_race <- get_acs(\n  geography = \"tract\",\n  variables = race_vars,\n  state     = \"PA\",\n  year      = 2022,\n  survey    = \"acs5\",\n  output    = \"wide\"\n) %>%\n  transmute(\n    GEOID,\n    total         = totalE,\n    white_nonhisp = white_nonhispE\n  ) %>%\n  mutate(\n    # Count of residents who are NOT non-Hispanic White\n    minority     = pmax(total - white_nonhisp, 0),\n    pct_minority = if_else(total > 0, minority / total * 100, NA_real_)\n  )\n\n# Project counties and tracts to EPSG:3365 and attach race\npa_proj <- st_transform(pa_counties, 3365)\ntracts_proj <- st_transform(PA_tracts, 3365) %>%\n  left_join(pa_race, by = \"GEOID\")\n\n\n# Build 2-mile (= 10,560 ft) coverage\ntwo_miles_ft <- 10560\n\n# Buffer Fire/EMS stations and dissolve into one coverage polygon\nstns_buffer    <- st_buffer(stations_proj, dist = two_miles_ft)\ncoverage_union <- st_union(stns_buffer) |> st_as_sf()\n\n# Clip to Pennsylvania extent for clean intersections/plots\ncoverage_union <- st_intersection(coverage_union, st_union(pa_proj) |> st_as_sf())\n\n# Compute tract areas in square miles (for density + apportionment)\ntracts_proj$area_mi2 <- as.numeric(set_units(st_area(tracts_proj), \"mi^2\"))\n\n# Intersect coverage with tracts to get covered sub-areas\nt_cov_parts <- st_intersection(tracts_proj, coverage_union)\n\n# Sum covered area per tract (sq mi)\nt_cov_area <- t_cov_parts %>%\n  mutate(area_cov_mi2 = as.numeric(set_units(st_area(geometry), \"mi^2\"))) %>%\n  st_drop_geometry() %>%\n  group_by(GEOID) %>%\n  summarise(area_cov_mi2 = sum(area_cov_mi2, na.rm = TRUE), .groups = \"drop\")\n\n# Combine: density, coverage fraction, covered/uncovered population\ntracts_cov <- tracts_proj %>%\n  left_join(t_cov_area, by = \"GEOID\") %>%\n  mutate(\n    area_cov_mi2  = replace_na(area_cov_mi2, 0),\n    pop           = total_popE,                                # from your earlier ACS pull\n    pop_density   = if_else(area_mi2 > 0, pop / area_mi2, NA_real_),\n    cover_frac    = pmin(1, if_else(area_mi2 > 0, area_cov_mi2 / area_mi2, 0)),\n    pop_cov       = pop * cover_frac,\n    pop_uncovered = pmax(0, pop - pop_cov)\n  ) %>%\n  # Recompute minority fields on THIS object to guarantee availability downstream\n  mutate(\n    minority     = if_else(!is.na(total) & !is.na(white_nonhisp),\n                           pmax(total - white_nonhisp, 0), NA_real_),\n    pct_minority = if_else(!is.na(total) & total > 0,\n                           minority / total * 100, NA_real_)\n  )\n\n\n# Estimate minority share within the uncovered population at the tract level\ntracts_equity <- tracts_cov %>%\n  mutate(\n    minority_share_tr   = if_else(!is.na(total) & total > 0, minority / total, NA_real_),\n    est_uncovered_minor = pop_uncovered * minority_share_tr\n  )\n\n# Compute the statewide row (raw)\nstatewide_tbl_raw <- tracts_equity %>%\n  st_drop_geometry() %>%\n  summarise(\n    Total_Population             = sum(pop, na.rm = TRUE),\n    Covered_Population           = sum(pop_cov, na.rm = TRUE),\n    Uncovered_Population         = sum(pop_uncovered, na.rm = TRUE),\n    Estimated_Uncovered_Minority = sum(est_uncovered_minor, na.rm = TRUE),\n    Stations                     = nrow(stations_proj)\n  ) %>%\n  mutate(\n    Pct_Covered                    = Covered_Population   / Total_Population,\n    Pct_Uncovered                  = Uncovered_Population / Total_Population,\n    Pct_Uncovered_That_Is_Minority = if_else(\n      Uncovered_Population > 0,\n      Estimated_Uncovered_Minority / Uncovered_Population,\n      NA_real_\n    )\n  )\n\n# Make a display-friendly, formatted one-row table\nstatewide_tbl_display <- statewide_tbl_raw %>%\n  transmute(\n    `Total population`                     = scales::comma(Total_Population),\n    `Covered population`                   = scales::comma(Covered_Population),\n    `Uncovered population`                 = scales::comma(Uncovered_Population),\n    `Estimated uncovered minority`         = scales::comma(Estimated_Uncovered_Minority),\n    `Stations (count)`                     = scales::comma(Stations),\n    `Percent covered`                      = scales::percent(Pct_Covered, accuracy = 0.01),\n    `Percent uncovered`                    = scales::percent(Pct_Uncovered, accuracy = 0.01),\n    `Uncovered that is minority`           = scales::percent(Pct_Uncovered_That_Is_Minority, accuracy = 0.01)\n  )\n\nknitr::kable(\n  statewide_tbl_display,\n  caption = \"Statewide coverage & equity (area-weighted, 2-mile buffers)\",\n  align   = \"c\",\n  booktabs = TRUE\n)\n\n# Count stations per county for context (optional columns if you want to show later)\nstns_in_county <- st_join(stations_proj, pa_proj, join = st_within)\ncounty_station_counts <- stns_in_county %>%\n  st_drop_geometry() %>%\n  count(COUNTY_NAM, name = \"Stations\")\n\n# Aggregate tract metrics to counties\nt2c <- st_join(tracts_equity, pa_proj) %>% st_drop_geometry()\n\ncounty_equity <- t2c %>%\n  group_by(COUNTY_NAM) %>%\n  summarise(\n    Total_Population             = sum(pop, na.rm = TRUE),\n    Covered_Population           = sum(pop_cov, na.rm = TRUE),\n    Uncovered_Population         = sum(pop_uncovered, na.rm = TRUE),\n    Minority_Population          = sum(minority, na.rm = TRUE),\n    Estimated_Uncovered_Minority = sum(est_uncovered_minor, na.rm = TRUE),\n    .groups = \"drop\"\n  ) %>%\n  left_join(county_station_counts, by = \"COUNTY_NAM\") %>%\n  mutate(\n    `Percent Covered` = if_else(Total_Population > 0,\n                                Covered_Population / Total_Population * 100, NA_real_)\n  )\n\n# extracting top ten counties with high unocvered minority levels. \nequity_top_abs <- county_equity %>%\n  arrange(desc(Estimated_Uncovered_Minority)) %>%\n  slice_head(n = 10) %>%\n  select(\n    County                          = COUNTY_NAM,\n    `Estimated Minority Uncovered`  = Estimated_Uncovered_Minority,\n    `Total Uncovered`               = Uncovered_Population,\n    `Percent Covered`               = `Percent Covered`,\n    Stations\n  ) %>%\n  mutate(\n    across(c(`Estimated Minority Uncovered`, `Total Uncovered`, Stations), comma),\n    across(c(`Percent Covered`), ~round(.x, 1))\n  )\n\nknitr::kable(\n  equity_top_abs,\n  caption = \"Equity Table: Top 10 Counties by Estimated Minority Uncovered Population\",\n  align   = \"c\"\n)\n\n# Z-score standardization and the “deficiency index”\n# --------------------------------------------------\n# We compare two quantities on different scales:\n#   (1) pop_density_i          = population per square mile in tract i\n#   (2) pct_pop_covered_i      = % of tract i’s population within 2 miles of a station\n#\n# To make them comparable, we standardize each with a z-score:\n#   z(x_i) = (x_i − mean(x)) / sd(x), computed across all Pennsylvania tracts.\n# This rescales both variables to unitless, mean-0, sd-1 measures so differences\n# reflect relative position within the statewide distribution (not raw units).\n#\n# Deficiency index (higher = denser but under-covered):\n#   deficiency_i = z(pop_density_i) − z(pct_pop_covered_i)\n# Interpretation:\n#   - Positive : tract is relatively dense given its relatively low coverage\n#                  (potential service gap / higher priority).\n#   - 0        : density and coverage are in balance relative to peers.\n#   - Negative : tract is relatively sparse and/or relatively well covered.\n\ntracts_deficit <- tracts_cov %>%\n  mutate(\n    pct_pop_covered = if_else(pop > 0, (pop_cov / pop) * 100, NA_real_),\n    z_density       = as.numeric(scale(pop_density)),\n    z_coverage      = as.numeric(scale(pct_pop_covered)),\n    deficit_index   = z_density - z_coverage  # higher = dense but poorly covered\n  )\n\nggplot() +\n  geom_sf(\n    data  = tracts_deficit,\n    aes(fill = deficit_index),\n    color = NA\n  ) +\n  geom_sf(\n    data  = pa_proj,\n    fill  = NA, color = \"white\", linewidth = 0.25\n  ) +\n  geom_sf(\n    data  = stations_proj,\n    aes(shape = \"Fire/EMS stations\"),\n    color = \"darkgreen\", size = 0.9, alpha = 0.85, inherit.aes = FALSE\n  ) +\n  scale_fill_gradient2(\n    name     = \"Coverage Deficit Index\\n(+ = dense but low coverage)\",\n    low      = \"#2b83ba\", mid = \"white\", high = \"#d7191c\",\n    midpoint = 0\n  ) +\n  scale_shape_manual(name = NULL, values = c(\"Fire/EMS stations\" = 16)) +\n  guides(\n    fill  = guide_colorbar(order = 1, barheight = 8),\n    shape = guide_legend(order = 2, override.aes = list(size = 2.2, color = \"darkgreen\"))\n  ) +\n  labs(\n    title    = \"Coverage vs. Density (Tract-Level): Potential Fire/EMS Service Gaps\",\n    subtitle = \"Index = z(population density) − z(% of tract population within 2 miles of a station)\",\n    caption  = \"Buffers ≈ 2 miles (EPSG:3365). Coverage apportioned by tract area overlap.\"\n  ) +\n  coord_sf(datum = NA) +\n  theme_void() +\n  theme(\n    legend.position = \"right\",\n    plot.title      = element_text(face = \"bold\", size = 14),\n    plot.subtitle   = element_text(size = 11),\n    plot.caption    = element_text(size = 9)\n  )\n\n\n# Thresholds: top quartile minority share, bottom quartile coverage\nthr_minority_tr <- quantile(tracts_deficit$pct_minority,     0.75, na.rm = TRUE)\nthr_cover_tr    <- quantile(tracts_deficit$pct_pop_covered, 0.25, na.rm = TRUE)\n\ntracts_equity_tr <- tracts_deficit %>%\n  mutate(\n    high_minority_tr = pct_minority     >= thr_minority_tr,\n    low_cover_tr     = pct_pop_covered  <= thr_cover_tr,\n    flag_both_tr     = high_minority_tr & low_cover_tr\n  )\n\nggplot() +\n  # Fill by % of tract population covered (easier to interpret than the index)\n  geom_sf(\n    data  = tracts_equity_tr,\n    aes(fill = pct_pop_covered),\n    color = NA\n  ) +\n  # Red outline for tracts meeting BOTH: high-minority AND low-coverage\n  geom_sf(\n    data      = dplyr::filter(tracts_equity_tr, flag_both_tr),\n    fill      = NA,\n    color     = \"cyan\",\n    linewidth = 0.35\n  ) +\n  geom_sf(\n    data  = pa_proj,\n    fill  = NA, color = \"white\", linewidth = 0.25\n  ) +\n  geom_sf(\n    data  = stations_proj,\n    aes(shape = \"Fire/EMS stations\"),\n    color = \"darkgreen\", size = 0.9, alpha = 0.85, inherit.aes = FALSE\n  ) +\n  scale_fill_viridis_c(\n    name   = \"% of tract population within 2 miles\",\n    labels = label_number(accuracy = 1, suffix = \"%\"),\n    option = \"plasma\",\n    na.value = \"grey90\"\n  ) +\n  scale_shape_manual(name = NULL, values = c(\"Fire/EMS stations\" = 16)) +\n  guides(\n    fill  = guide_colorbar(order = 1, barheight = 8),\n    shape = guide_legend(order = 2, override.aes = list(size = 2.2, color = \"darkgreen\"))\n  ) +\n  labs(\n    title    = \"Coverage Equity (Tract-Level): Fire/EMS Access in Pennsylvania\",\n    subtitle = paste0(\n      \"Cyan outline = top 25% minority share (≥ \", round(thr_minority_tr, 1),\n      \"%) AND bottom 25% coverage (≤ \", round(thr_cover_tr, 1), \"%)\"\n    ),\n    caption  = \"Minority share: ACS B03002 (2018–2022). Coverage: 2-mile buffers, area-weighted to tracts.\"\n  ) +\n  coord_sf(datum = NA) +\n  theme_void() +\n  theme(\n    legend.position = \"right\",\n    plot.title      = element_text(face = \"bold\", size = 14),\n    plot.subtitle   = element_text(size = 11),\n    plot.caption    = element_text(size = 9)\n  )\n```\n\n\n**Your interpretation:**\n\nOverall access is high. About 83.6% of residents live within 2 miles of a station; 16.4% (≈2.14M) are outside. Roughly 9.3% of the uncovered statewide are minority (≈198k). Where the gaps concentrate (density vs. coverage map). The largest clusters of dense-but-under-covered tracts appear along the Poconos/Route-80 corridor (Monroe, Pike, parts of Wayne) and in the south-central/exurban belt around Chester, Franklin, Adams, Cumberland, and York. Much of the rural interior is low density with low coverage—but that’s not a “deficit” by the index. Equity overlay (tract-level). Cyan-outlined tracts (high-minority + low coverage) are scattered but not widespread. They appear mainly in the Monroe–Pike area and selected exurban tracts in Chester/Lancaster/York. This matches the Top-10 equity table, where Monroe and Chester lead in the absolute number of minority residents outside the 2-mile catchment. Counties to watch. From the equity table: Monroe, Chester, Pike, Lancaster, York (plus Franklin/Cumberland/Adams/Wayne/Centre) combine sizable uncovered totals with notable minority counts—consistent with the map hot spots.\n\n\n## Finally - A few comments about your incorporation of feedback!\nI recieved two comments in the last assignment: \n\n- Hide the setup code block. The Census API key is not supposed to be shared publicly.\n\n  - Action: Setup code blocks were hidden using the quarto functionality.\n\n- If you want to print something, provide a brief explanation. If just for personal reference, print in console (don't need them in markdown)\n\n  - Action: Using the quarto functionality, I prevented auxillary tabulations required for answering certain questions, but not requested by instructions from appear in the markdown, but they remain in the code blocks. \n\n---\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"embed-resources":true,"output-file":"AlAbbas_Mohamad_Assignment2.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.8.24","theme":"cosmo","title":"Assignment 2: Spatial Analysis and Visualization","subtitle":"Healthcare Access and Equity in Pennsylvania","author":"Mohamad Al-Abbas","date":"today","toc-location":"left"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}