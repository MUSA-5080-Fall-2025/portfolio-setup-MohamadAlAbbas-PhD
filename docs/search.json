[
  {
    "objectID": "weekly-notes/week-05-notes.html",
    "href": "weekly-notes/week-05-notes.html",
    "title": "Week 1 Notes - Course Introduction",
    "section": "",
    "text": "Setting up repositories on"
  },
  {
    "objectID": "weekly-notes/week-05-notes.html#key-concepts-learned",
    "href": "weekly-notes/week-05-notes.html#key-concepts-learned",
    "title": "Week 1 Notes - Course Introduction",
    "section": "",
    "text": "Setting up repositories on"
  },
  {
    "objectID": "weekly-notes/week-05-notes.html#coding-techniques",
    "href": "weekly-notes/week-05-notes.html#coding-techniques",
    "title": "Week 1 Notes - Course Introduction",
    "section": "Coding Techniques",
    "text": "Coding Techniques\n\nBasics of tidyverse and its accompanying commands of filter(), select(), mutate(), and summarize()\nQuarto functions on how to bold, italics, both bold and italics, code list, and strikethrough"
  },
  {
    "objectID": "weekly-notes/week-05-notes.html#questions-challenges",
    "href": "weekly-notes/week-05-notes.html#questions-challenges",
    "title": "Week 1 Notes - Course Introduction",
    "section": "Questions & Challenges",
    "text": "Questions & Challenges\n\n\n\nEverything was clear. I would still like to mess around more with Quarto."
  },
  {
    "objectID": "weekly-notes/week-05-notes.html#connections-to-policy",
    "href": "weekly-notes/week-05-notes.html#connections-to-policy",
    "title": "Week 1 Notes - Course Introduction",
    "section": "Connections to Policy",
    "text": "Connections to Policy\n\n\nThis was a building block week, so not much of direct application rather tracking and documentation baseline for setup."
  },
  {
    "objectID": "weekly-notes/week-05-notes.html#reflection",
    "href": "weekly-notes/week-05-notes.html#reflection",
    "title": "Week 1 Notes - Course Introduction",
    "section": "Reflection",
    "text": "Reflection\n\nLearning how to create a custom repository was both enjoyable and insightful.\nIt could also serve as a way to share supplementary analyses and to present code in a more public, graphical, and accessible format for non-coding audiences."
  },
  {
    "objectID": "weekly-notes/week-03-notes.html",
    "href": "weekly-notes/week-03-notes.html",
    "title": "Week 1 Notes - Course Introduction",
    "section": "",
    "text": "Setting up repositories on"
  },
  {
    "objectID": "weekly-notes/week-03-notes.html#key-concepts-learned",
    "href": "weekly-notes/week-03-notes.html#key-concepts-learned",
    "title": "Week 1 Notes - Course Introduction",
    "section": "",
    "text": "Setting up repositories on"
  },
  {
    "objectID": "weekly-notes/week-03-notes.html#coding-techniques",
    "href": "weekly-notes/week-03-notes.html#coding-techniques",
    "title": "Week 1 Notes - Course Introduction",
    "section": "Coding Techniques",
    "text": "Coding Techniques\n\nBasics of tidyverse and its accompanying commands of filter(), select(), mutate(), and summarize()\nQuarto functions on how to bold, italics, both bold and italics, code list, and strikethrough"
  },
  {
    "objectID": "weekly-notes/week-03-notes.html#questions-challenges",
    "href": "weekly-notes/week-03-notes.html#questions-challenges",
    "title": "Week 1 Notes - Course Introduction",
    "section": "Questions & Challenges",
    "text": "Questions & Challenges\n\n\n\nEverything was clear. I would still like to mess around more with Quarto."
  },
  {
    "objectID": "weekly-notes/week-03-notes.html#connections-to-policy",
    "href": "weekly-notes/week-03-notes.html#connections-to-policy",
    "title": "Week 1 Notes - Course Introduction",
    "section": "Connections to Policy",
    "text": "Connections to Policy\n\n\nThis was a building block week, so not much of direct application rather tracking and documentation baseline for setup."
  },
  {
    "objectID": "weekly-notes/week-03-notes.html#reflection",
    "href": "weekly-notes/week-03-notes.html#reflection",
    "title": "Week 1 Notes - Course Introduction",
    "section": "Reflection",
    "text": "Reflection\n\nLearning how to create a custom repository was both enjoyable and insightful.\nIt could also serve as a way to share supplementary analyses and to present code in a more public, graphical, and accessible format for non-coding audiences."
  },
  {
    "objectID": "weekly-notes/week-01-notes.html",
    "href": "weekly-notes/week-01-notes.html",
    "title": "Week 1 Notes - Course Introduction",
    "section": "",
    "text": "Public Sector Data scinece has several considerations different from private sector\n\nPublic good, and equity consideration\nNeeds to be interpretable and not have algorithmic bias\n\nGit is for version control system (VCS)\nGithub is the cloud computing backend of Git\nGithub Lingo\n\nFolder -&gt; Repo\nCommit -&gt; Post a snapshot\nPush means to send files to cloud\nPull downloads the files to local machine\n\nSetting up repositories on\n“YAML Ain’t Markup Language”"
  },
  {
    "objectID": "weekly-notes/week-01-notes.html#key-concepts-learned",
    "href": "weekly-notes/week-01-notes.html#key-concepts-learned",
    "title": "Week 1 Notes - Course Introduction",
    "section": "",
    "text": "Public Sector Data scinece has several considerations different from private sector\n\nPublic good, and equity consideration\nNeeds to be interpretable and not have algorithmic bias\n\nGit is for version control system (VCS)\nGithub is the cloud computing backend of Git\nGithub Lingo\n\nFolder -&gt; Repo\nCommit -&gt; Post a snapshot\nPush means to send files to cloud\nPull downloads the files to local machine\n\nSetting up repositories on\n“YAML Ain’t Markup Language”"
  },
  {
    "objectID": "weekly-notes/week-01-notes.html#coding-techniques",
    "href": "weekly-notes/week-01-notes.html#coding-techniques",
    "title": "Week 1 Notes - Course Introduction",
    "section": "Coding Techniques",
    "text": "Coding Techniques\n\nBasics of tidyverse and its accompanying commands of filter(), select(), mutate(), and summarize()\nQuarto functions on how to bold, italics, both bold and italics, code list, and strikethrough\nQuarto uses — as the header call\n“#” are used as the header calls\nTibbles\n\nselect() choose columns\nfilter() choose rows\nmutate() create new variables\nsummarize() calculate statistics\ngroup_by() operate on sub-groups\n\nSummarize and group_by tend ot happen together and typically using a pipeline %&gt;%\n%&gt;% pipelines are used to connect multiple codes in one command line rather than a sequence."
  },
  {
    "objectID": "weekly-notes/week-01-notes.html#questions-challenges",
    "href": "weekly-notes/week-01-notes.html#questions-challenges",
    "title": "Week 1 Notes - Course Introduction",
    "section": "Questions & Challenges",
    "text": "Questions & Challenges\n\nEverything was clear. I would still like to mess around more with Quarto.\nI messed around with Quarto again @ 9/14/2025"
  },
  {
    "objectID": "weekly-notes/week-01-notes.html#connections-to-policy",
    "href": "weekly-notes/week-01-notes.html#connections-to-policy",
    "title": "Week 1 Notes - Course Introduction",
    "section": "Connections to Policy",
    "text": "Connections to Policy\n\nThis was a building block week, so not much of direct application rather tracking and documentation baseline for setup."
  },
  {
    "objectID": "weekly-notes/week-01-notes.html#reflection",
    "href": "weekly-notes/week-01-notes.html#reflection",
    "title": "Week 1 Notes - Course Introduction",
    "section": "Reflection",
    "text": "Reflection\n\nLearning how to create a custom repository was both enjoyable and insightful.\nIt could also serve as a way to share supplementary analyses and to present code in a more public, graphical, and accessible format for non-coding audiences."
  },
  {
    "objectID": "labs/lab_setup_instructions.html",
    "href": "labs/lab_setup_instructions.html",
    "title": "Lab Setup Instructions",
    "section": "",
    "text": "Each week, you’ll complete lab assignments and add them to your portfolio website. This document explains the one-time setup process and the weekly workflow you’ll follow all semester.\n\n\n\n\n\nFirst, clone the course repository (you only need to do this once):\n\nOpen Terminal/Command Prompt\nNavigate to where you want to store course materials:\ncd ~/Desktop  # or wherever you keep school folders\nClone the course repository:\ngit clone https://github.com/MUSA-5080-Fall-2025/MUSA-5080-Fall-2025.git\n\nImportant: This creates a separate folder from your portfolio repository.\n\n\n\nIn your portfolio repository, create this folder structure:\nyour-portfolio/\n├── _quarto.yml           # You'll edit this\n├── index.qmd            # Your home page  \n├── weekly-notes/        # Already exists\n├── labs/                # CREATE THIS FOLDER\n│   └── lab_0/           # CREATE THIS FOLDER\n│       ├── lab_0_template.qmd    # You'll copy this file here\n│       └── data/        # CREATE THIS FOLDER (copy data folder)\n└── ... (other files)\nIn RStudio: 1. In the Files pane, click “New Folder” 2. Name it labs 3. Inside labs, create another folder called lab_0 4. Inside lab_0, create a folder called data\n\n\n\nOpen your _quarto.yml file and modify the navbar section to add a Labs menu:\nReplace this section:\nnavbar:\n  left:\n    - href: index.qmd\n      text: Home\n    - href: weekly-notes/\n      text: Weekly Notes\nWith this:\nnavbar:\n  left:\n    - href: index.qmd\n      text: Home\n    - href: weekly-notes/\n      text: Weekly Notes\n    - text: Labs\n      menu:\n        - href: labs/lab_0/\n          text: Lab 0: dplyr Basics\nImportant: Make sure the indentation matches exactly! YAML is sensitive to spacing.\n\n\n\n\nSave your _quarto.yml file\nIn RStudio, go to Build → Render Website\nCheck that you now see a “Labs” dropdown in your navigation menu\n\n\n\n\n\n\n\n\nGo to the course repository\nNavigate to labs/lab_X/ (where X is the lab number)\nDownload or copy the lab template files\n\n\n\n\n\nIn your portfolio, create a new folder: labs/lab_X/\nCopy the template .qmd file into this folder\nCopy any data files into labs/lab_X/data/\n\n\n\n\n\nOpen the lab .qmd file\nUpdate the author field with your name\nComplete all the exercises\nFill in all the “[YOUR ANSWER]” sections\n\n\n\n\nAdd the new lab to your _quarto.yml file:\nnavbar:\n  left:\n    - href: index.qmd\n      text: Home\n    - href: weekly-notes/\n      text: Weekly Notes\n    - text: Labs\n      menu:\n        - href: labs/lab_0/\n          text: Lab 0: dplyr Basics\n        - href: labs/lab_1/           # ADD NEW LABS HERE\n          text: Lab 1: [Lab Title]\n\n\n\n\nBuild your site: Build → Render Website\nCheck locally: Make sure everything looks good\nCommit your changes:\ngit add .\ngit commit -m \"Complete Lab X: [brief description]\"\nPush to GitHub:\ngit push origin main\nCheck your live site: Your portfolio should update automatically\n\n\n\n\n\n\n\n\nCheck your _quarto.yml indentation\nMake sure all file paths are correct\nLook for typos in file names\n\n\n\n\n\nVerify you added it to _quarto.yml\nCheck that the href: path matches your folder structure\nMake sure you rendered the website after making changes\n\n\n\n\n\nCheck that data files are in the right location\nVerify you’re using relative paths: \"data/filename.csv\"\nMake sure you’re working within your R project\n\n\n\n\n\nConfirm you committed and pushed all changes\nCheck that GitHub Actions completed successfully (green checkmark)\nWait a few minutes - updates can take time\n\n\n\n\n\n\nWork incrementally: Complete one exercise at a time, render frequently\nUse descriptive commit messages: “Complete filtering exercises for Lab 0”\nKeep files organized: Don’t put data files in wrong folders\nTest locally first: Always render and check before pushing\nAsk for help: Use office hours or discussion board if stuck\n\n\n\n\nyour-portfolio/\n├── _quarto.yml\n├── index.qmd\n├── weekly-notes/\n│   ├── index.qmd\n│   ├── week_01.qmd\n│   └── week_02.qmd\n├── labs/\n│   ├── lab_0/\n│   │   ├── index.qmd\n│   │   └── data/\n│   │       └── car_sales_data.csv\n│   ├── lab_1/\n│   │   ├── index.qmd\n│   │   └── data/\n│   │       └── census_data.csv\n│   └── lab_2/\n│       ├── index.qmd\n│       └── data/\n│           └── housing_data.csv\n└── docs/                    # Generated by Quarto\n    ├── index.html\n    ├── weekly-notes/\n    ├── labs/\n    └── ...\nBy the end of the semester, you’ll have a professional portfolio showcasing all your data analysis work!\n\n\n\n\nTechnical issues: Post on Canvas discussion board\nConceptual questions: Come to office hours\nGitHub problems: Include error messages in your questions"
  },
  {
    "objectID": "labs/lab_setup_instructions.html#overview",
    "href": "labs/lab_setup_instructions.html#overview",
    "title": "Lab Setup Instructions",
    "section": "",
    "text": "Each week, you’ll complete lab assignments and add them to your portfolio website. This document explains the one-time setup process and the weekly workflow you’ll follow all semester."
  },
  {
    "objectID": "labs/lab_setup_instructions.html#one-time-setup-week-1-only",
    "href": "labs/lab_setup_instructions.html#one-time-setup-week-1-only",
    "title": "Lab Setup Instructions",
    "section": "",
    "text": "First, clone the course repository (you only need to do this once):\n\nOpen Terminal/Command Prompt\nNavigate to where you want to store course materials:\ncd ~/Desktop  # or wherever you keep school folders\nClone the course repository:\ngit clone https://github.com/MUSA-5080-Fall-2025/MUSA-5080-Fall-2025.git\n\nImportant: This creates a separate folder from your portfolio repository.\n\n\n\nIn your portfolio repository, create this folder structure:\nyour-portfolio/\n├── _quarto.yml           # You'll edit this\n├── index.qmd            # Your home page  \n├── weekly-notes/        # Already exists\n├── labs/                # CREATE THIS FOLDER\n│   └── lab_0/           # CREATE THIS FOLDER\n│       ├── lab_0_template.qmd    # You'll copy this file here\n│       └── data/        # CREATE THIS FOLDER (copy data folder)\n└── ... (other files)\nIn RStudio: 1. In the Files pane, click “New Folder” 2. Name it labs 3. Inside labs, create another folder called lab_0 4. Inside lab_0, create a folder called data\n\n\n\nOpen your _quarto.yml file and modify the navbar section to add a Labs menu:\nReplace this section:\nnavbar:\n  left:\n    - href: index.qmd\n      text: Home\n    - href: weekly-notes/\n      text: Weekly Notes\nWith this:\nnavbar:\n  left:\n    - href: index.qmd\n      text: Home\n    - href: weekly-notes/\n      text: Weekly Notes\n    - text: Labs\n      menu:\n        - href: labs/lab_0/\n          text: Lab 0: dplyr Basics\nImportant: Make sure the indentation matches exactly! YAML is sensitive to spacing.\n\n\n\n\nSave your _quarto.yml file\nIn RStudio, go to Build → Render Website\nCheck that you now see a “Labs” dropdown in your navigation menu"
  },
  {
    "objectID": "labs/lab_setup_instructions.html#weekly-workflow-every-lab",
    "href": "labs/lab_setup_instructions.html#weekly-workflow-every-lab",
    "title": "Lab Setup Instructions",
    "section": "",
    "text": "Go to the course repository\nNavigate to labs/lab_X/ (where X is the lab number)\nDownload or copy the lab template files\n\n\n\n\n\nIn your portfolio, create a new folder: labs/lab_X/\nCopy the template .qmd file into this folder\nCopy any data files into labs/lab_X/data/\n\n\n\n\n\nOpen the lab .qmd file\nUpdate the author field with your name\nComplete all the exercises\nFill in all the “[YOUR ANSWER]” sections\n\n\n\n\nAdd the new lab to your _quarto.yml file:\nnavbar:\n  left:\n    - href: index.qmd\n      text: Home\n    - href: weekly-notes/\n      text: Weekly Notes\n    - text: Labs\n      menu:\n        - href: labs/lab_0/\n          text: Lab 0: dplyr Basics\n        - href: labs/lab_1/           # ADD NEW LABS HERE\n          text: Lab 1: [Lab Title]\n\n\n\n\nBuild your site: Build → Render Website\nCheck locally: Make sure everything looks good\nCommit your changes:\ngit add .\ngit commit -m \"Complete Lab X: [brief description]\"\nPush to GitHub:\ngit push origin main\nCheck your live site: Your portfolio should update automatically"
  },
  {
    "objectID": "labs/lab_setup_instructions.html#troubleshooting",
    "href": "labs/lab_setup_instructions.html#troubleshooting",
    "title": "Lab Setup Instructions",
    "section": "",
    "text": "Check your _quarto.yml indentation\nMake sure all file paths are correct\nLook for typos in file names\n\n\n\n\n\nVerify you added it to _quarto.yml\nCheck that the href: path matches your folder structure\nMake sure you rendered the website after making changes\n\n\n\n\n\nCheck that data files are in the right location\nVerify you’re using relative paths: \"data/filename.csv\"\nMake sure you’re working within your R project\n\n\n\n\n\nConfirm you committed and pushed all changes\nCheck that GitHub Actions completed successfully (green checkmark)\nWait a few minutes - updates can take time"
  },
  {
    "objectID": "labs/lab_setup_instructions.html#tips-for-success",
    "href": "labs/lab_setup_instructions.html#tips-for-success",
    "title": "Lab Setup Instructions",
    "section": "",
    "text": "Work incrementally: Complete one exercise at a time, render frequently\nUse descriptive commit messages: “Complete filtering exercises for Lab 0”\nKeep files organized: Don’t put data files in wrong folders\nTest locally first: Always render and check before pushing\nAsk for help: Use office hours or discussion board if stuck"
  },
  {
    "objectID": "labs/lab_setup_instructions.html#example-portfolio-structure-after-several-labs",
    "href": "labs/lab_setup_instructions.html#example-portfolio-structure-after-several-labs",
    "title": "Lab Setup Instructions",
    "section": "",
    "text": "your-portfolio/\n├── _quarto.yml\n├── index.qmd\n├── weekly-notes/\n│   ├── index.qmd\n│   ├── week_01.qmd\n│   └── week_02.qmd\n├── labs/\n│   ├── lab_0/\n│   │   ├── index.qmd\n│   │   └── data/\n│   │       └── car_sales_data.csv\n│   ├── lab_1/\n│   │   ├── index.qmd\n│   │   └── data/\n│   │       └── census_data.csv\n│   └── lab_2/\n│       ├── index.qmd\n│       └── data/\n│           └── housing_data.csv\n└── docs/                    # Generated by Quarto\n    ├── index.html\n    ├── weekly-notes/\n    ├── labs/\n    └── ...\nBy the end of the semester, you’ll have a professional portfolio showcasing all your data analysis work!"
  },
  {
    "objectID": "labs/lab_setup_instructions.html#questions",
    "href": "labs/lab_setup_instructions.html#questions",
    "title": "Lab Setup Instructions",
    "section": "",
    "text": "Technical issues: Post on Canvas discussion board\nConceptual questions: Come to office hours\nGitHub problems: Include error messages in your questions"
  },
  {
    "objectID": "labs/lab_0/lab0_template.html",
    "href": "labs/lab_0/lab0_template.html",
    "title": "Lab 0: Getting Started with dplyr",
    "section": "",
    "text": "Welcome to your first lab! In this (not graded) assignment, you’ll practice the fundamental dplyr operations I overviewed in class using car sales data. This lab will help you get comfortable with:\n\nBasic data exploration\nColumn selection and manipulation\n\nCreating new variables\nFiltering data\nGrouping and summarizing\n\nInstructions: Copy this template into your portfolio repository under a lab_0/ folder, then complete each section with your code and answers. You will write the code under the comment section in each chunk. Be sure to also copy the data folder into your lab_0 folder."
  },
  {
    "objectID": "labs/lab_0/lab0_template.html#data-structure-exploration",
    "href": "labs/lab_0/lab0_template.html#data-structure-exploration",
    "title": "Lab 0: Getting Started with dplyr",
    "section": "1.1 Data Structure Exploration",
    "text": "1.1 Data Structure Exploration\nExplore the structure of your data and answer these questions:\n\n# Use glimpse() to see the data structure\n\n\n# Check the column names\nglimpse(car_data)\n\nRows: 50,000\nColumns: 7\n$ Manufacturer          &lt;chr&gt; \"Ford\", \"Porsche\", \"Ford\", \"Toyota\", \"VW\", \"Ford…\n$ Model                 &lt;chr&gt; \"Fiesta\", \"718 Cayman\", \"Mondeo\", \"RAV4\", \"Polo\"…\n$ `Engine size`         &lt;dbl&gt; 1.0, 4.0, 1.6, 1.8, 1.0, 1.4, 1.8, 1.4, 1.2, 2.0…\n$ `Fuel type`           &lt;chr&gt; \"Petrol\", \"Petrol\", \"Diesel\", \"Hybrid\", \"Petrol\"…\n$ `Year of manufacture` &lt;dbl&gt; 2002, 2016, 2014, 1988, 2006, 2018, 2010, 2015, …\n$ Mileage               &lt;dbl&gt; 127300, 57850, 39190, 210814, 127869, 33603, 866…\n$ Price                 &lt;dbl&gt; 3074, 49704, 24072, 1705, 4101, 29204, 14350, 30…\n\n# Look at the first few rows\nhead(car_data)\n\n# A tibble: 6 × 7\n  Manufacturer Model     `Engine size` `Fuel type` `Year of manufacture` Mileage\n  &lt;chr&gt;        &lt;chr&gt;             &lt;dbl&gt; &lt;chr&gt;                       &lt;dbl&gt;   &lt;dbl&gt;\n1 Ford         Fiesta              1   Petrol                       2002  127300\n2 Porsche      718 Caym…           4   Petrol                       2016   57850\n3 Ford         Mondeo              1.6 Diesel                       2014   39190\n4 Toyota       RAV4                1.8 Hybrid                       1988  210814\n5 VW           Polo                1   Petrol                       2006  127869\n6 Ford         Focus               1.4 Petrol                       2018   33603\n# ℹ 1 more variable: Price &lt;dbl&gt;\n\n\nQuestions to answer: - How many rows and columns does the dataset have? - What types of variables do you see (numeric, character, etc.)? - Are there any column names that might cause problems? Why?\nYour answers: - Rows: 50,000 - Columns: 7\n- Variable types: 4x doubles, 3xchr types - Problematic names: Engine size, Fuel type, Year of manufacture"
  },
  {
    "objectID": "labs/lab_0/lab0_template.html#tibble-vs-data-frame",
    "href": "labs/lab_0/lab0_template.html#tibble-vs-data-frame",
    "title": "Lab 0: Getting Started with dplyr",
    "section": "1.2 Tibble vs Data Frame",
    "text": "1.2 Tibble vs Data Frame\nCompare how tibbles and data frames display:\n\n# Look at the tibble version (what we have)\ncar_data\n\n# A tibble: 50,000 × 7\n   Manufacturer Model    `Engine size` `Fuel type` `Year of manufacture` Mileage\n   &lt;chr&gt;        &lt;chr&gt;            &lt;dbl&gt; &lt;chr&gt;                       &lt;dbl&gt;   &lt;dbl&gt;\n 1 Ford         Fiesta             1   Petrol                       2002  127300\n 2 Porsche      718 Cay…           4   Petrol                       2016   57850\n 3 Ford         Mondeo             1.6 Diesel                       2014   39190\n 4 Toyota       RAV4               1.8 Hybrid                       1988  210814\n 5 VW           Polo               1   Petrol                       2006  127869\n 6 Ford         Focus              1.4 Petrol                       2018   33603\n 7 Ford         Mondeo             1.8 Diesel                       2010   86686\n 8 Toyota       Prius              1.4 Hybrid                       2015   30663\n 9 VW           Polo               1.2 Petrol                       2012   73470\n10 Ford         Focus              2   Diesel                       1992  262514\n# ℹ 49,990 more rows\n# ℹ 1 more variable: Price &lt;dbl&gt;\n\n# Convert to regular data frame and display\n# car_df &lt;- as.data.frame(car_data)\n# car_df\n\nQuestion: What differences do you notice in how they print?\nYour answer: data frame will render every single row within the dataset."
  },
  {
    "objectID": "labs/lab_0/lab0_template.html#selecting-columns",
    "href": "labs/lab_0/lab0_template.html#selecting-columns",
    "title": "Lab 0: Getting Started with dplyr",
    "section": "2.1 Selecting Columns",
    "text": "2.1 Selecting Columns\nPractice selecting different combinations of columns:\n\n# Select just Model and Mileage columns\n\nModel_Mileage &lt;- select(car_data, Model, Mileage)\n\n# Select Manufacturer, Price, and Fuel type\n\nManu_price_Fuel &lt;- select(car_data,`Year of manufacture`, Price, `Fuel type`)\n\n# Challenge: Select all columns EXCEPT Engine Size\n\nno_engine &lt;- select(car_data, -`Engine size`)"
  },
  {
    "objectID": "labs/lab_0/lab0_template.html#renaming-columns",
    "href": "labs/lab_0/lab0_template.html#renaming-columns",
    "title": "Lab 0: Getting Started with dplyr",
    "section": "2.2 Renaming Columns",
    "text": "2.2 Renaming Columns\nLet’s fix a problematic column name:\n\n# Rename 'Year of manufacture' to year\n\ncar_data &lt;- rename(car_data, year = `Year of manufacture`)\n\n\n# Check that it worked\nnames(car_data)\n\n[1] \"Manufacturer\" \"Model\"        \"Engine size\"  \"Fuel type\"    \"year\"        \n[6] \"Mileage\"      \"Price\"       \n\n\nQuestion: Why did we need backticks around Year of manufacture but not around year?\nYour answer: spaces"
  },
  {
    "objectID": "labs/lab_0/lab0_template.html#calculate-car-age",
    "href": "labs/lab_0/lab0_template.html#calculate-car-age",
    "title": "Lab 0: Getting Started with dplyr",
    "section": "3.1 Calculate Car Age",
    "text": "3.1 Calculate Car Age\n\n# Create an 'age' column (2025 minus year of manufacture)\n\ncar_data &lt;- car_data %&gt;%\n  mutate(\n    age = 2025 - year,   # compute age\n  )\n\n# Create a mileage_per_year column\ncar_data &lt;- car_data %&gt;%\n  mutate(\n    mileage_per_year = Mileage / age       # compute mileage per year\n  )\n\n\n# Look at your new columns\nselect(car_data, Model, year, age, Mileage, mileage_per_year)\n\n# A tibble: 50,000 × 5\n   Model       year   age Mileage mileage_per_year\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;            &lt;dbl&gt;\n 1 Fiesta      2002    23  127300            5535.\n 2 718 Cayman  2016     9   57850            6428.\n 3 Mondeo      2014    11   39190            3563.\n 4 RAV4        1988    37  210814            5698.\n 5 Polo        2006    19  127869            6730.\n 6 Focus       2018     7   33603            4800.\n 7 Mondeo      2010    15   86686            5779.\n 8 Prius       2015    10   30663            3066.\n 9 Polo        2012    13   73470            5652.\n10 Focus       1992    33  262514            7955.\n# ℹ 49,990 more rows"
  },
  {
    "objectID": "labs/lab_0/lab0_template.html#categorize-cars",
    "href": "labs/lab_0/lab0_template.html#categorize-cars",
    "title": "Lab 0: Getting Started with dplyr",
    "section": "3.2 Categorize Cars",
    "text": "3.2 Categorize Cars\n\n# Create a price_category column where if price is &lt; 15000, its is coded as budget, between 15000 and 30000 is midrange and greater than 30000 is mid-range (use case_when)\n\ncar_data &lt;- car_data %&gt;%\n  mutate(\n    price_category = case_when(\n      Price &lt; 15000 ~ \"budget\",\n      Price &gt;= 15000 & Price &lt;= 30000 ~ \"midrange\",\n      Price &gt; 30000 ~ \"luxury\"\n    )\n  )\n\n# Check your categories select the new column and show it\n\nselect(car_data, Model, Price, price_category)\n\n# A tibble: 50,000 × 3\n   Model      Price price_category\n   &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;         \n 1 Fiesta      3074 budget        \n 2 718 Cayman 49704 luxury        \n 3 Mondeo     24072 midrange      \n 4 RAV4        1705 budget        \n 5 Polo        4101 budget        \n 6 Focus      29204 midrange      \n 7 Mondeo     14350 budget        \n 8 Prius      30297 luxury        \n 9 Polo        9977 budget        \n10 Focus       1049 budget        \n# ℹ 49,990 more rows"
  },
  {
    "objectID": "labs/lab_0/lab0_template.html#basic-filtering",
    "href": "labs/lab_0/lab0_template.html#basic-filtering",
    "title": "Lab 0: Getting Started with dplyr",
    "section": "4.1 Basic Filtering",
    "text": "4.1 Basic Filtering\n\n# Find all Toyota cars\n\ntoyota_cars &lt;- car_data %&gt;%\n  filter(Manufacturer == \"Toyota\")\n\n# Find cars with mileage less than 30,000\n\nlow_mileage &lt;- car_data %&gt;%\n  filter(Mileage &lt; 30000)\n\n# Find luxury cars (from price category) with low mileage\n\nluxury_cars &lt;- car_data %&gt;%\n  filter(price_category == \"luxury\")\n\ntoyota_cars\n\n# A tibble: 12,554 × 10\n   Manufacturer Model `Engine size` `Fuel type`  year Mileage Price   age\n   &lt;chr&gt;        &lt;chr&gt;         &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 Toyota       RAV4            1.8 Hybrid       1988  210814  1705    37\n 2 Toyota       Prius           1.4 Hybrid       2015   30663 30297    10\n 3 Toyota       RAV4            2.2 Petrol       2007   79393 16026    18\n 4 Toyota       Yaris           1.4 Petrol       1998   97286  4046    27\n 5 Toyota       RAV4            2.4 Hybrid       2003  117425 11667    22\n 6 Toyota       Yaris           1.2 Petrol       1992  245990   720    33\n 7 Toyota       RAV4            2   Hybrid       2018   28381 52671     7\n 8 Toyota       Prius           1   Hybrid       2003  115291  6512    22\n 9 Toyota       Prius           1   Hybrid       1990  238571   961    35\n10 Toyota       Prius           1.8 Hybrid       2017   31958 38961     8\n# ℹ 12,544 more rows\n# ℹ 2 more variables: mileage_per_year &lt;dbl&gt;, price_category &lt;chr&gt;\n\nlow_mileage\n\n# A tibble: 5,402 × 10\n   Manufacturer Model      `Engine size` `Fuel type`  year Mileage Price   age\n   &lt;chr&gt;        &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 Toyota       RAV4                 2   Hybrid       2018   28381 52671     7\n 2 VW           Golf                 2   Petrol       2020   18985 36387     5\n 3 BMW          M5                   4   Petrol       2017   22759 97758     8\n 4 Toyota       RAV4                 2.4 Petrol       2018   24588 49125     7\n 5 VW           Golf                 2   Hybrid       2018   25017 36957     7\n 6 Porsche      718 Cayman           2.4 Petrol       2021   14070 69526     4\n 7 Ford         Focus                1.8 Petrol       2020   22371 40336     5\n 8 Ford         Mondeo               1.6 Diesel       2015   21834 28435    10\n 9 VW           Passat               1.6 Diesel       2018   22122 36634     7\n10 VW           Passat               1.4 Diesel       2020   21413 39310     5\n# ℹ 5,392 more rows\n# ℹ 2 more variables: mileage_per_year &lt;dbl&gt;, price_category &lt;chr&gt;\n\nluxury_cars\n\n# A tibble: 6,178 × 10\n   Manufacturer Model      `Engine size` `Fuel type`  year Mileage Price   age\n   &lt;chr&gt;        &lt;chr&gt;              &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 Porsche      718 Cayman           4   Petrol       2016   57850 49704     9\n 2 Toyota       Prius                1.4 Hybrid       2015   30663 30297    10\n 3 Toyota       RAV4                 2   Hybrid       2018   28381 52671     7\n 4 Porsche      911                  2.6 Petrol       2009   66273 41963    16\n 5 Toyota       Prius                1.8 Hybrid       2017   31958 38961     8\n 6 VW           Golf                 2   Petrol       2020   18985 36387     5\n 7 BMW          M5                   4   Petrol       2017   22759 97758     8\n 8 Toyota       RAV4                 2.4 Petrol       2018   24588 49125     7\n 9 Porsche      Cayenne              2.6 Diesel       2015   33693 54037    10\n10 VW           Golf                 2   Hybrid       2018   25017 36957     7\n# ℹ 6,168 more rows\n# ℹ 2 more variables: mileage_per_year &lt;dbl&gt;, price_category &lt;chr&gt;"
  },
  {
    "objectID": "labs/lab_0/lab0_template.html#multiple-conditions",
    "href": "labs/lab_0/lab0_template.html#multiple-conditions",
    "title": "Lab 0: Getting Started with dplyr",
    "section": "4.2 Multiple Conditions",
    "text": "4.2 Multiple Conditions\n\n# Find cars that are EITHER Honda OR Nissan\n\nhonda_nissan &lt;- car_data %&gt;%\n  filter(Manufacturer == \"Honda\" | Manufacturer == \"Nissan\")\n\n# Find cars with price between $20,000 and $35,000\n\nprice_range &lt;- car_data %&gt;%\n  filter(Price &gt;= 20000, Price &lt;= 35000)\n\n# Find diesel cars less than 10 years old\n\ndiesel_recent &lt;- car_data %&gt;%\n  filter(`Fuel type` == \"Diesel\", age &lt; 10)\n\nhonda_nissan\n\n# A tibble: 0 × 10\n# ℹ 10 variables: Manufacturer &lt;chr&gt;, Model &lt;chr&gt;, Engine size &lt;dbl&gt;,\n#   Fuel type &lt;chr&gt;, year &lt;dbl&gt;, Mileage &lt;dbl&gt;, Price &lt;dbl&gt;, age &lt;dbl&gt;,\n#   mileage_per_year &lt;dbl&gt;, price_category &lt;chr&gt;\n\nprice_range\n\n# A tibble: 7,301 × 10\n   Manufacturer Model  `Engine size` `Fuel type`  year Mileage Price   age\n   &lt;chr&gt;        &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 Ford         Mondeo           1.6 Diesel       2014   39190 24072    11\n 2 Ford         Focus            1.4 Petrol       2018   33603 29204     7\n 3 Toyota       Prius            1.4 Hybrid       2015   30663 30297    10\n 4 Toyota       Prius            1.4 Hybrid       2016   43893 29946     9\n 5 Toyota       Prius            1.4 Hybrid       2016   43130 30085     9\n 6 VW           Passat           1.6 Petrol       2016   64344 23641     9\n 7 Ford         Mondeo           1.6 Diesel       2015   21834 28435    10\n 8 BMW          M5               4.4 Petrol       2008  109941 31711    17\n 9 BMW          Z4               2.2 Petrol       2014   61332 26084    11\n10 Porsche      911              3.5 Petrol       2003  107705 24378    22\n# ℹ 7,291 more rows\n# ℹ 2 more variables: mileage_per_year &lt;dbl&gt;, price_category &lt;chr&gt;\n\ndiesel_recent\n\n# A tibble: 2,040 × 10\n   Manufacturer Model   `Engine size` `Fuel type`  year Mileage Price   age\n   &lt;chr&gt;        &lt;chr&gt;           &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 Ford         Fiesta            1   Diesel       2017   38370 16257     8\n 2 VW           Passat            1.6 Diesel       2018   22122 36634     7\n 3 VW           Passat            1.4 Diesel       2020   21413 39310     5\n 4 BMW          X3                2   Diesel       2018   27389 44018     7\n 5 Ford         Mondeo            2   Diesel       2016   51724 28482     9\n 6 Porsche      Cayenne           2.6 Diesel       2019   20147 76182     6\n 7 VW           Polo              1.2 Diesel       2018   37411 19649     7\n 8 Ford         Mondeo            1.8 Diesel       2016   29439 30886     9\n 9 Ford         Mondeo            1.4 Diesel       2020   18929 37720     5\n10 Ford         Mondeo            1.4 Diesel       2018   42017 28904     7\n# ℹ 2,030 more rows\n# ℹ 2 more variables: mileage_per_year &lt;dbl&gt;, price_category &lt;chr&gt;\n\n\nQuestion: How many diesel cars are less than 10 years old?\nYour answer: 2,040"
  },
  {
    "objectID": "labs/lab_0/lab0_template.html#basic-summaries",
    "href": "labs/lab_0/lab0_template.html#basic-summaries",
    "title": "Lab 0: Getting Started with dplyr",
    "section": "5.1 Basic Summaries",
    "text": "5.1 Basic Summaries\n\n# Calculate average price by manufacturer\navg_price_by_brand &lt;- car_data %&gt;%\n  group_by(Manufacturer) %&gt;%\n  summarize(avg_price = mean(Price, na.rm = TRUE))\n\navg_price_by_brand\n\n# A tibble: 5 × 2\n  Manufacturer avg_price\n  &lt;chr&gt;            &lt;dbl&gt;\n1 BMW             24429.\n2 Ford            10672.\n3 Porsche         29104.\n4 Toyota          14340.\n5 VW              10363.\n\n# Calculate average mileage by fuel type\n\navg_price_by_brand &lt;- car_data %&gt;%\n  group_by(`Fuel type`) %&gt;%\n  summarize(avg_mileage = mean(Mileage, na.rm = TRUE))\n\navg_price_by_brand\n\n# A tibble: 3 × 2\n  `Fuel type` avg_mileage\n  &lt;chr&gt;             &lt;dbl&gt;\n1 Diesel          112667.\n2 Hybrid          111622.\n3 Petrol          112795.\n\n# Count cars by manufacturer\n\ncar_counts &lt;- car_data %&gt;%\n  count(Manufacturer)\n\ncar_counts\n\n# A tibble: 5 × 2\n  Manufacturer     n\n  &lt;chr&gt;        &lt;int&gt;\n1 BMW           4965\n2 Ford         14959\n3 Porsche       2609\n4 Toyota       12554\n5 VW           14913"
  },
  {
    "objectID": "labs/lab_0/lab0_template.html#categorical-summaries",
    "href": "labs/lab_0/lab0_template.html#categorical-summaries",
    "title": "Lab 0: Getting Started with dplyr",
    "section": "5.2 Categorical Summaries",
    "text": "5.2 Categorical Summaries\n\n# Frequency table for price categories\n\nfreq_cat &lt;- car_data %&gt;%\n  count(price_category, name = \"frequency\") %&gt;%\n  mutate(proportion = frequency / sum(frequency))\n\nfreq_cat\n\n# A tibble: 3 × 3\n  price_category frequency proportion\n  &lt;chr&gt;              &lt;int&gt;      &lt;dbl&gt;\n1 budget             34040      0.681\n2 luxury              6178      0.124\n3 midrange            9782      0.196"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MUSA 5080 Portfolio",
    "section": "",
    "text": "This portfolio documents my learning journey in Public Policy Analytics (MUSA 5080).\n\n\nAdvanced spatial analysis and data science for urban planning and public policy.\n\n\n\n\nWeekly Notes: My learning reflections and key concepts\nLabs: Completed assignments and analyses\nFinal Project: Capstone modeling challenge\n\n\n\n\nMohamad Al Abbas was born in Beirut, Lebanon. He holds a Bachelor’s degree in Electrical and Computer Engineering and a Master of Arts in International Affairs. He is currently pursuing a joint PhD in Demography and Sociology, though he identifies more closely as an environmental demographer and sociologist. His research focuses on climate change and population health, particularly among children under five and pregnant women. Mohamad’s most recent work argues that using administrative borders as controls in climate–health research is problematic in low- and middle-income countries. Instead, he suggests that researchers adopt definitions based on environmental rather than political boundaries.\nView my full CV | View my Publication list\n\n\n\n\nEmail: ma96@upenn.edu\nGitHub: @MohamadAlAbbas-PhD\n\n\n\n\nMohamad is enrolled in this course to gain a stronger understanding of public policy in relation to urban spatial design, as well as to develop a more streamlined and polished pipeline for coding and research article preparation. He hopes to use this repository as a template for sharing code in publications and scholarly work."
  },
  {
    "objectID": "index.html#about-this-course",
    "href": "index.html#about-this-course",
    "title": "MUSA 5080 Portfolio",
    "section": "",
    "text": "Advanced spatial analysis and data science for urban planning and public policy."
  },
  {
    "objectID": "index.html#portfolio-structure",
    "href": "index.html#portfolio-structure",
    "title": "MUSA 5080 Portfolio",
    "section": "",
    "text": "Weekly Notes: My learning reflections and key concepts\nLabs: Completed assignments and analyses\nFinal Project: Capstone modeling challenge"
  },
  {
    "objectID": "index.html#about-me",
    "href": "index.html#about-me",
    "title": "MUSA 5080 Portfolio",
    "section": "",
    "text": "Mohamad Al Abbas was born in Beirut, Lebanon. He holds a Bachelor’s degree in Electrical and Computer Engineering and a Master of Arts in International Affairs. He is currently pursuing a joint PhD in Demography and Sociology, though he identifies more closely as an environmental demographer and sociologist. His research focuses on climate change and population health, particularly among children under five and pregnant women. Mohamad’s most recent work argues that using administrative borders as controls in climate–health research is problematic in low- and middle-income countries. Instead, he suggests that researchers adopt definitions based on environmental rather than political boundaries.\nView my full CV | View my Publication list"
  },
  {
    "objectID": "index.html#contact",
    "href": "index.html#contact",
    "title": "MUSA 5080 Portfolio",
    "section": "",
    "text": "Email: ma96@upenn.edu\nGitHub: @MohamadAlAbbas-PhD"
  },
  {
    "objectID": "index.html#why-this-course",
    "href": "index.html#why-this-course",
    "title": "MUSA 5080 Portfolio",
    "section": "",
    "text": "Mohamad is enrolled in this course to gain a stronger understanding of public policy in relation to urban spatial design, as well as to develop a more streamlined and polished pipeline for coding and research article preparation. He hopes to use this repository as a template for sharing code in publications and scholarly work."
  },
  {
    "objectID": "cv.html",
    "href": "cv.html",
    "title": "Curriculum Vitae: Mohamad Al Abbas",
    "section": "",
    "text": "PhD in Demography, University of Pennsylvania, Expected May 2028\n\nMA in International Affairs, Lebanese American University, May 2023\nBE in Electrical Engineering, Lebanese American University, August 2019\n\n\n\n\n\nTeaching Assistant, University of Pennsylvania – Graduate School of Education (2025–present)\n\nLead lab sessions on STATA for Principles of Monitoring and Evaluation, a graduate-level course\n\nResearch Assistant, University of Pennsylvania – PIRE Project (2023–present)\n\nNSF-funded project on environmental degradation and child development\n\nPaper: Born in a Haze (forest fires & health outcomes in Indonesia)\n\n\nStatistical Consultant, Department of Sociology, University of Pennsylvania (2023–present)\n\nSupport PhD students in Sociology and Demography\n\nConduct workshops on machine learning techniques\n\n\nResearch Intern, UNDP Office of Audit & Investigations (2022–2023)\n\nDrafted investigation plans, reports, and conducted interviews\n\n\nResearch Intern, Center for International Policy – Technology Policy Program (2022–2023)\n\nDesigned Social Media Harms tracker\n\nAuthored briefs and attended U.S. legislative hearings\n\n\nResearch Assistant – Individual Contractor, UN ESCWA (2022)\n\nBuilt/improved social demographic database (29% → 83% completion)\n\n\nMonitoring & Evaluation Officer, LAU – Graduate Studies & Research (2019–2021)\n\nGraduate Teaching Assistant, LAU – Electrical & Computer Engineering (2019–2021)\n\n\n\n\n\nBenjamin Franklin Fellowship, University of Pennsylvania (2024–2028)\n\nDean’s Fellowship, University of Pennsylvania (2023–2024)\n\nMEPI – Tomorrow’s Leaders Graduate Fellowship, LAU (2021–2023)\n\nOutstanding Researcher Award, LAU (2021)\n\nBest Presentation Award, ICIET Japan (2022)\n\n\n\n\n\nProgramming: R, Python, Stata, Java, Assembly\n\nMachine Learning: NLP, RL, Neural Networks (CNN & RNN), Decision Trees\n\nSoftware: Tableau, MATLAB, SPSS, LaTeX\n\nLanguages: English (Bilingual), Arabic (Native)\n\n\n\n\n\nEmail: ma96@upenn.edu\n\nLinkedIn: linkedin.com/in/mohammadalabbas96\n\nORCID: 0000-0002-2084-8856"
  },
  {
    "objectID": "cv.html#education",
    "href": "cv.html#education",
    "title": "Curriculum Vitae: Mohamad Al Abbas",
    "section": "",
    "text": "PhD in Demography, University of Pennsylvania, Expected May 2028\n\nMA in International Affairs, Lebanese American University, May 2023\nBE in Electrical Engineering, Lebanese American University, August 2019"
  },
  {
    "objectID": "cv.html#experience",
    "href": "cv.html#experience",
    "title": "Curriculum Vitae: Mohamad Al Abbas",
    "section": "",
    "text": "Teaching Assistant, University of Pennsylvania – Graduate School of Education (2025–present)\n\nLead lab sessions on STATA for Principles of Monitoring and Evaluation, a graduate-level course\n\nResearch Assistant, University of Pennsylvania – PIRE Project (2023–present)\n\nNSF-funded project on environmental degradation and child development\n\nPaper: Born in a Haze (forest fires & health outcomes in Indonesia)\n\n\nStatistical Consultant, Department of Sociology, University of Pennsylvania (2023–present)\n\nSupport PhD students in Sociology and Demography\n\nConduct workshops on machine learning techniques\n\n\nResearch Intern, UNDP Office of Audit & Investigations (2022–2023)\n\nDrafted investigation plans, reports, and conducted interviews\n\n\nResearch Intern, Center for International Policy – Technology Policy Program (2022–2023)\n\nDesigned Social Media Harms tracker\n\nAuthored briefs and attended U.S. legislative hearings\n\n\nResearch Assistant – Individual Contractor, UN ESCWA (2022)\n\nBuilt/improved social demographic database (29% → 83% completion)\n\n\nMonitoring & Evaluation Officer, LAU – Graduate Studies & Research (2019–2021)\n\nGraduate Teaching Assistant, LAU – Electrical & Computer Engineering (2019–2021)"
  },
  {
    "objectID": "cv.html#fellowships-awards",
    "href": "cv.html#fellowships-awards",
    "title": "Curriculum Vitae: Mohamad Al Abbas",
    "section": "",
    "text": "Benjamin Franklin Fellowship, University of Pennsylvania (2024–2028)\n\nDean’s Fellowship, University of Pennsylvania (2023–2024)\n\nMEPI – Tomorrow’s Leaders Graduate Fellowship, LAU (2021–2023)\n\nOutstanding Researcher Award, LAU (2021)\n\nBest Presentation Award, ICIET Japan (2022)"
  },
  {
    "objectID": "cv.html#skills",
    "href": "cv.html#skills",
    "title": "Curriculum Vitae: Mohamad Al Abbas",
    "section": "",
    "text": "Programming: R, Python, Stata, Java, Assembly\n\nMachine Learning: NLP, RL, Neural Networks (CNN & RNN), Decision Trees\n\nSoftware: Tableau, MATLAB, SPSS, LaTeX\n\nLanguages: English (Bilingual), Arabic (Native)"
  },
  {
    "objectID": "cv.html#contact",
    "href": "cv.html#contact",
    "title": "Curriculum Vitae: Mohamad Al Abbas",
    "section": "",
    "text": "Email: ma96@upenn.edu\n\nLinkedIn: linkedin.com/in/mohammadalabbas96\n\nORCID: 0000-0002-2084-8856"
  },
  {
    "objectID": "instructions_week1.html",
    "href": "instructions_week1.html",
    "title": "Portfolio Setup Instructions",
    "section": "",
    "text": "Welcome to MUSA 5080! This guide will help you set up your personal portfolio repository for the semester.\n\n\nBy the end of this setup, you’ll have: - Your own portfolio repository on GitHub - live website showcasing your work - A place to document your learning journey\n\n\n\n\nThis is what you are building: Dr. Delmelle’s sample portfolio\n\n\n\n\nBefore starting, make sure you have: - [ ] A GitHub account (create one here if needed) - [ ] Quarto installed on your computer (download here) - [ ] R and RStudio installed\n\n\n\n\n\nYou should already be in your personal repository (created when you accepted the GitHub Classroom assignment). Now let’s personalize it!\n\n\n\nClick on the _quarto.yml file\nClick the pencil icon (✏️) to edit\nChange \"Your Name - MUSA 5080 Portfolio\" to include your actual name\nExample: \"Jane Smith - MUSA 5080 Portfolio\"\nClick “Commit changes” at the bottom\n\n\n\n\n\nClick on the index.qmd file\nClick the pencil icon (✏️) to edit\nUpdate the “About Me” section with your information:\n\nYour name and background\nYour email address\nYour GitHub username\nWhy you’re taking this course\n\nClick “Commit changes”\n\n\n\n\n\nNavigate to the weekly-notes folder\nClick on week-01-notes.qmd\nClick the pencil icon (✏️) to edit\nFill in your notes from the first class\nClick “Commit changes”\n\n\n\n\n\nThis step makes your portfolio visible as a live website!\n\nGo to Settings: Click the “Settings” tab at the top of your repository\nFind Pages: Scroll down and click “Pages” in the left sidebar\nConfigure Source:\n\nSource: Select “Deploy from a branch”\nBranch: Select “main”\nFolder: Select “/ docs”\n\nSave: Click “Save”\nWait: GitHub will show a message that your site is being built (this takes 1-5 minutes)\n\n\n\n\n\nFind Your URL: After a few minutes, GitHub will show your website URL at the top of the Pages settings\n\nIt will look like: https://yourusername.github.io/repository-name\n\nVisit Your Site: Click the link to see your live portfolio!\nBookmark It: Save this URL - you’ll submit it to Canvas\n\n\n\n\n\nCopy your live website URL\nGo to the Canvas assignment\nSubmit your URL\n\n\n\n\n\nIf you want to work on your computer and see changes before publishing:\n\n\n# Replace [your-repo-url] with your actual repository URL\ngit clone [your-repo-url]\ncd [your-repository-name]\n\n\n\n# Edit your files using RStudio\n# Preview your changes:\nquarto render\nquarto preview\n\n# When ready, save your changes:\ngit add .\ngit commit -m \"Update portfolio\"\ngit push\nYour live website will automatically update when you push changes!\n\n\n\n\nEach week you’ll: 1. Create a new file: weekly-notes/week-XX-notes.qmd 2. Copy the template from week-01-notes.qmd 3. Fill in your reflections and key concepts 4. Commit and push your changes\n\n\n\n\n\n\nWait longer: GitHub Pages can take up to 10 minutes to build\nCheck Actions tab: Look for any red X marks indicating build failures\nVerify Pages settings: Make sure you selected “main” branch and “/docs” folder\n\n\n\n\n\nCheck permissions: Make sure you’re in YOUR repository, not the template\nSign in: Ensure you’re signed into GitHub\n\n\n\n\n\nCheck YAML syntax: Make sure your _quarto.yml file has proper formatting\nVerify file names: Files should end in .qmd not .md\nLook at error messages: The Actions tab will show specific error details\n\n\n\n\n\nDon’t panic! Every change is tracked in Git\nSee history: Click the “History” button on any file to see previous versions\nRevert changes: You can always go back to a previous version\n\n\n\n\n\n\nCommit often: Save your work frequently with descriptive commit messages\nUse branches: For major changes, create a new branch and merge when ready\nPreview locally: Use quarto preview to see changes before publishing\nKeep it professional: This portfolio can be shared with future employers!\nDocument everything: Good documentation is as important as good analysis\n\n\n\n\n\nQuarto Documentation\nGitHub Docs\nMarkdown Guide\nGit Tutorial\n\n\n\n\nDuring Class: - Raise your hand for immediate help - Work with classmates - collaboration is encouraged for setup!\nOutside Class: - Office Hours: Mondays 1:30-3:00 PM - Email: delmelle@design.upenn.edu - GitHub Issues: Create an issue in your repository for technical problems - Canvas Discussion: Post questions others might have too\n\n\n\nBefore submitting, make sure you’ve: - [ ] Customized _quarto.yml with your name - [ ] Updated index.qmd with your information - [ ] Completed Week 1 notes - [ ] Enabled GitHub Pages - [ ] Verified your website loads correctly - [ ] Submitted your URL to Canvas\n\nNeed help? Don’t struggle alone - reach out during office hours (mine + TAs) or in class!"
  },
  {
    "objectID": "instructions_week1.html#what-youre-building",
    "href": "instructions_week1.html#what-youre-building",
    "title": "Portfolio Setup Instructions",
    "section": "",
    "text": "By the end of this setup, you’ll have: - Your own portfolio repository on GitHub - live website showcasing your work - A place to document your learning journey"
  },
  {
    "objectID": "instructions_week1.html#example",
    "href": "instructions_week1.html#example",
    "title": "Portfolio Setup Instructions",
    "section": "",
    "text": "This is what you are building: Dr. Delmelle’s sample portfolio"
  },
  {
    "objectID": "instructions_week1.html#prerequisites",
    "href": "instructions_week1.html#prerequisites",
    "title": "Portfolio Setup Instructions",
    "section": "",
    "text": "Before starting, make sure you have: - [ ] A GitHub account (create one here if needed) - [ ] Quarto installed on your computer (download here) - [ ] R and RStudio installed"
  },
  {
    "objectID": "instructions_week1.html#step-by-step-setup",
    "href": "instructions_week1.html#step-by-step-setup",
    "title": "Portfolio Setup Instructions",
    "section": "",
    "text": "You should already be in your personal repository (created when you accepted the GitHub Classroom assignment). Now let’s personalize it!\n\n\n\nClick on the _quarto.yml file\nClick the pencil icon (✏️) to edit\nChange \"Your Name - MUSA 5080 Portfolio\" to include your actual name\nExample: \"Jane Smith - MUSA 5080 Portfolio\"\nClick “Commit changes” at the bottom\n\n\n\n\n\nClick on the index.qmd file\nClick the pencil icon (✏️) to edit\nUpdate the “About Me” section with your information:\n\nYour name and background\nYour email address\nYour GitHub username\nWhy you’re taking this course\n\nClick “Commit changes”\n\n\n\n\n\nNavigate to the weekly-notes folder\nClick on week-01-notes.qmd\nClick the pencil icon (✏️) to edit\nFill in your notes from the first class\nClick “Commit changes”\n\n\n\n\n\nThis step makes your portfolio visible as a live website!\n\nGo to Settings: Click the “Settings” tab at the top of your repository\nFind Pages: Scroll down and click “Pages” in the left sidebar\nConfigure Source:\n\nSource: Select “Deploy from a branch”\nBranch: Select “main”\nFolder: Select “/ docs”\n\nSave: Click “Save”\nWait: GitHub will show a message that your site is being built (this takes 1-5 minutes)\n\n\n\n\n\nFind Your URL: After a few minutes, GitHub will show your website URL at the top of the Pages settings\n\nIt will look like: https://yourusername.github.io/repository-name\n\nVisit Your Site: Click the link to see your live portfolio!\nBookmark It: Save this URL - you’ll submit it to Canvas\n\n\n\n\n\nCopy your live website URL\nGo to the Canvas assignment\nSubmit your URL"
  },
  {
    "objectID": "instructions_week1.html#working-on-your-portfolio-locally-optional-but-recommended",
    "href": "instructions_week1.html#working-on-your-portfolio-locally-optional-but-recommended",
    "title": "Portfolio Setup Instructions",
    "section": "",
    "text": "If you want to work on your computer and see changes before publishing:\n\n\n# Replace [your-repo-url] with your actual repository URL\ngit clone [your-repo-url]\ncd [your-repository-name]\n\n\n\n# Edit your files using RStudio\n# Preview your changes:\nquarto render\nquarto preview\n\n# When ready, save your changes:\ngit add .\ngit commit -m \"Update portfolio\"\ngit push\nYour live website will automatically update when you push changes!"
  },
  {
    "objectID": "instructions_week1.html#weekly-workflow",
    "href": "instructions_week1.html#weekly-workflow",
    "title": "Portfolio Setup Instructions",
    "section": "",
    "text": "Each week you’ll: 1. Create a new file: weekly-notes/week-XX-notes.qmd 2. Copy the template from week-01-notes.qmd 3. Fill in your reflections and key concepts 4. Commit and push your changes"
  },
  {
    "objectID": "instructions_week1.html#troubleshooting",
    "href": "instructions_week1.html#troubleshooting",
    "title": "Portfolio Setup Instructions",
    "section": "",
    "text": "Wait longer: GitHub Pages can take up to 10 minutes to build\nCheck Actions tab: Look for any red X marks indicating build failures\nVerify Pages settings: Make sure you selected “main” branch and “/docs” folder\n\n\n\n\n\nCheck permissions: Make sure you’re in YOUR repository, not the template\nSign in: Ensure you’re signed into GitHub\n\n\n\n\n\nCheck YAML syntax: Make sure your _quarto.yml file has proper formatting\nVerify file names: Files should end in .qmd not .md\nLook at error messages: The Actions tab will show specific error details\n\n\n\n\n\nDon’t panic! Every change is tracked in Git\nSee history: Click the “History” button on any file to see previous versions\nRevert changes: You can always go back to a previous version"
  },
  {
    "objectID": "instructions_week1.html#pro-tips",
    "href": "instructions_week1.html#pro-tips",
    "title": "Portfolio Setup Instructions",
    "section": "",
    "text": "Commit often: Save your work frequently with descriptive commit messages\nUse branches: For major changes, create a new branch and merge when ready\nPreview locally: Use quarto preview to see changes before publishing\nKeep it professional: This portfolio can be shared with future employers!\nDocument everything: Good documentation is as important as good analysis"
  },
  {
    "objectID": "instructions_week1.html#additional-resources",
    "href": "instructions_week1.html#additional-resources",
    "title": "Portfolio Setup Instructions",
    "section": "",
    "text": "Quarto Documentation\nGitHub Docs\nMarkdown Guide\nGit Tutorial"
  },
  {
    "objectID": "instructions_week1.html#getting-help",
    "href": "instructions_week1.html#getting-help",
    "title": "Portfolio Setup Instructions",
    "section": "",
    "text": "During Class: - Raise your hand for immediate help - Work with classmates - collaboration is encouraged for setup!\nOutside Class: - Office Hours: Mondays 1:30-3:00 PM - Email: delmelle@design.upenn.edu - GitHub Issues: Create an issue in your repository for technical problems - Canvas Discussion: Post questions others might have too"
  },
  {
    "objectID": "instructions_week1.html#checklist",
    "href": "instructions_week1.html#checklist",
    "title": "Portfolio Setup Instructions",
    "section": "",
    "text": "Before submitting, make sure you’ve: - [ ] Customized _quarto.yml with your name - [ ] Updated index.qmd with your information - [ ] Completed Week 1 notes - [ ] Enabled GitHub Pages - [ ] Verified your website loads correctly - [ ] Submitted your URL to Canvas\n\nNeed help? Don’t struggle alone - reach out during office hours (mine + TAs) or in class!"
  },
  {
    "objectID": "labs/lab_1/assignment1_template.html",
    "href": "labs/lab_1/assignment1_template.html",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "",
    "text": "You are a data analyst for the [Your State] Department of Human Services. The department is considering implementing an algorithmic system to identify communities that should receive priority for social service funding and outreach programs. Your supervisor has asked you to evaluate the quality and reliability of available census data to inform this decision.\nDrawing on our Week 2 discussion of algorithmic bias, you need to assess not just what the data shows, but how reliable it is and what communities might be affected by data quality issues.\n\n\n\n\nApply dplyr functions to real census data for policy analysis\nEvaluate data quality using margins of error\nConnect technical analysis to algorithmic decision-making\nIdentify potential equity implications of data reliability issues\nCreate professional documentation for policy stakeholders\n\n\n\n\nSubmit by posting your updated portfolio link on Canvas. Your assignment should be accessible at your-portfolio-url/assignments/assignment_1/\nMake sure to update your _quarto.yml navigation to include this assignment under an “Assignments” menu."
  },
  {
    "objectID": "labs/lab_1/assignment1_template.html#scenario",
    "href": "labs/lab_1/assignment1_template.html#scenario",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "",
    "text": "You are a data analyst for the [Your State] Department of Human Services. The department is considering implementing an algorithmic system to identify communities that should receive priority for social service funding and outreach programs. Your supervisor has asked you to evaluate the quality and reliability of available census data to inform this decision.\nDrawing on our Week 2 discussion of algorithmic bias, you need to assess not just what the data shows, but how reliable it is and what communities might be affected by data quality issues."
  },
  {
    "objectID": "labs/lab_1/assignment1_template.html#learning-objectives",
    "href": "labs/lab_1/assignment1_template.html#learning-objectives",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "",
    "text": "Apply dplyr functions to real census data for policy analysis\nEvaluate data quality using margins of error\nConnect technical analysis to algorithmic decision-making\nIdentify potential equity implications of data reliability issues\nCreate professional documentation for policy stakeholders"
  },
  {
    "objectID": "labs/lab_1/assignment1_template.html#submission-instructions",
    "href": "labs/lab_1/assignment1_template.html#submission-instructions",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "",
    "text": "Submit by posting your updated portfolio link on Canvas. Your assignment should be accessible at your-portfolio-url/assignments/assignment_1/\nMake sure to update your _quarto.yml navigation to include this assignment under an “Assignments” menu."
  },
  {
    "objectID": "labs/lab_1/assignment1_template.html#data-retrieval",
    "href": "labs/lab_1/assignment1_template.html#data-retrieval",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "2.1 Data Retrieval",
    "text": "2.1 Data Retrieval\nYour Task: Use get_acs() to retrieve county-level data for your chosen state.\nRequirements: - Geography: county level - Variables: median household income (B19013_001) and total population (B01003_001)\n- Year: 2022 - Survey: acs5 - Output format: wide\nHint: Remember to give your variables descriptive names using the variables = c(name = \"code\") syntax.\n\n# Write your get_acs() code here\n\n# Clean the county names to remove state name and \"County\" \n# Hint: use mutate() with str_remove()\n\n# Display the first few rows"
  },
  {
    "objectID": "labs/lab_1/assignment1_template.html#data-quality-assessment",
    "href": "labs/lab_1/assignment1_template.html#data-quality-assessment",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "2.2 Data Quality Assessment",
    "text": "2.2 Data Quality Assessment\nYour Task: Calculate margin of error percentages and create reliability categories.\nRequirements: - Calculate MOE percentage: (margin of error / estimate) * 100 - Create reliability categories: - High Confidence: MOE &lt; 5% - Moderate Confidence: MOE 5-10%\n- Low Confidence: MOE &gt; 10% - Create a flag for unreliable estimates (MOE &gt; 10%)\nHint: Use mutate() with case_when() for the categories.\n\n# Calculate MOE percentage and reliability categories using mutate()\n\n# Create a summary showing count of counties in each reliability category\n# Hint: use count() and mutate() to add percentages"
  },
  {
    "objectID": "labs/lab_1/assignment1_template.html#high-uncertainty-counties",
    "href": "labs/lab_1/assignment1_template.html#high-uncertainty-counties",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "2.3 High Uncertainty Counties",
    "text": "2.3 High Uncertainty Counties\nYour Task: Identify the 5 counties with the highest MOE percentages.\nRequirements: - Sort by MOE percentage (highest first) - Select the top 5 counties - Display: county name, median income, margin of error, MOE percentage, reliability category - Format as a professional table using kable()\nHint: Use arrange(), slice(), and select() functions.\n\n# Create table of top 5 counties by MOE percentage\n\n# Format as table with kable() - include appropriate column names and caption\n\nData Quality Commentary:\n[Write 2-3 sentences explaining what these results mean for algorithmic decision-making. Consider: Which counties might be poorly served by algorithms that rely on this income data? What factors might contribute to higher uncertainty?]"
  },
  {
    "objectID": "labs/lab_1/assignment1_template.html#focus-area-selection",
    "href": "labs/lab_1/assignment1_template.html#focus-area-selection",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "3.1 Focus Area Selection",
    "text": "3.1 Focus Area Selection\nYour Task: Select 2-3 counties from your reliability analysis for detailed tract-level study.\nStrategy: Choose counties that represent different reliability levels (e.g., 1 high confidence, 1 moderate, 1 low confidence) to compare how data quality varies.\n\n# Use filter() to select 2-3 counties from your county_reliability data\n# Store the selected counties in a variable called selected_counties\n\n# Display the selected counties with their key characteristics\n# Show: county name, median income, MOE percentage, reliability category\n\nComment on the output: [write something :)]"
  },
  {
    "objectID": "labs/lab_1/assignment1_template.html#tract-level-demographics",
    "href": "labs/lab_1/assignment1_template.html#tract-level-demographics",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "3.2 Tract-Level Demographics",
    "text": "3.2 Tract-Level Demographics\nYour Task: Get demographic data for census tracts in your selected counties.\nRequirements: - Geography: tract level - Variables: white alone (B03002_003), Black/African American (B03002_004), Hispanic/Latino (B03002_012), total population (B03002_001) - Use the same state and year as before - Output format: wide - Challenge: You’ll need county codes, not names. Look at the GEOID patterns in your county data for hints.\n\n# Define your race/ethnicity variables with descriptive names\n\n# Use get_acs() to retrieve tract-level data\n# Hint: You may need to specify county codes in the county parameter\n\n# Calculate percentage of each group using mutate()\n# Create percentages for white, Black, and Hispanic populations\n\n# Add readable tract and county name columns using str_extract() or similar"
  },
  {
    "objectID": "labs/lab_1/assignment1_template.html#demographic-analysis",
    "href": "labs/lab_1/assignment1_template.html#demographic-analysis",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "3.3 Demographic Analysis",
    "text": "3.3 Demographic Analysis\nYour Task: Analyze the demographic patterns in your selected areas.\n\n# Find the tract with the highest percentage of Hispanic/Latino residents\n# Hint: use arrange() and slice() to get the top tract\n\n# Calculate average demographics by county using group_by() and summarize()\n# Show: number of tracts, average percentage for each racial/ethnic group\n\n# Create a nicely formatted table of your results using kable()"
  },
  {
    "objectID": "labs/lab_1/assignment1_template.html#moe-analysis-for-demographic-variables",
    "href": "labs/lab_1/assignment1_template.html#moe-analysis-for-demographic-variables",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "4.1 MOE Analysis for Demographic Variables",
    "text": "4.1 MOE Analysis for Demographic Variables\nYour Task: Examine margins of error for demographic variables to see if some communities have less reliable data.\nRequirements: - Calculate MOE percentages for each demographic variable - Flag tracts where any demographic variable has MOE &gt; 15% - Create summary statistics\n\n# Calculate MOE percentages for white, Black, and Hispanic variables\n# Hint: use the same formula as before (margin/estimate * 100)\n\n# Create a flag for tracts with high MOE on any demographic variable\n# Use logical operators (| for OR) in an ifelse() statement\n\n# Create summary statistics showing how many tracts have data quality issues"
  },
  {
    "objectID": "labs/lab_1/assignment1_template.html#pattern-analysis",
    "href": "labs/lab_1/assignment1_template.html#pattern-analysis",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "4.2 Pattern Analysis",
    "text": "4.2 Pattern Analysis\nYour Task: Investigate whether data quality problems are randomly distributed or concentrated in certain types of communities.\n\n# Group tracts by whether they have high MOE issues\n# Calculate average characteristics for each group:\n# - population size, demographic percentages\n\n# Use group_by() and summarize() to create this comparison\n# Create a professional table showing the patterns\n\nPattern Analysis: [Describe any patterns you observe. Do certain types of communities have less reliable data? What might explain this?]"
  },
  {
    "objectID": "labs/lab_1/assignment1_template.html#analysis-integration-and-professional-summary",
    "href": "labs/lab_1/assignment1_template.html#analysis-integration-and-professional-summary",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "5.1 Analysis Integration and Professional Summary",
    "text": "5.1 Analysis Integration and Professional Summary\nYour Task: Write an executive summary that integrates findings from all four analyses.\nExecutive Summary Requirements: 1. Overall Pattern Identification: What are the systematic patterns across all your analyses? 2. Equity Assessment: Which communities face the greatest risk of algorithmic bias based on your findings? 3. Root Cause Analysis: What underlying factors drive both data quality issues and bias risk? 4. Strategic Recommendations: What should the Department implement to address these systematic issues?\nExecutive Summary:\n[Your integrated 4-paragraph summary here]"
  },
  {
    "objectID": "labs/lab_1/assignment1_template.html#specific-recommendations",
    "href": "labs/lab_1/assignment1_template.html#specific-recommendations",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "6.3 Specific Recommendations",
    "text": "6.3 Specific Recommendations\nYour Task: Create a decision framework for algorithm implementation.\n\n# Create a summary table using your county reliability data\n# Include: county name, median income, MOE percentage, reliability category\n\n# Add a new column with algorithm recommendations using case_when():\n# - High Confidence: \"Safe for algorithmic decisions\"\n# - Moderate Confidence: \"Use with caution - monitor outcomes\"  \n# - Low Confidence: \"Requires manual review or additional data\"\n\n# Format as a professional table with kable()\n\nKey Recommendations:\nYour Task: Use your analysis results to provide specific guidance to the department.\n\nCounties suitable for immediate algorithmic implementation: [List counties with high confidence data and explain why they’re appropriate]\nCounties requiring additional oversight: [List counties with moderate confidence data and describe what kind of monitoring would be needed]\nCounties needing alternative approaches: [List counties with low confidence data and suggest specific alternatives - manual review, additional surveys, etc.]"
  },
  {
    "objectID": "labs/lab_1/assignment1_template.html#questions-for-further-investigation",
    "href": "labs/lab_1/assignment1_template.html#questions-for-further-investigation",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "Questions for Further Investigation",
    "text": "Questions for Further Investigation\n[List 2-3 questions that your analysis raised that you’d like to explore further in future assignments. Consider questions about spatial patterns, time trends, or other demographic factors.]"
  },
  {
    "objectID": "labs/lab_1/assignment1_template.html#submission-checklist",
    "href": "labs/lab_1/assignment1_template.html#submission-checklist",
    "title": "Assignment 1: Census Data Quality for Policy Decisions",
    "section": "Submission Checklist",
    "text": "Submission Checklist\nBefore submitting your portfolio link on Canvas:\n\nAll code chunks run without errors\nAll “[Fill this in]” prompts have been completed\nTables are properly formatted and readable\nExecutive summary addresses all four required components\nPortfolio navigation includes this assignment\nCensus API key is properly set\nDocument renders correctly to HTML\n\nRemember: Submit your portfolio URL on Canvas, not the file itself. Your assignment should be accessible at your-portfolio-url/assignments/assignment_1/your_file_name.html"
  },
  {
    "objectID": "Publications.html",
    "href": "Publications.html",
    "title": "Mohamad Al Abbas - MUSA 5080 Portfolio",
    "section": "",
    "text": "Born in a Haze: Early-life exposure to forest fires and child health in Indonesia\n\nExamines impacts of forest fire–related haze on children’s HAZ/WAZ growth indicators using IFLS data.\n\nDevelops clustering algorithms and k-means quintile regression for fire exposure.\n\nCrude Consequences: The Impact of Oil Spills on Child Health and Environmental Vulnerability in Nigeria\n\nIntegrates MICS data with daily oil spill trackers.\n\nExplores stratified vulnerability and child health outcomes.\n\nClimate–Health across Biomes: Stratified impacts of precipitation and temperature on children’s health\n\nMulti-country analysis of diarrhea, fever, cough, and WHZ outcomes.\n\nExamines biome interactions with climate anomalies.\n\nCross-Border Nutritional Vulnerability in Shared Ecologies (India, Bangladesh, Nepal)\n\nDHS-based spatial analysis of child undernutrition near borders.\n\nTests whether ecological context outweighs political boundaries.\n\nCRAM (Climate-Resilient Access Metric): Healthcare isolation in vulnerable regions\n\nDeveloping an index to measure resilience of healthcare access to climate shocks.\n\nFocus on flood seasonality and maternal health risks.\n\nLong-Term PM2.5 Exposure and Cardiovascular Disease in Indonesia\n\nCohort-based study using IFLS (2000–2014).\n\nModels morbidity-adjusted CVD outcomes under cumulative pollution exposure.\n\nDisaster–Health Mediation: Natural disasters as instruments for water contamination\n\nUses IV regression with MICS surveys to assess diarrheal outcomes.\n\nExplores mediation via healthcare-seeking behaviors and infrastructure."
  },
  {
    "objectID": "Publications.html#ongoing-research-projects",
    "href": "Publications.html#ongoing-research-projects",
    "title": "Mohamad Al Abbas - MUSA 5080 Portfolio",
    "section": "",
    "text": "Born in a Haze: Early-life exposure to forest fires and child health in Indonesia\n\nExamines impacts of forest fire–related haze on children’s HAZ/WAZ growth indicators using IFLS data.\n\nDevelops clustering algorithms and k-means quintile regression for fire exposure.\n\nCrude Consequences: The Impact of Oil Spills on Child Health and Environmental Vulnerability in Nigeria\n\nIntegrates MICS data with daily oil spill trackers.\n\nExplores stratified vulnerability and child health outcomes.\n\nClimate–Health across Biomes: Stratified impacts of precipitation and temperature on children’s health\n\nMulti-country analysis of diarrhea, fever, cough, and WHZ outcomes.\n\nExamines biome interactions with climate anomalies.\n\nCross-Border Nutritional Vulnerability in Shared Ecologies (India, Bangladesh, Nepal)\n\nDHS-based spatial analysis of child undernutrition near borders.\n\nTests whether ecological context outweighs political boundaries.\n\nCRAM (Climate-Resilient Access Metric): Healthcare isolation in vulnerable regions\n\nDeveloping an index to measure resilience of healthcare access to climate shocks.\n\nFocus on flood seasonality and maternal health risks.\n\nLong-Term PM2.5 Exposure and Cardiovascular Disease in Indonesia\n\nCohort-based study using IFLS (2000–2014).\n\nModels morbidity-adjusted CVD outcomes under cumulative pollution exposure.\n\nDisaster–Health Mediation: Natural disasters as instruments for water contamination\n\nUses IV regression with MICS surveys to assess diarrheal outcomes.\n\nExplores mediation via healthcare-seeking behaviors and infrastructure."
  },
  {
    "objectID": "Publications.html#in-progress-methodological-work",
    "href": "Publications.html#in-progress-methodological-work",
    "title": "Mohamad Al Abbas - MUSA 5080 Portfolio",
    "section": "In Progress Methodological Work",
    "text": "In Progress Methodological Work\n\nMultistate Life Table Models\n\nTransition modeling between Healthy–Unhealthy–Dead states in IFLS morbidity data.\n\nReplication of Payne et al. (2013) with microsimulation extensions.\n\nSpatial Climate–Health Pipelines\n\nDynamic extraction of precipitation/temperature anomalies via CHIRPS/NOAA rasters.\n\nIntegrating z-scores and climate windows aligned with DHS/MICS survey interviews."
  },
  {
    "objectID": "Publications.html#publications",
    "href": "Publications.html#publications",
    "title": "Mohamad Al Abbas - MUSA 5080 Portfolio",
    "section": "Publications",
    "text": "Publications\n\nDisparate social impacts by satellite and self-report: Floods in Pernambuco, Brazil — Population & Environment (under review)\n\nRacism, Discrimination, and Scapegoating in the Era of COVID-19 — IMS Policy and Working Paper Series\nEnvironmental Determinants of Migration: Air Pollution in Developing Nations — IMS Blog – Borders and Limitations (2022)\n\nGender Inequity in Engineering Higher Education: A Case Study of an American University in a Middle Eastern Country — ICIET Conference Proceedings (2022)\n\nThe Impact of Faculty Scholarly Collaborations with Non-Doctoral Students — IEEE IRTM Conference (2022)\n\nThe Lebanese Diaspora: From Passive to Retaliatory — IMS Blog – Borders and Limitations (2022)\n\nQuantifying Publisher’s Competence Through Scholarly Engagement — Publishing Research Quarterly (2021)\n\nA Case Study of Gender Diversity in a Middle Eastern University — IEEE IT-Based Higher Education & Training Conference (2021)\n\nSetting the Boundaries of COVID-19 Lockdown Relaxation Measures — Library Hi Tech (2021)\n\nSustainable Gender Equity Influenced by an Americanized Lebanese Pedagogy — World Conference on Women’s Studies (2021)\n\nToward an Improvement of Engineering Teaming Skills Through an In-House Professionalism Course — IEEE Transactions on Education (2020)\n\nFormation of Policies Guided by Multivariable Control Theory — Operations Research Perspectives (2020)\n\nThe Impact of Collaborative Research: A Case Study in a Developing Country — IEEE SMIT Conference (2020)\n\nOn the Impact of Multi-Authorship Scholarly Publications — IEEE ATMR Conference (2020)"
  },
  {
    "objectID": "weekly-notes/week-02-notes.html#coding-techniques",
    "href": "weekly-notes/week-02-notes.html#coding-techniques",
    "title": "Week 2 Notes - Course Introduction",
    "section": "## Coding Techniques",
    "text": "## Coding Techniques"
  },
  {
    "objectID": "weekly-notes/week-02-notes.html#questions-challenges",
    "href": "weekly-notes/week-02-notes.html#questions-challenges",
    "title": "Week 2 Notes - Course Introduction",
    "section": "Questions & Challenges",
    "text": "Questions & Challenges"
  },
  {
    "objectID": "weekly-notes/week-02-notes.html#connections-to-policy",
    "href": "weekly-notes/week-02-notes.html#connections-to-policy",
    "title": "Week 2 Notes - Course Introduction",
    "section": "Connections to Policy",
    "text": "Connections to Policy"
  },
  {
    "objectID": "weekly-notes/week-02-notes.html#reflection",
    "href": "weekly-notes/week-02-notes.html#reflection",
    "title": "Week 2 Notes - Course Introduction",
    "section": "## Reflection",
    "text": "## Reflection"
  },
  {
    "objectID": "weekly-notes/week-04-notes.html",
    "href": "weekly-notes/week-04-notes.html",
    "title": "Week 1 Notes - Course Introduction",
    "section": "",
    "text": "Setting up repositories on"
  },
  {
    "objectID": "weekly-notes/week-04-notes.html#key-concepts-learned",
    "href": "weekly-notes/week-04-notes.html#key-concepts-learned",
    "title": "Week 1 Notes - Course Introduction",
    "section": "",
    "text": "Setting up repositories on"
  },
  {
    "objectID": "weekly-notes/week-04-notes.html#coding-techniques",
    "href": "weekly-notes/week-04-notes.html#coding-techniques",
    "title": "Week 1 Notes - Course Introduction",
    "section": "Coding Techniques",
    "text": "Coding Techniques\n\nBasics of tidyverse and its accompanying commands of filter(), select(), mutate(), and summarize()\nQuarto functions on how to bold, italics, both bold and italics, code list, and strikethrough"
  },
  {
    "objectID": "weekly-notes/week-04-notes.html#questions-challenges",
    "href": "weekly-notes/week-04-notes.html#questions-challenges",
    "title": "Week 1 Notes - Course Introduction",
    "section": "Questions & Challenges",
    "text": "Questions & Challenges\n\n\n\nEverything was clear. I would still like to mess around more with Quarto."
  },
  {
    "objectID": "weekly-notes/week-04-notes.html#connections-to-policy",
    "href": "weekly-notes/week-04-notes.html#connections-to-policy",
    "title": "Week 1 Notes - Course Introduction",
    "section": "Connections to Policy",
    "text": "Connections to Policy\n\n\nThis was a building block week, so not much of direct application rather tracking and documentation baseline for setup."
  },
  {
    "objectID": "weekly-notes/week-04-notes.html#reflection",
    "href": "weekly-notes/week-04-notes.html#reflection",
    "title": "Week 1 Notes - Course Introduction",
    "section": "Reflection",
    "text": "Reflection\n\nLearning how to create a custom repository was both enjoyable and insightful.\nIt could also serve as a way to share supplementary analyses and to present code in a more public, graphical, and accessible format for non-coding audiences."
  }
]