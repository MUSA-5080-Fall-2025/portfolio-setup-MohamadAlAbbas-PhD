---
title: "Assignment 1: Census Data Quality for Policy Decisions"
subtitle: "Evaluating Data Reliability for Algorithmic Decision-Making"
author: "Mohamad Al Abbas"
date: today
format: 
  html:
    code-fold: false
    toc: true
    toc-location: left
    theme: cosmo
execute:
  warning: false
  message: false
---

# Assignment Overview

## Scenario

You are a data analyst for the **California Department of Human Services**. The department is considering implementing an algorithmic system to identify communities that should receive priority for social service funding and outreach programs. Your supervisor has asked you to evaluate the quality and reliability of available census data to inform this decision.
 
Drawing on our Week 2 discussion of algorithmic bias, you need to assess not just what the data shows, but how reliable it is and what communities might be affected by data quality issues.

## Learning Objectives

- Apply dplyr functions to real census data for policy analysis
- Evaluate data quality using margins of error 
- Connect technical analysis to algorithmic decision-making
- Identify potential equity implications of data reliability issues
- Create professional documentation for policy stakeholders

# Part 1: Portfolio Integration

# Setup

```{r setup}
# Load required packages (hint: you need tidycensus, tidyverse, and knitr)

library(tidycensus)
library(tidyverse)
library(knitr)

# Set your Census API key

census_api_key("807ea1c0820a3e1e46dde3c53438622057fcc1ba")

# Choose your state for analysis - assign it to a variable called my_state

my_state <- "California"
```

**State Selection:** I have chosen California for this analysis because: I am currently on working on the wildfires that had occurred there with a few partners from UC: San Diego, so I know a bit about the state and pop density + I wish to visit it during the winter break :)!

# Part 2: County-Level Resource Assessment

## 2.1 Data Retrieval

**Your Task:** Use `get_acs()` to retrieve county-level data for your chosen state.

**Requirements:**
- Geography: county level
- Variables: median household income (B19013_001) and total population (B01003_001)  
- Year: 2022
- Survey: acs5
- Output format: wide

**Hint:** Remember to give your variables descriptive names using the `variables = c(name = "code")` syntax.

```{r county-data}
# Write your get_acs() code here
county_vars <- c( med_hh_income = "B19013_001", total_pop     = "B01003_001")

county_raw <- get_acs(geography = "county", state =  my_state, survey = "acs5", year = 2022, variables = county_vars, output = "wide")

# Clean the county names to remove state name and "County" 
# Hint: use mutate() with str_remove()

county <- county_raw %>%
  mutate(
    county_name = str_remove(NAME, paste0(", ", my_state)),
    county_name = str_remove(county_name, " County$")
  ) %>%
  select(GEOID, county_name, med_hh_incomeE, med_hh_incomeM, total_popE, total_popM)

# Display the first few rows
head(county)
```

## 2.2 Data Quality Assessment

**Your Task:** Calculate margin of error percentages and create reliability categories.

**Requirements:**
- Calculate MOE percentage: (margin of error / estimate) * 100
- Create reliability categories:
  - High Confidence: MOE < 5%
  - Moderate Confidence: MOE 5-10%  
  - Low Confidence: MOE > 10%
- Create a flag for unreliable estimates (MOE > 10%)

**Hint:** Use `mutate()` with `case_when()` for the categories.

```{r income-reliability}
# Calculate MOE percentage and reliability categories using mutate()
county_reliability <- county %>%
  mutate(
    moe_percentage = round((med_hh_incomeM/med_hh_incomeE) * 100, 2),
    reliability = case_when(
      moe_percentage < 5 ~ "High Confidence",
      moe_percentage >= 5 & moe_percentage <= 10 ~ "Moderate Confidence",
      moe_percentage > 10 ~ "Low Confidence"
    )
  )

# Create a summary showing count of counties in each reliability category
# Hint: use count() and mutate() to add percentages

reliability_summary <- county_reliability %>%
  count(reliability, name = "Count") %>%
  mutate(Proportion = round(100 * Count / sum(Count), 1))

kable(reliability_summary, caption = "County Income Reliability Categories")

```

## 2.3 High Uncertainty Counties

**Your Task:** Identify the 5 counties with the highest MOE percentages.

**Requirements:**
- Sort by MOE percentage (highest first)
- Select the top 5 counties
- Display: county name, median income, margin of error, MOE percentage, reliability category
- Format as a professional table using `kable()`

**Hint:** Use `arrange()`, `slice()`, and `select()` functions.

```{r high-uncertainty}
# Create table of top 5 counties by MOE percentage

top5 <- county_reliability %>%
  arrange(desc(moe_percentage)) %>%
  slice(1:5) %>%
  select(
    county_name,
    med_hh_incomeE,
    med_hh_incomeM,
    moe_percentage,
    reliability
  )
  
# Format as table with kable() - include appropriate column names and caption

kable(
  top5,
  caption = "Top 5 Counties by Median Household Income MOE Percentage",
  col.names = c("County", "Median Income", "Margin of Error", "MOE %", "Reliability Category"),
  digits = 2,
  align = c("l", "c", "c", "c", "c"),
  format.args = list(big.mark = ",")
)
```

**Data Quality Commentary:**

All five of these counties are among the lowest-density areas in California. Because their populations are so small, the ACS relies on limited samples to generate median income estimates, which introduces greater variability. This explains the large disparities and the relatively high margins of error (11â€“19%). As a result, algorithms that classify or rank counties using these figures could produce erroneous outcomes if they neglect the margins of error. For example, Alpine County appears to have a median income exceeding \$100,000, but its margin of error is more than $17,000 an uncertainty that is enormous relative to its ~1,000 residents. This is both a sampling size and representativeness issue, highlighting how misleading the raw point estimate can be without MOE context.

# Part 3: Neighborhood-Level Analysis

## 3.1 Focus Area Selection

**Your Task:** Select 2-3 counties from your reliability analysis for detailed tract-level study.

**Strategy:** Choose counties that represent different reliability levels (e.g., 1 high confidence, 1 moderate, 1 low confidence) to compare how data quality varies.

```{r select-counties}
# Use filter() to select 2-3 counties from your county_reliability data
# Store the selected counties in a variable called selected_counties

selected_counties <- bind_rows(
  county_reliability %>%
    filter(reliability == "High Confidence") %>%
    slice(1),
  county_reliability %>%
    filter(reliability == "Moderate Confidence") %>%
    slice(1),
  county_reliability %>%
    filter(reliability == "Low Confidence") %>%
    slice(1),
) %>%
  select(
    County = county_name,
    `Median Income` = med_hh_incomeE,
    `Margin of Error` = med_hh_incomeM,
    `MOE %` = moe_percentage,
    Reliability = reliability,
    Population = total_popE
  )

# Display the selected counties with their key characteristics
# Show: county name, median income, MOE percentage, reliability category
kable(
  selected_counties,
  caption = "Largest County by Population in Each Reliability Category",
  align = c("l", "r", "r", "r", "l", "r"),
  format.args = list(big.mark = ",")
)
```

**Comment on the output:** Because I specified no randomness in how the slice is sampling the data across the reliability categories, it quite literally picked the first match it had. Which is why all three are arranged alphabetically. On the positive side we still have atleast 1 sample from each category and Alpine is still with us :)! The lowest county by density in California. 

## 3.2 Tract-Level Demographics

**Your Task:** Get demographic data for census tracts in your selected counties.

**Requirements:**
- Geography: tract level
- Variables: white alone (B03002_003), Black/African American (B03002_004), Hispanic/Latino (B03002_012), total population (B03002_001)
- Use the same state and year as before
- Output format: wide
- **Challenge:** You'll need county codes, not names. Look at the GEOID patterns in your county data for hints.

```{r tract-demographics}
# Define your race/ethnicity variables with descriptive names

race_vars <- c(
  total    = "B03002_001",
  white    = "B03002_003",
  black    = "B03002_004",
  hispanic = "B03002_012"
)


# Use get_acs() to retrieve tract-level data
# Hint: You may need to specify county codes in the county parameter

county_codes <- unique(str_sub(county$GEOID, 3, 5))

tract_raw <- get_acs(
  geography = "tract",
  state     = my_state,
  county    = county_codes,
  survey    = "acs5",
  year      = 2022,
  variables = race_vars,
  output    = "wide"
)


# Calculate percentage of each group using mutate()
# Create percentages for white, Black, and Hispanic populations

tract_percent <- tract_raw %>%
  mutate(
    county_code  = substr(GEOID, 3, 5),
    pct_white    = 100 * (whiteE    / totalE),
    pct_black    = 100 * (blackE    / totalE),
    pct_hispanic = 100 * (hispanicE / totalE),
    tract_label  = str_remove(NAME, paste0(", ", my_state)),
    tract_label  = str_remove(tract_label, ", United States$")
  ) %>%
  left_join(
    county %>%
      mutate(county_code = substr(GEOID, 3, 5)) %>% #I doubled checked the counts with the census website.
      select(county_code, county_name),
    by = "county_code"
  ) %>%
  select(
    GEOID, county_name, tract_label,
    totalE, whiteE, blackE, hispanicE,
    totalM, whiteM, blackM, hispanicM,
    pct_white, pct_black, pct_hispanic
  )


# Add readable tract and county name columns using str_extract() or similar

kable(
  tract_percent %>% count(county_name, name = "Number of Tracts"),
  caption = "Tracts Retrieved per Selected County",
  align = c("l", "c"),
  col.names = c("County Names", "Number of Tracts")
)
```

## 3.3 Demographic Analysis

**Your Task:** Analyze the demographic patterns in your selected areas.

```{r demographic-analysis}
# Find the tract with the highest percentage of Hispanic/Latino residents
# Hint: use arrange() and slice() to get the top tract

top_hispanic_tract <- tract_percent %>%
  arrange(desc(pct_hispanic)) %>%
  slice(1) %>%
  select(GEOID, tract_label, county_name, pct_hispanic)

kable(top_hispanic_tract, caption = "Tract with Highest % Hispanic/Latino")

# Calculate average demographics by county using group_by() and summarize()
# Show: number of tracts, average percentage for each racial/ethnic group

county_demo_avgs <- tract_percent %>%
  group_by(county_name) %>%
  summarise(
    "Number of Tracts" = n(),
    "Average White Percentage" = mean(pct_white, na.rm = TRUE),
    "Average Black Percentage" = mean(pct_black, na.rm = TRUE),
    "Average Hispanic Percentage"  = mean(pct_hispanic, na.rm = TRUE)
  )

# Create a nicely formatted table of your results using kable()

kable(
  county_demo_avgs,
  caption = "Average Tract Demographics by County",
  digits = 1,
  align = c("l","c","c","c","c")
)

```

# Part 4: Comprehensive Data Quality Evaluation

## 4.1 MOE Analysis for Demographic Variables

**Your Task:** Examine margins of error for demographic variables to see if some communities have less reliable data.

**Requirements:**
- Calculate MOE percentages for each demographic variable
- Flag tracts where any demographic variable has MOE > 15%
- Create summary statistics

```{r demographic-moe}
# Calculate MOE percentages for white, Black, and Hispanic variables
# Hint: use the same formula as before (margin/estimate * 100)

# Create a flag for tracts with high MOE on any demographic variable
# Use logical operators (| for OR) in an ifelse() statement

tract_quality <- tract_percent %>%
  mutate(
    moe_total_pct    = 100 * (totalM    / totalE),
    moe_white_pct    = 100 * (whiteM    / whiteE),
    moe_black_pct    = 100 * (blackM    / blackE),
    moe_hispanic_pct = 100 * (hispanicM / hispanicE),
    high_moe_flag = (moe_white_pct > 15) | (moe_black_pct > 15) | (moe_hispanic_pct > 15)
  )

# Create summary statistics showing how many tracts have data quality issues

tract_quality_summary <- tract_quality %>%
  summarise(
    tracts_total = n(),
    tracts_high_moe = sum(high_moe_flag, na.rm = TRUE),
    percent_high_moe = round(100 * tracts_high_moe / tracts_total, 1)
  )

kable(
  tract_quality_summary,
  caption = "Tract-Level High-MOE Summary (>15% on any demographic variable)",
  col.names = c("Total Tracts", "High-MOE Tracts", "Percent High-MOE (%)"),
  align = "c"
)


```

## 4.2 Pattern Analysis

**Your Task:** Investigate whether data quality problems are randomly distributed or concentrated in certain types of communities.

```{r pattern-analysis}
# Group tracts by whether they have high MOE issues
# Calculate average characteristics for each group:
# - population size, demographic percentages

pattern_table <- tract_quality %>%
  group_by(high_moe_flag, county_name) %>%
  summarise(
    tracts = n(),
    avg_pop = mean(totalE, na.rm = TRUE),
    avg_pct_white = mean(pct_white, na.rm = TRUE),
    avg_pct_black = mean(pct_black, na.rm = TRUE),
    avg_pct_hispanic = mean(pct_hispanic, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  arrange(desc(high_moe_flag), county_name)

# Use group_by() and summarize() to create this comparison
# Create a professional table showing the patterns

kable(
  pattern_table,
  caption = "Characteristics by High-MOE Status (Any Demographic Variable > 15% MOE)",
  digits = 1,
  format.args = list(big.mark = ",")
)

```

**Pattern Analysis:** Detecting patterns in MOE is not straightforward, especially given well-known challenges of minority representation in surveys like the ACS. Still, two clear dynamics emerge. First, tracts with a high-MOE flag tend to have smaller average populations than those without flags, which reflects how limited sample sizes inflate sampling error. Second, the racial/ethnic composition of flagged tracts highlights underrepresentation of minority groups. Many high-MOE tracts are White-dominant, but when examining subgroup estimates within these tracts, Black and Hispanic populations frequently have margins of error above 15%â€”and in some cases no sampled observations at all, producing infinite MOE values (I did not address this in the code as no instructions indicated I do so). This indicates that ACS sampling struggles to reliably capture smaller minority populations, which causes margins of error to balloon and undermines the reliability of these tracts as decision-making units.


# Part 5: Policy Recommendations

## 5.1 Analysis Integration and Professional Summary

**Your Task:** Write an executive summary that integrates findings from all four analyses.

**Executive Summary Requirements:**
1. **Overall Pattern Identification**: What are the systematic patterns across all your analyses?
2. **Equity Assessment**: Which communities face the greatest risk of algorithmic bias based on your findings?
3. **Root Cause Analysis**: What underlying factors drive both data quality issues and bias risk?
4. **Strategic Recommendations**: What should the Department implement to address these systematic issues?

**Executive Summary:**

Across county- and tract-level analyses, two systematic patterns consistently appear. First, tracts and counties with smaller populations tend to have disproportionately high margins of error, making their estimates far less stable than those from larger areas. Second, the reliability of racial and ethnic subgroup estimates varies sharply: Black and Hispanic populations are much more likely to have margins of error above 15%, and in some cases, the ACS does not capture enough observations to produce valid estimates. Together, these patterns show that measurement error is pervasive but not random it reflects structural features of both tract size and demographic composition.

Communities facing the greatest risk of algorithmic bias are those that are either very small and rural or racially/ethnically diverse. Rural tracts, because of small sample sizes, may be flagged as unreliable and thus deprioritized in automated systems, despite having genuine needs. At the same time, urban minority communities, particularly those with large Hispanic or Black populations, often show the highest subgroup MOEs, meaning their conditions could be systematically misclassified or underestimated. In both cases, the communities already at risk of marginalization are the same ones where the data is least reliable.

The drivers of these problems are structural. In rural areas, small sample sizes inflate margins of error, while in diverse urban tracts, underrepresentation of minority subgroups disrupts the accuracy of need assessments. This underrepresentation is tied to long-standing stratification in data collection, where certain groups are less visible in surveys, and to socio-spatial self-selection, where minorities concentrate in particular neighborhoods that are often harder to measure with precision. These processes produce systematic biases: the very communities whose needs are greatest â€” low-income, minority, and geographically marginalized â€” are those most likely to be misrepresented in the data.

The Department should treat reliability as central to its algorithmic framework. Specifically, it should (a) adjust for MOE when prioritizing communities, so noisy estimates are not misclassified as real differences; (b) avoid strict cutoffs in low-confidence areas by using broader eligibility bands; (c) supplement ACS data with administrative or community-level sources in minority-dense neighborhoods where subgroup reliability is weakest; and (d) incorporate transparency and equity audits to ensure that stratification and data gaps do not reinforce existing inequalities. By embedding these safeguards, the Department can ensure its allocation strategies are both statistically sound and socially just.

## 6.3 Specific Recommendations

**Your Task:** Create a decision framework for algorithm implementation.

```{r recommendations-data}
# Create a summary table using your county reliability data
# Include: county name, median income, MOE percentage, reliability category

recommendations <- county_reliability %>%
  select(
    County = county_name,
    `Median Income` = med_hh_incomeE,
    `MOE %` = moe_percentage,
    `Reliability Category` = reliability
  ) %>%
  mutate(
    Recommendation = case_when(
      `Reliability Category` == "High Confidence"     ~ "Safe for algorithmic decisions",
      `Reliability Category` == "Moderate Confidence" ~ "Use with caution â€“ monitor outcomes",
      `Reliability Category` == "Low Confidence"      ~ "Requires manual review or additional data",
      TRUE                                            ~ NA_character_
    )
  )

# Add a new column with algorithm recommendations using case_when():
# - High Confidence: "Safe for algorithmic decisions"
# - Moderate Confidence: "Use with caution - monitor outcomes"  
# - Low Confidence: "Requires manual review or additional data"

# Format as a professional table with kable()

kable(
  recommendations %>%
    arrange(Recommendation, County),
  caption = "Decision Framework for Algorithm Implementation (Arranged by Recommendation)",
  col.names = c("County", "Median Income", "MOE %", "Reliability Category", "Recommendation"),
  digits = 2,
  format.args = list(big.mark = ",")
)


```

**Key Recommendations:**

**Your Task:** Use your analysis results to provide specific guidance to the department.

1. **Counties suitable for immediate algorithmic implementation:** Alameda, Butte, Contra Costa, El Dorado, Fresno, Humboldt, Imperial, Kern, Kings, Lake, Los Angeles, Madera Marin, Mendocino, Merced, Monterey, Napa,  Nevada, Orange, Placer, Riverside, Sacramento, San Bernardino, San Diego, San Francisco, San Joaquin, San Luis Obispo, San Mateo, Santa Barbara, Santa Clara, Santa Cruz, Shasta,Siskiyou, Solano, Sonoma, Stainislaus, Sutter, Tulare, Ventura, Yolo, and Yuba  

2. **Counties requiring additional oversight:** Amador, Calaveras, Colusa, Del Norte, Glenn, Inyo, Lassen, Mariposa, Modoc, San Benito, Tehama, and Tuolumne

3. **Counties needing alternative approaches:** Alpine, Mono, Plumas, Sierra, and Trinity
## Questions for Further Investigation

Are high-MOE tracts clustered spatially (e.g., along ruralâ€“urban boundaries or in specific regions of the state), or do they appear evenly dispersed?

Do MOE patterns persist across ACS releases, or do they improve over time with larger samples? A time-series comparison could reveal whether underrepresentation of minority or rural communities is a persistent structural issue, similar to how you track flood or disaster impacts across years.

How do MOE patterns for racial and ethnic groups vary across states? Are high MOEs for Hispanic and Black populations a uniquely California phenomenon, or do they reflect a broader national issue embedded in ACS sampling design?

# Technical Notes

**Data Sources:** 
- U.S. Census Bureau, American Community Survey 2018-2022 5-Year Estimates
- Retrieved via tidycensus R package on [date]

**Reproducibility:** 
- All analysis conducted in R version 4.5.1
- Census API key required for replication
- Complete code and documentation available at: https://musa-5080-fall-2025.github.io/portfolio-setup-MohamadAlAbbas-PhD/

**Methodology Notes:**
Margins of error (MOE) were standardized as percentages of the estimate, and counties were classified into High, Moderate, and Low Confidence categories using thresholds of <5%, 5â€“10%, and >10% respectively. Reliability flags at the tract level were set when any racial/ethnic subgroup estimate exceeded 15% MOE. No smoothing or imputation was applied to extreme or infinite MOE values; tracts with zero subgroup observations were retained as-is to reflect the raw survey limitations.

County codes were extracted directly from GEOID strings to facilitate joins, and descriptive statistics were calculated using simple group means. Data outputs were formatted using kable() for presentation, and no additional modeling or weighting adjustments were performed beyond what the ACS provides.

**Limitations:**
Several limitations should be noted. The scale of our unit of analysis demonstrates that census tract-level analysis tends to carry high MOEs that makes interpretation and deployment of algorithmic solutions problematic rather it might be ideal to use county-level analysis. Second, subgroup estimates for racial and ethnic minorities often carried very high MOEs, and in some cases, no observations were available, producing infinite or undefined percentages. These issues were left unadjusted to remain consistent with assignment instructions but highlight important data reliability challenges.

Third, the analysis is limited to a single 5-year ACS period; no longitudinal comparison was made to assess whether MOE patterns persist or shift over time. Finally, aggregating tract-level characteristics to the county level masks within-county variability that may be relevant for equity considerations. 

---

## Submission Checklist

Before submitting your portfolio link on Canvas:

- [ ] All code chunks run without errors
- [ ] All "[Fill this in]" prompts have been completed
- [ ] Tables are properly formatted and readable
- [ ] Executive summary addresses all four required components
- [ ] Portfolio navigation includes this assignment
- [ ] Census API key is properly set 
- [ ] Document renders correctly to HTML

**Remember:** Submit your portfolio URL on Canvas, not the file itself. Your assignment should be accessible at `your-portfolio-url/assignments/assignment_1/your_file_name.html`